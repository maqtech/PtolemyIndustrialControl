<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Features that were new in previous Ptolemy II releases </title>
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#faf0e6">
<h1>Features that were new in previous Ptolemy II releases</h1>

 <!-- When we create a new release, we move the new features from 
      the old release here so that we can browse them.
      See also the quick tour in ptII/doc/tour
-->

<h2>Major Features that were new in Ptolemy 3.0 </h2>
<menu>

<li> Continuous Time (CT) domain rework for improved mixed signal and
hybrid systems semantics
(Jie Liu, Parc, and Haiyang Zheng).

<li> <a href="../ptolemy/domains/ci/doc/body.htm" target="body">Component Interaction Domain</a>
(Yang Zhao, Xiaojun Liu) - The CI domain models systems that contain
both data-driven and demand-driven styles of computation.

<li> Rework of FSM domain to support chained transitions
and better hybrid systems semantics (Haiyang Zheng).

<li> Expression language rework to create a full-featured, functional
and higher-order expression language with extensive support for
composite types such as matrices, arrays, and records;
the expression language is also now fully integrated with the Ptolemy II
type system
 (Steve Neuendorffer, Edward A. Lee).

<li> Configurations have been reworked to make it much easier to
create standalone tools that extract portions of the Ptolemy II
infrastructure and have customized user interfaces, documentation,
and actor and director libraries.
Configurations have been refactored into
separate directories in <CODE>$PTII/ptolemy/configs</CODE>,
and one example of such a standalone tool, HyVisual, is provided.

<li> Updates to Vergil, the user interface for building models
(Steve Neuendorffer, Edward A. Lee, John Reekie):
	<menu>
	<li> Run buttons on the toolbar and hotkeys.
        <li> Persistent window sizing and placement.
	<li> Undo/Redo.
	<li> Port Parameters.
	<li><CODE>vergil -help</CODE> lists available configurations.
	<li> Full-screen mode for use in presentations.
        </menu>

<li> Other user interface improvements
(Steve Neuendorffer, Edward A. Lee):
        <menu>
        <li> Interactive shells infrastructure.
        <li> An interactive expression shell using this infrastructure.
	<li> Infrastructure for specialized token viewers.
        Files with the extension .ptd are now opened by a token viewer.
        The default token viewers is a text editor, but others can be
	added in the configuration.
	<li> A matrix token viewer.
        </menu>

<li> HSIF Support
(Haiyang Zheng).
The Hybrid System Interchange Format (HSIF), was developed by the
<a href="http://www.isis.vanderbilt.edu#in_browser">
Institute of Software Integrated Systems (ISIS) at Vanderbilt University</a>
as part of the
<a href="http://www.isis.vanderbilt.edu/Projects/mobies/default.html#in_browser">ISIS MoBIES</a> effort.
The HSIF documentation states:
<menu>
"The goal of HSIF is to define an interchange format for hybrid system
models that can be shared between modeling and analysis tools. HSIF
models represent dynamic systems, whose dynamics includes both
continuous and discrete behaviors."
</menu>
Haiyang Zheng developed a set of XSLT files that convert
HSIF into MoML, the XML format used to represent Ptolemy II Models.
See the <a href="../ptolemy/hsif/demo/index.htm">HSIF/MoML documentation</a>.
</li>

<li> A first version of higher-order components, the
<a href="codeDoc/ptolemy/actor/lib/hoc/MultiInstanceComposite.html">
MultiInstanceComposite</a> actor
(Zoltan Kemenczy and Sean Simmons, Research In Motion, Ltd.).
This actor creates a parameterized number of instances of a composite
actor.

<li>
Python integration, with a
<a href="codeDoc/ptolemy/actor/lib/python/PythonScript.html">PythonScript</a>
actor that permits definition of actors in Python (Xiaojun Liu).
This uses
<a href="http://www.jython.org/#in_browser" target="_top">Jython</a>,
a Java implementation of Python.
</menu>
<h2>Other Features that are new in Ptolemy II 3.0</h2>

<ul>

<li> Ptolemy II Matlab interface updates
(Zoltan Kemenczy and Sean Simmons, Research In Motion, Ltd.):
<menu>
<li> Logical variable support for Matlab version 6.5 (R13).
<li> Remove (the need for) ptmatlab.dll being in the user's path.
<li> Removed warnings for gcc version 3.2 (used by latest cygwins).
<li> Add support/configuration for building on Linux.
</menu>
Resources:
 <menu>
 <li> <a href="../ptolemy/matlab/matlab.htm">
Ptolemy II Matlab Interface Overview</a>
 <a href="codeDoc/ptolemy/matlab/package-summary.html">
Java class documentation</a>
 <li> <a href="../ptolemy/matlab/demo/MatlabExpression/MatlabExpression.xml">
Matlab Expression Demonstration</a>,
 <li> <a href="../ptolemy/matlab/demo/MatlabCT/MatlabCT.xml">
Matlab Continuous Time Demonstration</a>
</menu>
These demos require that Matlab be installed locally; they will not work
within an applet, but will work with Web Start.

<li> <a href="http://embedded.eecs.berkeley.edu/caltrop/index.html#in_browser" target="_top">Cal Actor Language (CAL)</a>
(J&ouml;rn W. Janneck, Chris Chang, Johan Ecker,
John Reekie, Yang Zhao, Ed Willink, Lars Wernli):

<br>The CAL actor language is a textual notation for representing the
functionality of dataflow actors. It is designed to allow low-entropy
descriptions of actors by providing statically analyzable information
about the behavior of an actor, such as the number of tokens it
produces and consumes in each firing, whether there are any conditions
on being able to fire, what those conditions depend on, etc.

<br>CAL demos:
<a href="../ptolemy/cal/demo/FunctionClosures/FunctionClosures.xml">Function Closures</a>,
<a href="../ptolemy/cal/demo/FunctionDefinition/FunctionDefinition.xml">Function Definition</a>,
<a href="../ptolemy/cal/demo/Primes/Primes.xml">Primes</a>,
<a href="../ptolemy/cal/demo/SDFDDI/SDFDDI.xml">SDFDDI</a>.

<li> <a href="codegen.htm">Code generator improvements</a>
(Steve Neuendorffer, Christopher Hylands):
The Java code generator now handles Expression actors.
The code generator now works with Java 1.4.
The applet generator has been extended to copy necessary jar
files on an as needed basis.

<li> <a href="codeDoc/ptolemy/data/FunctionToken.html">FunctionToken</a>
class (Xiaojun Liu, Steve Neuendorffer): An expression that defines a function
can be passed among actors in a function token.

<li> Transition Refinements: A transition in an FSM can have
a refinement, which is a model that executes when the refinement
is taken.

<li> <a href="codeDoc/ptolemy/kernel/attributes/FileAttribute.html">
FileAttribute</a> class
(Edward A. Lee).
This attribute makes it easy to create a parameter in an actor
that represents a file or resource. It supports specification
of files using paths relative to the model, the classpath, or
the user directory.  It also provides a convenient user interface for
selecting and accessing files on the file system.

<li> <a href="codeDoc/ptolemy/data/ImageToken.html">ImageToken</a> class
(James Yeh): An abstract token that contains images.  Derived tokens
such as 
<a href="codeDoc/ptolemy/data/AWTImageToken.html">
AWTImageToken</a>,
<a href="codeDoc/ptolemy/actor/lib/jai/JAIImageToken.html">
ptolemy.actor.lib.jai.JAIImageToken</a>
provide concrete classes.

<li> Interface to C actors using the Java Native Interface
(Vincent Arnould, Thales, contributor: Christopher Hylands):
The <a href="codeDoc/jni/package-summary.html">jni</a>
package contains a prototype of an interface between Ptolemy II actors
and C code by using the Java Native Interface (JNI).
To use this facility, you must download and install Ptolemy II 
from source.
</ul>

<h3>New Demonstrations</h3>

<menu>
<li> <a href="../ptolemy/domains/ci/doc/body.htm" target="body">CI</a>:
	Component Interaction

 <menu>
 <li> <a href="../ptolemy/domains/ci/demo/Router/Router.xml">Router</a> 
 </menu>

<li> <a href="../ptolemy/domains/ct/doc/body.htm" target="body">CT</a>:
	Continuous Time
<menu>

<li> <a href="../ptolemy/domains/ct/demo/ComparedClocks/ComparedClocks.xml">Compared Clocks</a>

<li> <a href="../ptolemy/matlab/demo/MatlabCT/MatlabCT.xml">Matlab Continuous Time Demonstration</a>

<li>HSIF Thermostat and Swimming Pool
<br> This example shows a simple thermostat modeled as a hybrid system.
The purpose of the example is to demonstrate the ability that HyVisual has
to import models defined in HSIF, the <i>Hybrid System Interchange Format</i>.
To run HSIF models, you must invoke Ptolemy II with the <CODE>-hyvisual</CODE>
command line argument or else run the HyVisual Web Edition.  These
models will not work in a standard Ptolemy II vergil or Web Edition
because to support HSIF, we need to check xml each file to see
if it is an HSIF file of a MoML file.  This check slows Ptolemy II
down slightly.

 <br>See the <a href="../ptolemy/hsif/demo/index.htm">HSIF/MoML documentation</a> for details.

<li><a href="../ptolemy/hsif/demo/SwimmingPool/SwimmingPool.xml">HSIF Swimming Pool</a>.
<br> This example shows a simple hybrid system model of a pool.

<li> <a href="../ptolemy/domains/ct/demo/LevelCrossingDetector/LevelCrossingDetector.xml">Level Crossing Detector</a>
<li> <a href="../ptolemy/domains/ct/demo/SampledClocks/SampledClocks.xml">Sampled Clocks</a>
</menu>

<li> <a href="../ptolemy/domains/de/doc/body.htm" target="body">DE</a>:
	 Discrete Event
 <menu>
 <li> <a href="../ptolemy/actor/lib/hoc/demo/HocDE/HocDE.xml">HOC DE</a>  (New in Ptolemy II 3.0.2)
 </menu>


<li><a href="../ptolemy/domains/fsm/doc/body.htm" target="body">FSM</a>:
	Finite State Machine
 <menu>
<li> <a href="../ptolemy/domains/fsm/demo/ChainedTransitions/ChainedTransitions.xml">Chained Transitions</a>
 <li> <a href="../ptolemy/domains/fsm/demo/ModalBSC/ModalBSC.xml">Modal&nbsp;Binary Symmetric Channel</a>
 <li> <a href="../ptolemy/domains/fsm/demo/StateTracker/StateTracker.xml">State&nbsp;Tracker</a>
 </menu>

<li> <a href="../ptolemy/domains/sdf/doc/body.htm" target="body">SDF</a>:
	Synchronous Dataflow
 <menu>
 <li><a href="../ptolemy/actor/lib/hoc/demo/DFTSubSet/DFTSubSet.xml">DFT Subset</a>
 <li><a href="../ptolemy/domains/sdf/demo/FourierSeries/FourierSeries.xml">Fourier Series</a>
 <li><a href="../ptolemy/domains/sdf/demo/SoundSpectrum/SoundSpectrum.xml">Sound Spectrum</a>
 </menu>
</menu>


<h3>New Actors</h3>

<ul>

<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">ptolemy.actor.lib</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/actor/lib/ArrayMaximum.html"><code>ArrayMaximum</code></a>
<dd> (Mark Oliver)
Extract maximum element from an array. (New in Ptolemy II 3.0.2)

<dt> <a href="codeDoc/ptolemy/actor/lib/ArrayMinimum.html"><code>ArrayMinimum</code></a>
<dd> (Mark Oliver, Edward A. Lee)
Extract minimum element from an array. (New in Ptolemy II 3.0.2)



<dt> <a href="codeDoc/ptolemy/actor/lib/BusAssembler.html"><code>BusAssembler</code></a>
<dd> (Zoltan Kemenczy, Research in Motion Limited)
Assemble input port channels into output bus.

<dt> <a href="codeDoc/ptolemy/actor/lib/BusDisassembler.html"><code>BusDisassembler</code></a>
<dd> (Zoltan Kemenczy, Research in Motion Limited)
split input bus channels onto output port channels.

<dt> <a href="codeDoc/ptolemy/actor/lib/Rician.html"><code>Rician</code></a>
<dd> (Rachel Zhou)
An actor that outputs a random sequence with a Rician distribution.

<dt> <a href="codeDoc/ptolemy/actor/lib/Stop.html"><code>Stop</code></a>
<dd> (Edward A. Lee)
An actor that stops a model executing when it receives a true token.

<dt> <a href="codeDoc/ptolemy/actor/lib/ThrowException.html"><code>ThrowException</code></a>
<dd> (Edward A. Lee)
An actor that throws an exception when it receives a true token.

<dt> <a href="codeDoc/ptolemy/actor/lib/ThrowModelError.html"><code>ThrowModelError</code></a>
<dd> (Edward A. Lee)
An actor that throws a model error when it receives a true token.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/comm/package-summary.html">ptolemy.actor.lib.comm</a>:

<dl>

 <dt> <a href="codeDoc/ptolemy/actor/lib/comm/ConvolutionalCoder.html"><code>ConvolutionalCoder</code></a>

<dd> (Rachel Zhou) Generate a convolutional code.

 <dt> <a href="codeDoc/ptolemy/actor/lib/comm/DeScrambler.html"><code>DeScrambler</code></a>
<dd> (Rachel Zhou) Descramble the input bit sequence using a feedback shift register.

 <dt> <a href="codeDoc/ptolemy/actor/lib/comm/HadamardCode.html"><code>HadamardCode</code></a>
<dd> (Rachel Zhou) Produce a Hadamard codeword by selecting a row from a Hadamard matrix.

 <dt> <a href="codeDoc/ptolemy/actor/lib/comm/Scrambler.html"><code>Scrambler</code></a>
<dd> (Rachel Zhou) Given an input bit sequence, scramble it in a pseudo random way.

 <dt> <a href="codeDoc/ptolemy/actor/lib/comm/ViterbiDecoder.html"><code>ViterbiDecoder</code></a>
<dd> (Rachel Zhou) Viterbi Decoder.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/conversions/package-summary.html">ptolemy.actor.lib.conversions</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/ExpressionToToken.html"><code>ExpressionToToken</code></a>
<dd> (Steve Neuendorffer)
An actor that reads expressions and parses them into tokens.


<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/TokenToExpression.html"><code>TokenToExpression</code></a>
<dd> (Steve Neuendorffer)
An actor that converts tokens into expressions.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/jai/package-summary.html">ptolemy.actor.lib.jai</a>:

<dl>
<dt> Java Advanced Imaging actors
<dd> (James Yeh)
Actors that use the Java Advanced Imagining framework
</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/jmf/package-summary.html">ptolemy.actor.lib.jmf</a>:

<dl>
<dt> Java Media Framework actors
<dd> (James Yeh)
Actors that use the Java Media Framework
</dl>


</ul>


<h2>Changes between Ptolemy II 3.0.1 and 3.0.2</h2>
Ptolemy II 3.0.1 was an interim release with a narrow distribution.
<br>The following changes occurred between 3.0.1 and 3.0.2

<h3>Actors that were added between Ptolemy II 3.0.1 and 3.0.2</h3>
<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/ArrayMaximum.html"><code>ArrayMaximum</code></a>
<dd> (Mark Oliver)
Extract maximum element from an array.

<dt> <a href="codeDoc/ptolemy/actor/lib/ArrayMinimum.html"><code>ArrayMinimum</code></a>
<dd> (Mark Oliver, Edward A. Lee)
Extract minimum element from an array.

</dl>

<h3>Enhancements between Ptolemy II 3.0.1 and 3.0.2</h3>
<dl>
<dt> <code>$PTII/configure.in</code>,
<code>$PTII/configure</code>,
<code>$PTII/.classpath.in</code>,
<code>$PTII/.eclipse.epf</code>,
<code>$PTII/configs/FindClass.java</code>
<dd> Support for <a href="coding/eclipse.htm">configuring Eclipse</a>.

</dl>
<h3>Bug Fixes between Ptolemy II 3.0.1 and 3.0.2</h3>
<dl>
<dt> <code>ptolemy/domains/sdf/lib/vq/ImageSequence.java</code>
<dd> Adjusted initial value of imageURLTemplate parameter
<dt> <code>ptolemy/domains/sdf/lib/Autocorrelation.java</code>
<dd> Can now handle complex data.
<dt> <code>lib/saxon7.jar</code>
Updated to 7.6.5 of Saxon.  This was necessary to get both
the HSIF demos and the Cal demos to work.
<dt> <code>ptolemy/vergil/actor/ActorEditorGraphController.java</code>
<dd> Under MacOS look and feel, use Command-Click to create new
relations and drag new edges
<dt> <code>ptolemy/vergil/toolbox/PtolemyTransferable.java</code>
<dd> Under MacOS look and feel, change how we instantiate
the DataFlavor so as to avoid a stack trace
<dt> <code>ptolemy/actor/gui/TextEffigy.java</code>
<dd> If the user tries to open a missing file, throw a better exception.
</dl>

<h2>Major Features that are new in Ptolemy 2.0 </h2>
<menu>

<li> <a href="../ptolemy/domains/de/demo/ModalModel/ModalModel.htm">Modal Models</a>
 (Xiaojun Liu, Edward A. Lee)
<br>A model model is one whose behavior depends on its "mode"
of operation. A modal model in Ptolemy II is an FSM (finite state machine)
combined hierarchically with other models. A state in the FSM represents
a mode of operation, and can have a refinement that gives the behavior
in that model.
The refinement can be another FSM or some other model using some other
Ptolemy domain. This example combines DE, FSM, and SDF to model a
system where regularly sampled signals are perturbed by irregular
events in time.
</li>

<li> <a href="codegen.htm">Code Generation</a>
(Primary Author: Stephen Neuendorffer, Contributor: Christopher Hylands)
 <br>This release includes a limited prototype of our code generation facility
that will generate .class files for non-hierarchical SDF models.

 <br>Note that the code generator will not work in an applet, but will
work with Web Start, the Windows installer and the standard configure
and build.

<li> <a href="codeDoc/ptolemy/data/unit/package-summary.html">ptolemy.data.unit</a> -
<a href="../ptolemy/data/unit/demo/Units/Units.htm">Units Demo</a>
(Primary Authors: Yuhong Xiong, Xiaojun Liu, Contributors: Winthrop Williams, Edward A. Lee)
<br>
A major source of errors in embedded software is incorrect application
of units. Yuhong Xiong and Xiaojun Liu have created a unit system for
Ptolemy II that is quite clever. A suite of constants are defined, with
names such as "meter", "cm", "feet", "miles", "seconds", "hours", and
"days". In each unit category ("length" or "time" for example), there
is a primary unit with respect to which all the others are specified.
Thus, for example, if the primary unit of length is meters, then the
expression "1.0 * cm" will have an internal value of 0.01 * meters.
Compound units are specified by just multiplying and dividing, as in
for example "1.0 * cm/second".

<p>The way this is realized is that these unit constants are tokens just
like other Ptolemy II data, and multiplication and division are
overloaded in the base classes for numeric valued tokens.  We continue
to work on this architecture to enable users to customize the unit
system on a per-model basis.

<li> <a href="../ptolemy/domains/tm/doc/body.htm" target="body">Timed Multitasking Domain</a>
(Jie Liu) - an implementation of a model of
computation based on priority-driven multitasking, as common in
real-time operating systems (RTOSs), but with more deterministic
behavior.

<li> <a href="../ptolemy/domains/sr/doc/body.htm" target="body">Synchronous/Reactive Domain</a>:
(Primary Author: Paul Whitaker, Contributors: Elaine Cheong, John Reekie)

<li> <a href="webStartHelp.htm">Web Start</a>
 (Christopher Hylands) -  
Ptolemy II includes support to build distributions using Sun's Web Start
facility, which allows end users to download fully functional distributions
via the web.

<li> Vergil updates
(Steve Neuendorffer, Edward A. Lee, John Reekie)
 Vergil has been improved
 and the following features have been added
	<menu>
	<li> Annotations - It is now much easier to annotate a model with
	text.
	<li> Parameters - The model can display top level parameter
	names and values
	<li> Snap to grid - It is now much easier to line up actors
	<li> Panner, zoom - The panner and zoom facilities make
	it easier to navigate large
	<li> Improved FSM editor
	<li> Animation - It is now possible to show which actors are firing
	when.
	<li> Better icons - Some icons such as Const, Scale and Expression
	will display their values.  
	<li> Set data types of ports
	<li> Java Virtual Machine properties window - JVM Properties
	can be queried and garbage collection requested.
	<li> <a href="../ptolemy/domains/ct/doc/signal_types.htm">Documentation for setting CT signal types</a>
	</menu>
See <a href="design/usingVergil/index.htm"><code>$PTII/doc/design/usingVergil/index.htm</code></a> for more complete information

</menu>

<h2>Other Features that are new in Ptolemy II 2.0</h2>

<ul>


<li> <a href="../ptolemy/domains/giotto/doc/body.htm" target="body">Giotto Domain rewrite</a>: 
(Haiyang Zheng) - The Giotto scheduler was rewritten and the kernel
was updated.

<li> <a href="../ptolemy/domains/fsm/demo/MultipleRuns/MultipleRuns.htm">Multiple Runs</a>
(Xiaojun Liu, Edward A. Lee) - The FSM domain as been extended
to perform multiple runs of refinement on a model.

<li> <a href="coding/debugging.htm">Support for <code>jdb</code></a> 
(Zoltan Kemenczy, Research In Motion, Ltd.) -
The scripts that invoke Ptolemy II have been extended to support
<code>jdb</code>, the Java Debugger.

<li> Ptolemy II Matlab interface
(Zoltan Kemenczy and Sean Simmons, Research In Motion, Ltd.) -
The Matlab Expression actor uses JNI to invoke the Matlab engine, 
evaluate Matlab expressions and return the results to Ptolemy II.
The Matlab Expression actor works only under Windows, and requires
that Matlab be installed on your local machine.
 <menu>
 <li> <a href="../ptolemy/matlab/matlab.htm">Ptolemy II Matlab Interface Overview</a>
 <a href="codeDoc/ptolemy/matlab/package-summary.html">Java class documentation</a>
 <li> <a href="../ptolemy/matlab/demo/MatlabExpression/MatlabExpression.xml">Matlab Expression Demonstration</a> -
 Windows only, requires that Matlab be installed locally, will not work within
 an applet, but will work with Web Start.
 </menu>

<li> <a href="codeDoc/ptolemy/data/expr/package-summary.html">Expression improvements</a>
(Zoltan Kemenczy and Sean Simmons of Research In Motion, Ltd.)
Functions with scalar arguments applied to arrays and matrices
element-by-element (recursive argument dimension reduction); widened search
for static function (and method) signatures that includes most ptolemy.math
classes; performance improvements by caching search results; widened token to
java-type conversions for function arguments and results.


<li> <a href="codeDoc/ptolemy/graph/package-summary.html">ptolemy.graph</a>
 (Shuvra S. Bhattacharyya (University of Maryland at College Park)) -
The graph package was redesigned and reimplemented.


<li> <a href="codeDoc/ptolemy/kernel/attributes/VersionAttribute.html">VersionAttribute</a>
(Christopher Hylands, Edward A. Lee) -
Models can be annotated with the Web Start format version number of
Ptolemy II that is required to run the model.  In the future, we will
use this attribute to manage backward compatibility.

<li> <a href="codeDoc/ptolemy/data/UnsignedByteToken.html">ptolemy.data.UnsignedByteToken</a>
(Winthrop Williams, Steve Neuendorffer) - A new Token supporting
unsigned bytes.

 <!-- Tcl shell is not shipping in 2.0, it makes the download larger.-->

</ul>

<h3>New Demonstrations</h3>

<menu>
<li> <a href="../ptolemy/domains/ct/doc/body.htm" target="body">CT</a>:
	Continuous Time
 <menu>
 <li> <a href="../ptolemy/domains/ct/demo/BouncingBall/BouncingBall.htm">Bouncing Ball</a>  (Requires Java 3D, see the <a href="../ptolemy/domains/gr/doc/main.htm">GR domain</a>)
 A Continuous Time model that uses a Finite State Machine and the GR
 domain to simulate a bouncing ball.

 <li> <a href="../ptolemy/domains/ct/demo/CarTracking/CarTracking.htm">Car Tracking</a>
 A following car tracking a leading car in an unreliable 
 communication environment.

 <li> <a href="../ptolemy/domains/ct/demo/Switch/Switch.htm">Switching Continuous Signals</a>
 Shows how to handle hybrid systems with both continuous and discrete inputs
 and outputs.
 <li> <a href="../ptolemy/domains/ct/demo/Thermostat/Thermostat.htm">Modal Thermostat</a>
 A thermostat model where the refinements of the
 modes in the state machine are the same model.
 <li> <a href="../ptolemy/data/unit/demo/Units/Units.htm">Units</a>
 A demonstration of the Units facility.
 </menu>
<li> <a href="../ptolemy/domains/de/doc/body.htm" target="body">DE</a>:
	 Discrete Event
<menu>
<li> <a href="../ptolemy/domains/de/demo/ModalModel/ModalModel.htm">Modal Model</a>
This example combines DE, FSM, and SDF to model a
system where regularly sampled signals are perturbed by irregular
events in time.
</menu>


<li> <a href="../ptolemy/domains/fsm/doc/body.htm" target="body">FSM</a>:
	 Finite State Machines
 <menu>
 <li> <a href="../ptolemy/domains/fsm/demo/Blending/Blending.htm">Blending</a>
 A blending controller with two major control modes.
 <li> <a href="../ptolemy/domains/fsm/demo/MultipleRuns/MultipleRuns.htm">Multiple&nbsp;Runs</a> 
 A state machine performs multiple runs of the refinement of mode1. 
 </menu>

<li><a href="../ptolemy/domains/giotto/doc/body.htm" target="body">Giotto</a>:
	Synchronous Periodic Systems
 <menu>
 <li> <a href="../ptolemy/domains/giotto/demo/Composite/Composite.htm">Composite</a>
A composite demo with a Giotto model embedded in a DE model.

 </menu>

<li><a href="../ptolemy/domains/gr/doc/body.htm" target="body">GR</a>:
	3-D graphics (experimental)
 <menu>
 <li> <a href="../ptolemy/domains/gr/demo/FurutaPendulum/FurutaPendulum.htm">FurutaPendulum</a>
 The Furuta pendulum has a motor controlling the angle of an arm, from
 which a free-swinging pendulum hangs. The objective is to swing the
 pendulum up and then balance it.

 </menu>

<li> <a href="../ptolemy/domains/sdf/doc/body.htm" target="body">SDF</a>:
	Synchronous Dataflow
 <menu>
 <li><a href="../ptolemy/domains/sdf/demo/LMSAdaptive/LMSAdaptive.htm">LMSAdaptive</a>
 An adaptive filter.
 <li><a href="../ptolemy/domains/sdf/demo/MaximumEntropySpectrum/MaximumEntropySpectrum.htm">MaximumEntropySpectrum</a>
 A spectral estimation example.
 </menu>


<li> <a href="../ptolemy/domains/sr/doc/body.htm" target="body">SR</a>:
	Synchronous/Reactive (experimental)
 <menu>
 <li><a href="../ptolemy/domains/sr/demo/TokenRing/TokenRing.htm">TokenRing</a>
 A cyclic token-ring arbiter composed of three blocks.
 </menu>

<li> <a href="../ptolemy/domains/tm/doc/body.htm" target="body">TM</a>:
	Timed Multitasking (experimental).
 <menu>
 <li><a href="../ptolemy/domains/tm/demo/Controllers/Controllers.htm" target="main">Controllers</a>
   Two (independent) control loops whose controllers share the same CPU.
 <li><a href="../ptolemy/domains/tm/demo/FFT/FFT.htm" target="main">FFT</a>
   This model shows the use of background process for long running tasks in 
   the TM domain.
 <li><a href="../ptolemy/domains/tm/demo/MergedEvents/MergedEvents.htm" target="main">MergedEvents</a>
 <li><a href="../ptolemy/domains/tm/demo/SimpleTasks/SimpleTasks.htm" target="main">SimpleTasks</a>
  This model shows two independent tasks on a
  single CPU machine.
 </menu>


</menu>


<h3>New Actors</h3>

<ul>

<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">ptolemy.actor.lib</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/actor/lib/Accumulator.html"><code>Accumulator</code></a>
<dd> (Edward A. Lee)
An actor that outputs the sum of the inputs so far.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanMultiplexor.html"><code>BooleanMultiplexor</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanSelect.html"><code>BooleanSelect</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanSwitch.html"><code>BooleanSwitch</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/ClassWrapper.html"><code>ClassWrapper</code></a> 
An actor that wraps (an instance of) a Java class.
<dd> (Xiaojun Liu)

<dt> <a href="codeDoc/ptolemy/actor/lib/Counter.html"><code>Counter</code></a> 
An up-down counter.
<dd> (Steve Neuendorffer)

<dt> <a href="codeDoc/ptolemy/actor/lib/Differential.html"><code>Differential</code></a> 
<dd> (Edward A. Lee)
An actor that outputs the difference between successive inputs.

<dt> <a href="codeDoc/ptolemy/actor/lib/DoubleReader.html"><code>DoubleReader</code></a> 
<dd> (Jie Liu, Christopher Hylands)
An actor that outputs doubles read from a URL.

<dt> <a href="codeDoc/ptolemy/actor/lib/Limiter.html"><code>Limiter</code></a> 
<dd> (Edward A. Lee)
An actor that limits the input to a specified range.

<dt> <a href="codeDoc/ptolemy/actor/lib/LinearDifferenceEquationSystem.html"><code>LinearDifferenceEquationSystem</code></a> 
<dd> (Jie Liu, Elaine Cheong)
Linear Difference Equation System.

<dt> <a href="codeDoc/ptolemy/actor/lib/LookupTable.html"><code>LookupTable</code></a> 
<dd> (Paul Whitaker, Christopher Hylands)
A lookup table that outputs internally stored data given an index
Parameter.


<dt> <a href="codeDoc/ptolemy/actor/lib/NonStrictTest.html"><code>NonStrictTest</code></a> 
<dd> (Paul Whitaker, Christopher Hylands)
Check the input streams against a parameter value, ignoring absent values.

<dt> <a href="codeDoc/ptolemy/actor/lib/URLDirectoryReader.html"><code>URLDirectoryReader</code></a> 
<dd> (Christopher Hylands)
An actor that reads a URL naming a directory and outputs each
element of the directory one at a time.

<dt> <a href="codeDoc/ptolemy/actor/lib/VectorAssembler.html"><code>VectorAssembler</code></a> 
<dd> (Jie Liu, Elaine Cheong)
An actor that reads a token from each input channel to assemble a
DoubleMatrixToken.

<dt> <a href="codeDoc/ptolemy/actor/lib/VectorDisassembler.html"><code>VectorDisassembler</code></a> 
<dd> (Jie Liu, Elaine Cheong)
An actor that disassembles a DoubleMatrixToken to a multiport output.

<dt> <a href="codeDoc/ptolemy/actor/lib/WallClockTime.html"><code>WallClockTime</code></a> 
<dd> (Edward A. Lee)
Output the elapsed time in seconds.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/comm/package-summary.html">ptolemy.actor.lib.comm</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/io/comm/SerialComm.html"><code>SerialComm</code></a> 
<dd> (Winthrop Williams)
Read and write from a serial port
</dl>

<li> 
 <a href="codeDoc/ptolemy/actor/lib/conversions/package-summary.html">ptolemy.actor.lib.conversions</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/BooleanToAnything.html"><code>BooleanToAnything</code></a> 
<dd> (Edward A. Lee)
An actor that converts a boolean token into any other data type.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/InUnitsOf.html"><code>InUnitsOf</code></a> 
<dd> (Yuhong Xiong, Xiaojun Liu, Edward Lee)
An actor that converts input tokens to specified units.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/IntArrayToString.html"><code>IntArrayToString</code></a> 
<dd> (Winthrop Williams)
An actor that converts an array of integers into a string.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/LongToDouble.html"><code>LongToDouble</code></a> 
<dd> (Christopher Hylands)
An actor that converts a LongToken into a DoubleToken.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/StringToIntArray.html"><code>StringToIntArray</code></a> 
<dd> (Winthrop Williams)
An actor that converts a string to an array of integers.

</dl>


<li> <a href="codeDoc/ptolemy/actor/lib/gui/package-summary.html">ptolemy.actor.lib.gui</a>:

<dl>
<dt> <code>MatrixVisualizer</code>
<dd> (Neil Turner, Steve Neuendorffer)
An actor for 2-D visualization of matrices. (Removed after Ptolemy II 2.0)

<dt> <a href="codeDoc/ptolemy/actor/lib/gui/RealTimePlotter.html"><code>RealTimePlotter</code></a> 
<dd> (Edward A. Lee)
Plot input data as a function of elapsed real time.

<dt> <a href="codeDoc/ptolemy/actor/lib/gui/SliderSource.html"><code>SliderSource</code></a> 
<dd> (Xiaojun Liu)
An actor whose output is controlled by a slider in the run window.

</dl>


<li> <a href="codeDoc/ptolemy/actor/lib/logic/package-summary.html">ptolemy.actor.lib.logic</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/logic/IsPresent.html"><code>IsPresent</code></a> 
<dd> (Edward A. Lee)
Output true if the input is present, false otherwise.
</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/net/package-summary.html">ptolemy.actor.lib.net</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/net/DatagramReader.html"><code>DatagramReader</code></a> 
<dd> (Winthrop Williams)
An actor that asynchronously reads datagram packets.
<dt> <a href="codeDoc/ptolemy/actor/lib/net/DatagramWriter.html"><code>DatagramWriter</code></a> 
<dd> (Winthrop Williams)
An actor that sends its input as a UDP datagram packet.
</dl>

<li> <a href="codeDoc/ptolemy/domains/ct/lib/package-summary.html">ptolemy.domains.ct.lib</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/domains/ct/lib/EventSource.html"><code>EventSource</code></a> 
<dd> (Jie Liu)
Generate discrete events at prespecified time instants.
<dt> <a href="codeDoc/ptolemy/domains/ct/lib/FirstOrderHold.html"><code>FirstOrderHold</code></a> 
<dd> (Jie Liu)
An actor that takes a value and a derivative and does first order projection.

<dt> <a href="codeDoc/ptolemy/domains/ct/lib/LevelCrossingDetector.html"><code>LevelCrossingDetector</code></a> 
<dd> (Jie Liu)
A CT actor that detects level crossings of its trigger input signal.

</dl>

<li> <a href="codeDoc/ptolemy/domains/de/lib/package-summary.html">ptolemy.domains.de.lib</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/domains/de/lib/EventButton.html"><code>EventButton</code></a> 
<dd> (Winthrop Williams, Paul Whitaker)
An actor that generates an empty token in response to a click of a button.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/EventFilter.html"><code>EventFilter</code></a> 
<dd> (Steve Neuendorffer, Sonia Sachs)
An actor that filters false boolean tokens.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/Inhibit.html"><code>Inhibit</code></a>
<dd> (Steve Neuendorffer)
An actor that produces a copy of the most recent input each time

<dt> <a href="codeDoc/ptolemy/domains/de/lib/PreemptableTask.html"><code>PreemptableTask</code></a> 
<dd> (Elaine Cheong, Yang Zhao, Xiaojun Liu)
An actor that simulates a preemptable task.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/Previous.html"><code>Previous</code></a> 
<dd> (Edward A. Lee)
An actor that outputs the previous event when it receives an event.


<dt> <a href="codeDoc/ptolemy/domains/de/lib/Queue.html"><code>Queue</code></a> 
<dd> (Steve Neuendorffer)
An actor that implements a queue of events.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/QueueWithNextOut.html"><code>QueueWithNextOut</code></a> 
<dd> (Winthrop Williams, Steve Neuendorffer)
An actor that implements a queue of events with a nextOut port

<dt> <code>SamplerWithDefault</code>
<dd> (Steve Neuendorffer, Jie Liu, Edward A. Lee)
An actor that produces a copy of the most recent input each time
(Removed between Ptolemy II 2.0 and 3.0)
</dl>

<li> <a href="codeDoc/ptolemy/domains/sdf/lib/package-summary.html">ptolemy.domains.sdf.lib</a>:


<dl>
<dt> <a href="codeDoc/ptolemy/domains/sdf/lib/DoubleToMatrix.html"><code>DoubleToMatrix</code></a> 
<dd> (Edward A. Lee)
An actor that converts a sequence of input tokens to a matrix.

<dt> <a href="codeDoc/ptolemy/domains/sdf/lib/MatrixToDouble.html"><code>MatrixToDouble</code></a> 
<dd> (Edward A. Lee)
An actor that converts a matrix to sequence of output tokens.

</dl>

</ul>


<h2>Major Features that were new in Ptolemy II 1.0.1 </h2>
<menu>
<li> Vergil - the Ptolemy II GUI
(Steve Neuendorffer and Edward A. Lee)
<li> Giotto Domain
	(Christoph M. Kirsch, Benjamin Horowitz, Thomas A. Henzinger)
<li> Java 3D Domain (GR Domain) (Chamberlain Fong)
<li> Discrete Time Domain (Chamberlain Fong)
<li> CORBA/Jini work (Jie Liu)
</menu>

<h2>Other Features that were new in Ptolemy II 1.0.1</h2>

<ul>
<li> The actor classes are more robust and have been reviewed.

<li> <a href="codeDoc/ptolemy/actor/gui/package-summary.html">User interface utilities for applets and applications</a>

<li> Live editing of models and parameters;
<li> Network integration;
<li> <a href="codeDoc/ptolemy/data/type/package-summary.html">A sophisticated type system including:</a>
     <ul>
     <li> <a href="../ptolemy/domains/sdf/demo/Type/Type.htm">Type constant propagation,</a>
     <li> <a href="codeDoc/ptolemy/data/type/RecordType.html">Record types (applet),</a>
     <li> <a href="codeDoc/ptolemy/data/type/ArrayType.html">Array types (applet),</a> and
     <li> <a href="codeDoc/ptolemy/data/FixToken.html">Fixed-point type</a>
     </ul>
<li> <a href="expressions.htm">An expression language for parameter expressions;</a>
<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">Data and domain polymorphic component library;</a>
<li> <a href="codeDoc/ptolemy/actor/lib/Expression.html">A polymorphic expression actor;</a>
<li> <a href="codeDoc/ptolemy/moml/package-summary.html">A very simple XML file format called MoML;</a>
<li> <a href="../ptolemy/plot/doc/body.htm" target="body">A flexible signal plotter;</a>
<li> Several domains with concurrent models of computation (
<a href="../ptolemy/domains/csp/doc/body.htm" target="body">CSP</a>,
<a href="../ptolemy/domains/pn/doc/body.htm" target="body">PN</a>,
<a href="../ptolemy/domains/dde/doc/body.htm" target="body">DDE</a>
)
<li> Hierarchically interoperable domains
(<a href="../ptolemy/domains/ct/demo/SigmaDelta/SigmaDelta.htm" target="main">CT/FSM Accelerometer (applet)</a>);

<li> <a href="docbody.htm" target="body">On-line documentation (in HTML);</a>
<li> <a href="../ptolemy/actor/lib/javasound/demo/KarplusStrong/KarplusStrong.htm" target="main">Audio signal processing capabilities (applet);</a></br>
</ul>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
 <!-- Leave a trailing p here so that there is a little space at the bottom -->
 <p>
</body>
</html>
