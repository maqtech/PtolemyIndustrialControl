<!-- DO NOT EDIT this file it is created by running make-->
<!-- $Id$ -->
<html>
<head>
<title>Ptolemy II 1.0 Release Notes</title>
</head>
<body>
<!--vergilDocs-->
<h2>Limitations</h2>
Version 1.0 has a number of limitations.
<h3>Release Limitations</h3>
<menu>
<li> The gzipped tar file that contains the Ptolemy II distribution
 <B>requires</B> GNU tar or WinZip.  Solaris 2.5.1 tar will fail to
untar this file with a checksum error because the pathnames are longer
than 100 characters.  If you do not have GNU tar, you can obtain
source and selected binaries from 
ftp://ptolemy.eecs.berkeley.edu/pub/gnu.
</menu>


<h3>Limitations in the Actor Libraries</h3>
<menu>
<li>The actor library is far from complete.
<li>The Expression actor does not properly propagate type constraints in
an expression-dependent fashion. It works correctly for double-valued
expressions of double-valued inputs.

<li> The readFile() parameter function does not work with applets.

</menu>

<h3>Limitations in the FSM Domain</h3>

The FSM domain is still fairly preliminary, and is likely to change
rapidly in future releases.  At this time, it is difficult to build
nontrivial FSM models using Vergil.  Hierarchical models are particularly
difficult to build, and will be handled quite differently in the next
version.  We cannot assure that FSM models that are constructed with
this release will work with future releases.

<h3>Limitations in the SDF Domain</h3>
There are currently two bugs in the SDF Domain.  Both are bugs in the scheduler that can be fairly easily avoided.
<menu>
<li> Opaque tunneling entities result in a NullPointerException.  An Opaque tunneling entity is one that does not have any entities.  It only contains relations between external ports.
<br> <b>Workaround:</b> Do not use a director for tunneling entities.

<li> The SDF scheduler reports that actors are disconnected, when they are connected through external ports.
<br> <b>Workaround:</b> Connect the actors in another way.  This is usually possible when the connection is through an output port (since sources have trigger inputs that are usually disconnected in SDF), but somewhat more difficult when the connection is only through an input port.
</menu>

<h3>Limitations in the User Interface</h3>
Version 1.0 of Ptolemy II includes the first graphical user
interface for Ptolemy II.  This UI is preliminary, and is made
up mostly of code that is rated "red", meaning that both the APIs
and the implementations are likely to change.
There are quite a few limitations.
<menu>
<li>No undo mechanism.
<li>Incomplete printing support.
<li>Weak support for multiports in the graph editor.
<li>It is difficult to control wire routing.
<li>Cannot have more than one vertex in a connection.
<li>No mechanism to set the width of a relation.
<li>The integrated web browser is not a full-featured browser.
<li>No snap-to-grid.
<li>Icon editor not yet integrated.
<li>Debugger not yet integrated.
<li>FSM editor is not yet useful.
<li>It is difficult to add actors to the libraries.
<li>No dynamic class loading.
</menu>

<h3>Missing Domains</h3>
<menu>
<li>Synchronous/reactive.
<li>Boolean and integer dataflow.
<li>Dynamic dataflow
</menu>

<h3><a name="CodeGenerationBugs">Code Generation Bugs</a></h3>
<dl>

<dt> Under JDK1.2.2 you may see <CODE>java.lang.OutOfMemoryError</CODE>
<dd> The workaround is to upgrade to JDK1.3

<dt> The name CG_Main is hardwired in.
sdf.codegen.SDFCodeGenerator uses "CG_Main".
sdf.codegen.SDFActorTransformerVisitor._portFieldDeclNode()
also uses "CG_Main" in a few places, so I have to figure out a way
to pass the model name via a visitor so that _portFieldDeclNode() can
get the name.
<dd>


<dt> zip and jar files are not handled properly
<dd> Running codegen fails in the nightly build because the code coverage
tools are in a zip file and codegen does not look inside the zip
file.  The fix is to modify SearchPath and
ASTReflect.lookupClass so that they will handle zip and jar files in
the classpath

<dt> Duplicate directories with the same name cause problems
<dd> If there are two directories
named 'cg', then the codegenerator has a hard time
resolving classes in the cg package.

To replicate the bug, do:
<pre>
	cd $PTII/ptolemy/lang/java
	rm -rf ~/ptII/cg cg
	make CGROOT=. ramp
	make ramp

</pre>

The workaround is to only have one cg directory
and remove the other.

</dl>
</body>
</html>
