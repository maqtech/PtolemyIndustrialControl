<!-- $Id$ -->
<html>
<head>
<title>Ptolemy II Installation</title>
</head>
<body bgcolor="#faf0e6">
<h1>Ptolemy II Installation</h1>
See the <a href="ptII0.3.release.htm">Ptolemy II 0.3 release notes</a>
for details about this release.


<h2>Requirements</h2>
<h3>The PTII variable</h3>
The PTII environment variable is used to refer to the directory
that contains the Ptolemy II tree.
Setting <CODE>PTII</CODE> is covered in
the <a href="#Unix">Unix</a> and <a href="#Windows NT">Windows NT</a>
sections below

<h3>Java</h3>

Ptolemy II uses JDK1.2, which is available from
<a href="http://java.sun.com/products/jdk/1.2" target="_top"><CODE>http://java.sun.com/products/jdk/1.2</CODE></a>

 <p>Certain parts of Ptolemy can be built under JDK1.1, but you
are better off building with JDK1.2 if you can.  

<h3><a name="Jacl">Jacl</a></h3>
Jacl is a 100% Java implementation of Tcl that we use for testing Ptolemy II.

Each Java directory contains a <CODE>test</CODE> subdirectory that contains
Tcl files that use Jacl to test the Ptolemy II Java code.

 <p>Jacl is <B>only</B> necessary if you are planning on running
the Ptolemy II test suite.  

 <p>We use a customized version of Jacl called Ptjacl.
The primary difference between Ptjacl and Jacl1.1 is that Ptjacl
is shipped as one jar file.

 <p>The Ptjacl jar file at <CODE>$PTII/lib/ptjacl.jar</CODE>
is shipped with Ptolemy II.  Below are instructions about
how to update <CODE>ptjacl.jar</CODE> and how to run Jacl.

<ol>
<li> Download ptjacl.jar from <a href="http://ptolemy.eecs.berkeley.edu/~cxh/java/jacl/ptjacl.html"><CODE>http://ptolemy.eecs.berkeley.edu/~cxh/java/jacl/ptjacl.html</CODE></a>

<li> Unzip it with Winzip or info-zip

<li> Copy the <CODE>ptjacl.jar</CODE> file to <CODE>$PTII/lib</CODE>
<pre>
cp ptjacl.jar $PTII/lib
</pre>

<li> Rerun <CODE>configure</CODE>
<pre>
cd $PTII
rm -f config.cache
./configure
</pre>

<li> Run the tests
<pre>
make tests
</pre>
</ol>

To run Jacl in Bourne Shell
<pre>
CLASSPATH=$PTII/lib/ptjacl.jar
export CLASSPATH
java tcl.lang.Shell
</pre>

To run Jacl in the C shell
<pre>
setenv CLASSPATH $PTII/lib/ptjacl.jar
java tcl.lang.Shell
</pre>


To run Jacl as a standalone window in Bourne Shell, use
the tcl.lang.PanelShellApp class instead of tcl.lang.Shell:
<pre>
CLASSPATH=$PTII/lib/ptjacl.jar
export CLASSPATH
java tcl.lang.PanelShellApp
</pre>



For more information about Jacl and Tcl Blend, see
<menu>
<li> <a href="http://www.scriptics.com/software/java.html" target="_top">Scriptics Jacl and Tcl Blend page</a>.

<li> <a href="http://ptolemy.eecs.berkeley.edu/~cxh/java" target="_top">Christopher Hylands Java Page.</a>
</menu>


<h3>Diva</h3>
Diva is a visualization package used by some of the demos.
 <p>The Ptolemy II distribution include <CODE>$PTII/lib/diva.jar</CODE>.
 <p>The Diva sources and documentation are available at
<a href="http://www-cad.eecs.berkeley.edu/diva/"><CODE>http://www-cad.eecs.berkeley.edu/diva/</CODE></a>


<h3><a name="javacc">JavaCC</a></h3>
JavaCC is the Java Compiler Compiler, which similar to <CODE>yacc</CODE>
and <CODE>lex</CODE>.
 <p>JavaCC is only necessary if you modify the expression parser in
<CODE>ptolemy/data/expr</CODE>.
 <p>As of 4/98, Ptolemy II was using JavaCC 0.8pre2.
 <p>Under JDK1.2.1 and JavaCC1.0 under Windows NT4.0, you may
get a NullPointerException.  The workaround is to either use
JavaCC 0.8pre2 or install a new JIT available from
<a href="http://developer.javasoft.com/developer/earlyAccess/jdk12/jit/index.html" target="_top">The Sun Java Developer's Connection.</a> 

 <p>To install JavaCC, follow the instructions below
<ol>
<li> Download JavaCC0.8pre1.class from
<a href="http://www.sun.com/suntest" target="_top"><CODE>http://www.sun.com/suntest</CODE></a>

<li> Set your CLASSPATH to <CODE>.</CODE>
<pre>
setenv CLASSPATH .
</pre>

<li> cd to the directory where the JavaCC <CODE>.class</CODE> file
was downloaded to.


<li> Run <CODE>java</CODE> on the file.  Note that you should
<B>not</B> include the <CODE>.class</CODE> suffix in the command line.
<pre>
java JavaCC0.8pre2
</pre>

<li> <CODE>$PTII/configure</CODE> looks for JavaCC in
the <CODE>$PTII/vendors/sun/JavaCC</CODE> directory.  If 
<CODE>configure</CODE> does not find JavaCC there, then it looks
for the <CODE>javacc</CODE> binary your path.  You may also
use the <CODE>--with-javacc=DIR</CODE> <CODE>configure</CODE> argument.
 <br>The best place to install JavaCC is
<CODE>$PTII/vendors/sun/javaCC</CODE>

</ol>


<h2>Rebuilding</h2>
The Ptolemy II distribution includes the compiled Java <CODE>.class</CODE>
files and the <CODE>javadoc</CODE> output, so it is not
necessary to 'build' or run <CODE>make</CODE> to use Ptolemy II.

<h3><a name="Unix">Unix</a></h3>
 If you would like to rebuild from the Java sources under Unix,  
you should set the <CODE>PTII</CODE> environment variable in your
environment.  Under C Shell:
<pre>
setenv PTII /users/ptII
</pre>
You may want to add that line to your <CODE>~/.cshrc</CODE> file.

 <p>To configure the makefiles,
run <CODE>$PTII/configure</CODE>, which is
a GNU autoconf script that looks for your Java compiler, reads in
<CODE>$PTII/mk/ptII.mk.in</CODE> and generates
<CODE>$PTII/mk/ptII.mk</CODE>:
<pre>
cd $PTII
./configure
</pre>
<CODE>$PTII/configure</CODE> creates <CODE>$PTII/config.status</CODE>
and <CODE>$PTII/config.cache</CODE>.  If you would like to reconfigure
Ptolemy II to use a different Java compiler, set your path so
that the appropriate compiler is first in your path, then
remove <CODE>config.status</CODE> and rerun configure.  You
may also use the <CODE>--with-java=</CODE> configure command line
argument.  For more information, run <CODE>configure -help</CODE>.


 <p>To build:
<pre>
make
</pre>

<h3><a name="Windows NT">Windows NT</a></h3>

To build Ptolemy II under Windows NT4.0:
<ol>
<li> Install the Cygwin toolkit from
<a href="http://sourceware.cygnus.com/cygwin/" target="_top"><CODE>http://sourceware.cygnus.com/cygwin/</CODE></a>.
 <br>The Cygwin toolkit includes GNU <CODE>make</CODE> and <CODE>bash</CODE>.

<li> Be sure to do <CODE>mkdir /tmp</CODE>

<li> Part of the GNU-win32 installation includes setting up
<CODE>/bin/sh.exe</CODE> for use from <CODE>make</CODE>.
It is better if you copy <CODE>bash.exe</CODE> to 
<CODE>/bin</CODE> instead of <CODE>sh.exe</CODE> - 
some of the makefiles have problem if <CODE>sh.exe</CODE>
is used.
  <br>The commands to copy <CODE>bash.exe</CODE> are:
<pre>
mkdir /bin
cp /Cygnus/B19/H-i386-cygwin32/bin/bash.exe /bin
</pre>

<li> Create <CODE>/etc/passwd</CODE> and <CODE>/etc/group</CODE>
by running 
<pre>
mkdir /etc
mkpasswd -l -g > /etc/passwd
mkgroup  -l > /etc/group
</pre>
For more information, type <CODE>mkpasswd</CODE> and <CODE>mkgroup</CODE>
without any arguments.  The Cygwin faq also covers these programs.
If you do not set up <CODE>/etc/passwd</CODE>, then <CODE>chown</CODE>
may have problems.

<li> Set the value of the <CODE>PTII</CODE> environment variable to the 
name of the directory where Ptolemy II is installed.
Under NT, you set the environment variable via
the Environment tab of the System control panel 
(<CODE>Start Menu </CODE> -&gt; <CODE>Settings</CODE> -&gt; 
<CODE>Control Panels</CODE> -&gt; <CODE>System</CODE> -&gt; Environment)

<li> In the Environment tab, you should also set your path to include the location of the JDK bin directory (i.e. <CODE>C:\jdk1.1.6\bin</CODE>)


<li> Optional: Install Tcl Blend, see the instructions
<a href="#tclblend">above</a>.


<li> Optional: Install JavaCC, see the instructions
<a href="#javacc">above</a>.


<li> Start up Cygwin <CODE>bash</CODE>, and cd to the Ptolemy II directory.

<li> Run <CODE>./configure</CODE>

<li> Run <CODE>make</CODE>
</ol>


 <p>Currently, Ptolemy II does not support building via Microsoft
Visual Studio <CODE>nmake</CODE> under Windows.  Also, we have not
tried building Ptolemy II under Windows '95 or Windows '98.



<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
