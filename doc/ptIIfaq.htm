<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II FAQ</title>
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body>
 <!--  Note that if you include hyperlink, be sure to 
       include URL in the text so that we can have a text only version.

       By default, this file is found on the web at
       http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIfaq.htm	
       This file appears in each Ptolemy II release as $PTII/doc/ptIIfaq.htm

       Rather than editing ptweb/ptolemyII/ptIIfaq.htm directly, instead
       edit ptII/doc/ptIIfaq.htm and then copy into the ptweb cvs repository:
	# Edit ptII/doc/ptIIfaq.htm
	cp ptII/doc/ptIIfaq.htm ptweb/ptolemyII/ptIIfaq.htm
	cd ptweb/ptolemyII
	cvs commit -m "Updated faq in ptII Tree" ptIIfaq.htm
       Then update the Public website, see:
        http://www.gigascale.org/ptolemy/group/public.htm
 -->

<h1>Ptolemy II Frequently Asked Questions</h1>
This FAQ can be found at:
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIfaq.htm"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIfaq.htm</CODE></a>
 <br>The version of this FAQ is: $Id$

<menu>
<li> <a href="#General Questions"><b>1. General</b></a>
	<menu>
	<li> <a href="#ptolemy II description"><b>1.1 What is Ptolemy II?</b></a>
	<li> <a href="#ptolemy classic"><b>1.2 What about compatibility with Ptolemy Classic (Ptolemy 0.7.x)?</b></a>

	<li> <a href="#ptolemy II copyright"><b>1.3 What is the copyright?</b></a>
	<li> <a href="#mailing list"><b>1.4 Is there a mailing list?</b></a>
	</menu>

<li> <a href="#ptolemy II faq: installation"><b>2. Installation questions</b></a>
	<menu>
	<li> <a href="#downloading Ptolemy II"><b>2.1 How do I download
	Ptolemy II?</b></a>

	<li> <a href="#platforms that Ptolemy II runs under"><b>2.2 What
	platforms does Ptolemy II run under?</b></a>

	<li> <a href="#ptolemy II installation, what do I need"><b>2.3 What do I need to Install Ptolemy II?</b></a>
	</menu> 

<li> <a href="#ptolemy II faq: using Ptolemy II"><b>3. Using Ptolemy II</b></a>
	<menu>
	<li> <a href="#invoking Ptolemy II?"><b>3.1 How do I invoke Ptolemy II?</b></a>
	<li> <a href="#reading data from files?"><b>3.2 How do I read data from a file?</b></a>
	</menu>

<li> <a href="#ptolemy II faq: extending"><b>4. Extending Ptolemy II</b></a>
	<menu>
	<li> <a href="#Adding actors"><b>4.1 How do I add an actor?</b></a>

	<li> <a href="#Interfacing to C/C++"><b>4.1 How do I interface to C/C++</b></a>

	<li> <a href="#Customizing the GUI"><b>4.3 How do I customize the GUI?</b></a>
	<li> <a href="#MoML"><b>4.4 What file format are the models stored in?</b></a>
	<li> <a href="#Scripting"><b>4.5 Is there a scripting interface to Ptolemy II ?</b></a>
	</menu>

</menu>

<h2><a name="General Questions"><b>1. General</b></a></h2>
<dl>

<dt> <a name="ptolemy II description"><b>1.1 What is Ptolemy II?</b></a>
<dd> 
<p>
Ptolemy II is a software framework developed as part of the Ptolemy project.
It is a Java-based component assembly framework with a graphical
user interface called Vergil.  Vergil itself is a component assembly
defined in Ptolemy II.
</p>
<p>
The Ptolemy project studies modeling, simulation, and design of
concurrent, real-time, embedded systems. The focus is on assembly of
concurrent components. The key underlying principle in the project is
the use of well-defined <i>models of computation</i> that govern the
interactions between components. A major problem area being addressed is
the use of heterogeneous mixtures of models of computation.
</p>
<p>
 <!-- For clarity, we do not always display the URL here   -->

The Ptolemy Project 
(<a href="http://ptolemy.eecs.berkeley.edu/index.html" target="_top"><CODE>http://ptolemy.eecs.berkeley.edu</CODE></a>)

contains much more information about the
project. The work is conducted in the


<a href="http://www.eecs.berkeley.edu/" target="_top">Department of Electrical Engineering and Computer Sciences</a>
of the
<a href="http://www.berkeley.edu/" target="_top">University of California at Berkeley</a>.
The project is directed by
Prof. Edward A. Lee 
(<a href="http://ptolemy.eecs.berkeley.edu/~eal/index.html" target="_top"><CODE>http://ptolemy.eecs.berkeley.edu/~eal</CODE></a>)

The project is named after
<a href="http://ptolemy.eecs.berkeley.edu/people/ptolemy.htm" target="_top">Claudius Ptolemaeus</a>,
the second century Greek astronomer, mathematician, and geographer.
</p>



<dt> <a name="ptolemy classic"><b>1.2 What about compatibility with Ptolemy Classic (Ptolemy 0.7.x)?</b></a>
<dd>
 <p>
This FAQ covers Ptolemy II.
The Ptolemy Classic FAQ can be found at  
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyclassic/ptolemy.faq"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyclassic/ptolemy.faq</CODE></a>
</p>

 <p>Ptolemy 0.x is fairly mature software in that the design is stable and
mostly unchanging. The Ptolemy II software system is under active development.

<menu>
<li> They are written in different languages (Java vs. C++)

<li> They have different file formats. Ptolemy 0.x uses Octtools,
Ptolemy II uses a system based on XML

<li> They have different user interfaces.  The Ptolemy II UI
is much easier to use than the Ptolemy Classic UI.
<li> Ptolemy Classic works best under Unix.  There is a 
Windows port of Ptolemy Classic, but it does not work well.
<br>Ptolemy II works under both Unix and Windows.
<li> Ptolemy Classic can generate code for various DSP primarily
using SDF semantics.
<br> Ptolemy II can generate code for non-hierarchical SDF models
and for hierarchical Giotto models.

</menu>
For more information about the current status of code generation in
Ptolemy II, see
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codegen.htm"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codegen.htm</code></a>

<dt> <a name="ptolemy II copyright"><b>1.3 What is the copyright?</b></a>
<DD> Ptolemy II is released under the fairly liberal UC Berkeley copyright,

see 
<a href="http://ptolemy.eecs.berkeley.edu/ptIIcopyright.htm"><code>http://ptolemy.eecs.berkeley.edu/ptIIcopyright.htm</code></a>

Most files have the copyright at the top.

 <p>Ptolemy II is free for academic and commercial use.  You an incorporate it
into products, but you need to include follow the instructions in the
copyright notice.

 <p>This copyright is based on the Tcl copyright that was used when
Prof. Ousterhout was developing Tcl here at UC Berkeley.  This
copyright was also used in Ptolemy Classic, which has been used in
commercial products, see
<a href="http://ptolemy.eecs.berkeley.edu/archive/links.htm"><code>http://ptolemy.eecs.berkeley.edu/archive/links.htm</code></a>

<dt> <a name="mailing list"><b>1.4 Is there a mailing list?</b></a>
<DD> 
The Ptolemy mailing lists are run by the Majordomo mailing list 
server.  This server can automatically subscribe you to mailing
lists and it can send you monthly archive files for each of the
lists.  To find out more about our Majordomo sever, send an email
letter to: majordomo@ptolemy.eecs.berkeley.edu with the word "help"
in the body of the letter.

<dl>
<dt> Ptolemy Interest Mailing list
<dd> This moderated mailing list is for Ptolemy announcements only. Thus,
you cannot post to this group.  The amount of mail here is kept very
light (a few messages a year).

 <p>To subscribe to the ptolemy-interest mailing list, send mail to:
ptolemy-interest-request@ptolemy.eecs.berkeley.edu with the word
"subscribe" in the body (not the subject) of the letter.
 </p>
 <p>All mail to ptolemy-interest also goes to ptolemy-hackers, so if you
subscribe to ptolemy-hackers, there is no need to subscribe to
ptolemy-interest too.
 </p>

<dt>  Ptolemy Hackers Mailing list
<dd> This is a discussion list for Ptolemy questions, bug reports, and to
share Ptolemy additions and applications.  Since this is a discussion
group, mail volume can sometimes be heavy.  All mail sent to Ptolemy-
hackers is automatically cross posted to the comp.soft-sys.ptolemy
newsgroup.

 <p>To subscribe to the ptolemy-hackers mailing list, send mail to:
ptolemy-hackers-request@ptolemy.eecs.berkeley.edu with the word 
"subscribe" in the body of the letter.  To leave the newsgroup put
the word "unsubscribe" in the body of your message.
 </p>
</dl>

The best way to get questions answered is to subscribe to ptolemy-hackers
and then send email to that list.

 <p>Ptolemy is distributed without support or warranty.  However, if you
really need to contact a human being with a Ptolemy question, you can
send email to: ptolemy@eecs.berkeley.edu.

 <p> The Ptolemy Mailing lists and search engine can be found at
<a href="http://ptolemy.eecs.berkeley.edu/search/" target="_top"><CODE>http://ptolemy.eecs.berkeley.edu/search/</CODE></a>

</dl>

<h2><a name="ptolemy II faq: installation"><b>2. Installation questions</b></a></h2>
<dl>
<dt> <a name="downloading Ptolemy II"><b>2.1 How do I download	Ptolemy II?</b></a>
<dd> Ptolemy II is available in several formats including applets, source code, a Windows installer and Web Start. 
For details, see
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/" target="_top"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/</code></a>
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/"><code></code></a>

<dt> <a name="platforms that Ptolemy II runs under"><b>2.2 What platforms does Ptolemy II run under?</b></a>
<dd> Ptolemy II is written in Java, so it should run on any platform
that supports a recent Java Virtual machine.  Locally, we use
Windows XP and Windows 2000 with the Cygwin toolkit for development.
The nightly builds run under Solaris 8.  Some people in the group use Linux.

<dt> <a name="ptolemy II installation, what do I need"><b>2.3 What do I need to Install Ptolemy II?</b></a>
<dd> At the minimum, you need the Java Runtime Environment.
For details, see the installation pages at
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/" target="_top"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/</code></a>
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/"><code></code></a>

</dl>


<h2><a name="ptolemy II faq: using Ptolemy II"><b>3. Using Ptolemy II</b></a></h2>

<dl>
<dt> <a name="invoking Ptolemy II?"><b>3.1 How do I invoke Ptolemy II?</b></a>
<dd> 
If you install Ptolemy II using the Windows installer, then
menu choices should be added to <CODE>Start</CODE> -&gt; 
<CODE>Programs</CODE> -&gt; <CODE>Ptolemy</CODE>.

 <p>
Ptolemy II models can be run from the command line, this is what we do
for the nightly test suite.
  <dl>

  <dt> <CODE>$PTII/bin/vergil foo.xml</CODE>
  <dd> will bring up a visual editor for the model defined in foo.xml.
  The visual editor allows you to change the model and run it.

  <dt> <CODE>$PTII/bin/ptolemy foo.xml</CODE>
  <dd> will bring up a run control panel for that model and allow you to run
  it

  <dt> <CODE>$PTII/bin/ptexecute foo.xml</CODE>
  <dd> will run the model.  The model need not be graphical.
  </dl>

<dt> <a name="reading data from files?"><b>3.2 How do I read data from a file?</b></a>
<dd> 

How we read in values from files needs to be revamped, we could do
more with interpreting the file contents as expressions or as
serialized data.

 <p>Actors that read and write data are visible in Vergil under 
<CODE>actor library</CODE> -&gt; <CODE>io</CODE>.

 <p>When an actor takes a URL as an argument, use
<CODE>file:./<I>filename</I></CODE>.  For details, see
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codeDoc/ptolemy/actor/lib/DoubleReader.html"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codeDoc/ptolemy/actor/lib/DoubleReader.html</CODE></a>

 <p>There is also the <CODE>readFile</CODE>, <CODE>findFile</CODE> and
<CODE>readMatrix</CODE> expression operators, see
<a
href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/expressions.htm"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/expressions.htm</CODE></a>
and
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codeDoc/ptolemy/data/expr/UtilityFunctions.html"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/codeDoc/ptolemy/data/expr/UtilityFunctions.html</CODE></a>

 <p>The way to use readFile is as an expression:
<pre>
eval(readFile("foo.txt"))
</pre>
where foo.txt contains a single line that gets parsed as a Ptolemy
expression.  For example, if foo.txt contained
<pre>
{1.0, 2.0}
</pre>
Then the expression would resolve to an array of two elements, 1.0 and
2.0.

 <p>
ptII/ptolemy/data/expr/Constants.java defines PTII and HOME
as variables like PI and true.  PTII can be used in an expression
to refer to a file relative to the Ptolemy II installation directory.

 <p><CODE>PTII</CODE> is the value of the ptolemy.ptII.dir Java property,
which is set when vergil is invoked.

 <p><CODE>HOME</CODE> is the value of the user.dir property.  
Unsigned applets can read user.dir

 <p>The expression language includes the <CODE>property()</CODE>
 method that will read Java properties from the local environment.

 <p><CODE>property("ptolemy.ptII.dir")</CODE>
 is set to the value of $PTII when
vergil etc. are invoked. 

 <p>For example:
<pre>
property("ptolemy.ptII.dir") + "/ptolemy/actor/lib/test/auto/FileWriter1Output.txt"
</pre>

</dl>

<h2><a name="ptolemy II faq: extending"><b>4. Extending Ptolemy II</b></a></h2>
<dl>
<dt> <a name="Adding actors"><b>4.1 How do I add an actor?</b></a>
<dd> See the <code>Add Actor</code> link in
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/coding/index.htm" target="_top"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/coding/</code></a>

<dt> <a name="Interfacing to C/C++"><b>4.1 How do I interface to C/C++</b></a>
<dd>
Ptolemy II is written in Java, and Java has the Java Native Interface
(JNI), see
<a href="http://java.sun.com/j2se/1.4/docs/guide/jni/index.html" target="_top">Sun's JDK1.4 JNI Enhancements page at <CODE>http://java.sun.com/j2se/1.4/docs/guide/jni/index.html</CODE></a>.

 <p>Zoltan Kemenczy and others at Research In Motion, Ltd. developed an
interface to Matlab that uses JNI, see
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/ptolemy/matlab/matlab.htm"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/ptolemy/matlab/matlab.htm</code></a>

 <p>Using JNI to interface to a C/C++ package on one platform is
fairly straightforward, but it can be difficult to configure the paths
that JNI in truly platform independent manner so that the same
code will work on multiple platforms.  For example, the Ptolemy II/Matlab interface currently works only under Windows.



<dt> <a name="Customizing the GUI"><b>4.3 How do I customize the GUI?</b></a>
<dd> 
Ptolemy II uses Diva to display block diagram editors.
 <br>Information about Diva can be found at
<a href="http://www.gigascale.org/diva" target="_top"><code>http://www.gigascale.org/diva</code></a>
Ptolemy II uses the notion of Tableaus to manage state for tools.
The Ptolemy II design document has a chapter that discusses the UI
API.

 <p>The code that brings up the JVM Properties window is a simple example,
the code is at
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/ptolemy/actor/gui/JVMTableau.java"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/ptolemy/actor/gui/JVMTableau.java</code></a>
 <p>

 <!-- We can't reliably display .xml in a browser -->
<CODE>$PTII/ptolemy/configs/vergilConfiguration.xml</CODE>
adds this feature with this line:
<pre>
       &lt;property name="JVM Properties" 
                  class="ptolemy.actor.gui.JVMTableau$Factory"/&gt;
</pre>


<dt> <a name="MoML"><b>4.4 What file format are the models stored in?</b></a>
<dd> Ptolemy II stores models in an XML format called MoML.
The design doc covers MoML in detail.
 <p>The beauty of using a human readable (though verbose) file
format is that we can use standard tools like XSLT and sed to 
transform models.
	
<dt> <a name="Scripting"><b>4.5 Is there a scripting interface to Ptolemy II ?</b></a>

<dd> The Ptolemy II test suite uses Jacl, a Java implementation of Tcl
as a scripting language.  With Jacl, we can build and run models
using an interpreted scripting environment without compilation
and avoiding the usual edit/compile/run loop.

 <br>For details, see the Testing link in 
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/coding/index.htm" target="_top"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptIIlatest/ptII/doc/coding/</code></a>
	




</dl>

</menu>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
