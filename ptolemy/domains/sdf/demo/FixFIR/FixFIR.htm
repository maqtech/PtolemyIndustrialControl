<!-- $Id$-->
<HTML>
<HEAD>
<TITLE>Communication Link - Physical Level</TITLE>
<LINK href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
</HEAD>
<body>
<H1>Type Polymorphic FIR filter demo</H1>

This demo shows the transfer function of a type polymorphic FIR
filter, i.e., a FIR filter that operates on a stream of tokens of
arbitrary type. Thus, the same FIR filter can operate on fix point
tokens, double tokens, or complex tokens. The response of a FIR filter
operating on fix point tokens wills differ from a FIR filter operating
on double tokens since a finite precision is used. The plot generated
shows the effects of the use of finite precision.</P>

<!-- The HTML below is for the Java Plugin.  The first 
     section is for IE, the second is for Netscape
-->
<OBJECT classid="clsid:8AD9C840-044E-11D1-B3E9-00805F499D93"
  width=600
  height=450
  name="FixFIR"
  codebase="http://java.sun.com/products/plugin/1.2/jinstall-12-win32.cab#Version=1,2,0,0">
 <PARAM NAME=CODE VALUE=ptolemy.domains.sdf.demo.FixFIR.FixFIR.class>
 <PARAM NAME=CODEBASE VALUE=../../../../..>
 <PARAM NAME=NAME VALUE="FixFIR">
 <PARAM NAME=ARCHIVE VALUE="
	ptolemy/ptsupport.jar,
	ptolemy/domains/sdf/sdf.jar">
 <PARAM NAME="type" VALUE="application/x-java-applet;version=1.2">
 <PARAM NAME="background" VALUE="#faf0e6">
 <param name="defaultIterations" value="1">
<EMBED type="application/x-java-applet;version=1.2"
  code=ptolemy.domains.sdf.demo.FixFIR.FixFIR
  codebase=../../../../..
  name="FixFIR"
  width=600
  height=450
  background="#faf0e6"
  defaultIterations="1"
  archive="
	ptolemy/ptsupport.jar,
	ptolemy/domains/sdf/sdf.jar"
  pluginspage="http://java.sun.com/products/plugin/1.2/plugin-install.html">
<NOEMBED>
  If you were able to run applets, you would have a demo here.
</NOEMBED>
</EMBED>
</OBJECT>

<h2>System</h2>

<P>The structure of the system used in the demo is given in the figure
below. A pulse is sent through three instances of the same FIR
filter. The top FIR filter is a FIR filter operating exclusively on a
stream of double tokens. The middle FIR filter operates on a stream of
doubles but uses taps that have been quantized using the
<CODE>quantize()</CODE> function in the expression language. This
<CODE>quantize</CODE> function fits the taps of the FIR filter into a
6 bit representation of which 2 bits are used for the integer
part. The lower FIR filter operates directly on fix point tokens. This
instance of the FIR filter uses fix point versions of the tap
coefficients using the <CODE>fix()</CODE> function in the expression
language. This function convert each tap value into a fix point
representation using 8 bits of which 2 bits are used to represent the
integer part.

<P>The type of the FIR filter is deferred from the type of the
Taps. Consequently, the middle FIR filter requires doubles to come in
and produces doubles. In case of FIR filter using fix taps, the type
of the incoming tokens has to be of the fix type. In addition, the FIR
filter produces tokens of the fix type. No lossless conversion from
doubles to fix points (and vice versa) exists in the type lattice (See
type demo). Therefore, the incoming stream of double tokens produced
by the Pulse actor has to be explicitly converted into a stream of fix
point tokens. The stream of tokens produced by the FIR filter also
needs to be converted before sending it to the FFT. </P>

 <center>
<IMG SRC="fixfir.gif" WIDTH=624 HEIGHT=435>
 </center>


<P>The stream of tokens produced by the three different FIR filters is
sent through three instances of a FFT. The FFT is described as a
composite entity that is cloned two more times. The FFT conversion
starts by multiplying the incoming signal with alternatively 1 and
-1. This signal is send though an FFT. The complex signal that is
created by the FFT is converted into real numbers by ignoring the
imaginary part. Next, the coordinate system is changed to polar
coordinates and converted into dB format. The resulting three signals
are displayed in the plotter.</P>

<h2>Result</h2>

The response transfer from the three FIR filters is different although
the same taps values are used. This is the result of representing the
taps of the FIR filter with finite precision. This introduces
quantization errors

</BODY>
</HTML>
