<!-- $Id$-->
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
<TITLE><I>Process Networks Run Length Encoder Demonstration</i></TITLE>
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
</HEAD>
<BODY  BGCOLOR="#FFFFFF">

<CENTER>
<H1>Process Networks Run Length Encoder Demonstration</H1>
</CENTER>
Click on the layout button to get the initial layout of the graph. 
 <p>Note that this demo takes a long time to run.  Eventually an image
is displayed.
<CENTER>
<P>
 <!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->
<center>
<!-- The HTML below is for the Java Plugin.  The first 
     section is for IE, the second is for Netscape
 -->
<OBJECT classid="clsid:8AD9C840-044E-11D1-B3E9-00805F499D93"
 WIDTH=800 HEIGHT=800
 NAME="RunLengthEncodingApplet"
 codebase="http://java.sun.com/products/plugin/1.2/jinstall-12-win32.cab#Version=1,2,0,0">
<PARAM NAME=CODE VALUE=ptolemy.domains.pn.demo.RunLength.RLEDiva.class>
<PARAM NAME=CODEBASE VALUE=../../../../..>
<PARAM NAME=ARCHIVE VALUE="
	ptolemy/domains/pn/demo/RunLength/RLEDivaApplet.jar,
	lib/diva.jar,
	ptolemy/ptsupport.jar,
	ptolemy/domains/pn/pn.jar"
<PARAM NAME="name" VALUE="RunLengthEncodingApplet">
<PARAM NAME="type" VALUE="application/x-java-applet;version=1.2">
<PARAM NAME="background" VALUE="#faf0e6">
<PARAM NAME="imageurl" VALUE ="ptII.pbm">
<COMMENT>
<EMBED type="application/x-java-applet;version=1.2"
 code=ptolemy.domains.pn.demo.RunLength.RLEDiva.class
 codebase=../../../../..
 archive="
	ptolemy/domains/pn/demo/RunLength/RLEDivaApplet.jar,
	lib/diva.jar,
	ptolemy/ptsupport.jar,
	ptolemy/domains/pn/pn.jar"
 NAME="RunLengthEncodingApplet"
 WIDTH=800 HEIGHT=800
 background="#faf0e6"
 imageurl="ptII.pbm"
 pluginspage="http://java.sun.com/products/plugin/1.2/plugin-install.html">
<NOEMBED></COMMENT>
<I>If you were able to run applets, you would have a demo here.</I>
</NOEMBED></EMBED>
</OBJECT>
</center>

<h3> legends:</h3>
The green color indicates that a process is running, red indicates that it is blocked on a read, magenta indicates a block on a write and black indicates that the process has been terminated. <br>
The first figure (graph) shows the different processes in the system and the states they are in. <br>
The second figure shows the states of different processes as the system time progresses. <br>
The third panel displays the input image and the reconstructed output image.
<p>


<H3>PN Simulation:</H3>
The above applet uses the Ptolemy II Process Networks (PN) domain
to simulate a simple run length encoder that performs the encoding on a 
black and white image. In this particular example, the image is
<CENTER>
<IMG SRC="ptII.gif"
Alt="Image" >
</CENTER>

<P>
This demo reads an image in the portable-bitmap (pbm) format and converts it
into a integer matrix. This matrix is then converted into a single stream of 
integers. Runlength encoding is performed on this stream of integers. After 
compression, the stream is then uncompressed into a single stream of integers
which is then converted into a matrix and then an image. Both the input and
the output images are displayed on the screen. <p>

For the purpose of this demo, the scheme chosen for the runlength encoding is
quite simple. Since the input is a black and white image, it is treated as 
a binary matrix with every pixel represented as a bit (1 for black and 0 for 
white, as in the pbm format). The matrix once converted into a stream is then
treated as a stream of bits. The runlength encoder counts the number of times
the same bit appears in the stream. It uses 1 byte to indicate the value of 
the bit and the number of times the bit occured continuously (upto a count of 
128). If the bit occured more than 128 times, then a new byte is used to 
indicate the value and the count for the rest of the stream. The decoder does 
the exact opposite and generates a stream of bits corresponding to the input
byte stream. <p>

Both the input and the output images are displayed on the screen. <P>

<P>This applet is implemented by
<TT><A HREF="RLEDiva.java">RLEDiva.java</A></TT>.
<P>The simulation consists of a
<A HREF="PNImageSource.java">PNImageSource</A> Actor, a
<A HREF="MatrixUnpacker.java">MatrixUnpacker</A> Actor,
<A HREF="RLEncoder.java">RLEncoder</A> Actor,
<A HREF="RLDecoder.java">RLDecoder</A> Actor,
<A HREF="MatrixPacker.java">MatrixPacker</A> Actor,
<A HREF="PNImageSink.java">PNImageSink</A> Actor and two
<A HREF="ImageDisplay.java">ImageDisplay</A>
Actors.
<BR>

<CENTER>
<IMG SRC="RLEncoding.gif"
Alt="Image" >
</CENTER>
<BR>
<HR>Copyright &copy; 1998-1999 The Regents of the University of California.
All rights reserved.
<BR>Last updated: $Date$, comments to:&nbsp;<author>ptII@eecs.berkeley.edu</author>
</BODY>
</HTML>
