<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II DE Modal Model</title>
<link href="../../../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<H1>DE Modal Model</H1>
<!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->
<!-- PT DEPLOYJAVA CONVERTER -->
<p>
OpenQueueingNetwork is available as:
<ul>
<!-- See http://blogs.sun.com/thejavatutorials/entry/deployment_toolkit_101 -->
<script src="../../../../../doc/deployJava.js"></script>
<script >
    var dir = location.href.substring(0,location.href.lastIndexOf('/')+1);
    var url = dir + "OpenQueueingNetwork.jnlp";
    deployJava.createWebStartLaunchButton(url);
</script>
 <li>An <a href="OpenQueueingNetworkVergil.htm">applet</a>.
</ul>  
<script>

deployJava.displayWebStartMessage("../../../../../"); </script>
<!-- /PT DEPLOYJAVA CONVERTER -->
<p>
This example Models a storage system
described in [1]
where jobs arrive at random, are
processed by the CPU, which then
writes to Disk1, after which the CPU
does more processing, writes to
Disk2, and finally performs a third
batch of CPU processing. The incoming
jobs are time stamped with the time of
arrival, and upon final departure, the
model measures the overall latency of
the job. The CPU execution times and
disk processing times are exponential
random variables, and jobs are queued
while those resources are busy.</p>
<p>
[1] Heuseyin Simitci, Storage Network Performance Analytics, Wiley, 2003.
</p>
</BODY>
</HTML>
