<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="SpeakingServerListeningClient" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="3">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 45.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 262, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000002">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{339.9999999999996, 252.00000000000006}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="A demo for JavaScript Web Socket to show full duplex communication between server&#10;and client. Once the connection is established, the client starts listening to the server&#10;and the server sends a message to the client.&#10;&#10;This also shows that multiple clients can connect to the same server.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, 345.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Hokeun Kim">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, 445.0]">
        </property>
    </property>
    <entity name="WSServer" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocket');&#10;&#10;var server = null;&#10;&#10;exports.initialize = function() {&#10;  // Start an HTTP server and begin listening for connection requests.&#10;  if (server == null) {&#10;    server = new WebSocket.Server({port:8081});&#10;    server.on('listening', onListening);&#10;    server.on('connection', onConnection);&#10;    server.start();&#10;  }&#10;}&#10;&#10;// When the server is listening for connections, print a message.&#10;function onListening() {&#10;  send('started', 'Server is listening for connections.');&#10;}&#10;&#10;// Count clients.&#10;var clientCount = 0;&#10;&#10;function onConnection(socket) {&#10;  clientCount++;&#10;  console.log('server: Client is connected: ' + clientCount);&#10;  socket.on('message', function(message) {&#10;    send('output', message);&#10;  });&#10;  socket.send('Hello to client number ' + clientCount);&#10;}&#10;&#10;exports.wrapup = function() {&#10;  server.close();&#10;}&#10;">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[95.0, 115.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="started" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="WSClient" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocket');&#10;var client = null;&#10;&#10;function onMessage(data, flags) {&#10;  send('output', 'Client received a message: ' + data);&#10;}&#10;&#10;function onOpen() {&#10;  client.send('Hello from the client');&#10;  console.log('client: connection to a server established');&#10;}&#10;&#10;exports.initialize = function() {&#10;  if (client == null) {&#10;    console.log('client: connecting to a server');&#10;    client = new WebSocket.Client({'host':'localhost', 'port':8081});&#10;    client.on('open', onOpen);&#10;    client.on('message', onMessage);&#10;  }&#10;}&#10;&#10;exports.wrapup = function() {&#10;  if (client != null) {&#10;    console.log('client: closing the socket');&#10;    client.close();&#10;    client = null;&#10;  }&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 200.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="ReceivedByClient" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={620, 371, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 200.0]">
        </property>
    </entity>
    <entity name="ReceivedByServer" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={617, 155, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[265.0, 110.0]">
        </property>
    </entity>
    <entity name="WSClient2" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var WebSocket = require('webSocket');&#10;var client = null;&#10;&#10;function onMessage(data, flags) {&#10;  send('output', 'Client received a message: ' + data);&#10;}&#10;&#10;function onOpen() {&#10;  client.send('Hello from the client');&#10;  console.log('client: connection to a server established');&#10;}&#10;&#10;exports.initialize = function() {&#10;  if (client == null) {&#10;    console.log('client: connecting to a server');&#10;    client = new WebSocket.Client({'host':'localhost', 'port':8081});&#10;    client.on('open', onOpen);&#10;    client.on('message', onMessage);&#10;  }&#10;}&#10;&#10;exports.wrapup = function() {&#10;  if (client != null) {&#10;    console.log('client: closing the socket');&#10;    client.close();&#10;    client = null;&#10;  }&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="10">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="30">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[75.0, 290.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="ReceivedByClient2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={618, 591, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 290.0]">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="WSServer.output" relation="relation3"/>
    <link port="WSServer.started" relation="relation4"/>
    <link port="WSClient.output" relation="relation2"/>
    <link port="ReceivedByClient.input" relation="relation2"/>
    <link port="ReceivedByServer.input" relation="relation3"/>
    <link port="ReceivedByServer.input" relation="relation4"/>
    <link port="WSClient2.output" relation="relation"/>
    <link port="ReceivedByClient2.input" relation="relation"/>
</entity>
