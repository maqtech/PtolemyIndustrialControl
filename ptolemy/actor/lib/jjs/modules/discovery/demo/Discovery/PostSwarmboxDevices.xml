<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="PostSwarmboxDevices" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={59, 17, 1242, 641}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[1014, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{497.0000000000002, 252.00000000000003}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="10.0">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{55.0, 25.0}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Delay ensures that model displays results before stopping.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[440.0, 460.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This swarmlet discovers devices on the local area network and&#10;posts this information to a web server running on terra.&#10;&#10;To test locally using node, run&#10;npm install express&#10;npm install body-parser&#10;node discoverylistener.js&#10;Run the model&#10;&#10;For more info, please see:&#10;https://www.terraswarm.org/accessors/wiki/Version0/Discovery">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[140.0, 5.0]">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.8,0.0,0.0,1.0}">
        </property>
        <property name="bold" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Please enter the name of the host &#10;swarmbox in &quot;SwarmboxName&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[35.0, 220.0]">
        </property>
    </property>
    <property name="baseURL" class="ptolemy.data.expr.Parameter" value="&quot;http://localhost:8088/hosts/&quot;">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[495.0, 225.0]">
        </property>
    </property>
    <property name="Annotation4" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Terra URL:  http://terra.eecs.berkeley.edu:8088/hosts/">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[490.0, 235.0]">
        </property>
    </property>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={943, 304, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[705.0, 300.0]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={793, 483, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[250.0, 310.0]">
        </property>
    </entity>
    <entity name="Display3" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={81, 404, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[340.0, 480.0]">
        </property>
    </entity>
    <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[45.0, 365.0]">
        </property>
    </entity>
    <entity name="Stop" class="ptolemy.actor.lib.Stop">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[890.0, 380.0]">
        </property>
    </entity>
    <entity name="MicrostepDelay" class="ptolemy.actor.lib.MicrostepDelay">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[715.0, 375.0]">
        </property>
    </entity>
    <entity name="Const" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[820.0, 380.0]">
        </property>
    </entity>
    <entity name="MicrostepDelay2" class="ptolemy.actor.lib.MicrostepDelay">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[715.0, 435.0]">
        </property>
    </entity>
    <entity name="Discovery" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** This accessor discovers devices on the local area network.&#10; *  It requires the discovery module.  Please see:&#10; *  https://www.terraswarm.org/accessors/wiki/Version0/Discovery&#10; * &#10; *  @accessor Discovery&#10; *  @module Discovery&#10; *  @author Elizabeth Latronico (beth@berkeley.edu)&#10; *  @input {string} hostIP The IP address of the host.  Used to discover other&#10; *   devices on the local area network.&#10; *  @output {string} devices A JSON object containing IP addresses and (when&#10; *   available) names and MAC addresses of devices on the local area network.&#10; *  @parameter {boolean} useNmap True if nmap should be used for discovery, &#10; *   false to use ping and arp.  Default is false.&#10; */&#10;&#10;var discovery = require('discovery');&#10;// Initialize ds here, instead of in setup(), so that the ds object is defined&#10;// when the ds.on() function is encountered&#10;var ds = new discovery.DiscoveryService();  &#10;&#10;/** Define inputs and outputs. */&#10;exports.setup = function () {&#10;    &#10;    accessor.input('hostIP', {&#10;        type: 'string',&#10;      });&#10;    &#10;    accessor.output('devices', {&#10;        type: 'JSON',&#10;      });&#10;    &#10;    accessor.parameter('useNmap', {&#10;        type: 'boolean',&#10;        value: false,&#10;      });&#10;};&#10;&#10;var handle;&#10;&#10;/** Upon receiving a host IP address, discover devices on the corresponding &#10; *  local area network.&#10; */&#10;exports.initialize = function () {&#10;	handle = addInputHandler('hostIP', function() {&#10;		if (get('useNmap')) {&#10;		    ds.discoverDevices(get('hostIP'), 'nmap');&#10;		} else {&#10;			ds.discoverDevices(get('hostIP'));&#10;		}&#10;	});&#10;};&#10;&#10;/** Upon wrapup, stop handling new inputs.  */&#10;exports.wrapup = function () {&#10;    removeInputHandler(handle);&#10;};&#10;&#10;/** When discovery is finished, send a list of devices.  */&#10;ds.on('discovered', function(data) {&#10;	if (data == &quot;&quot;) {&#10;       send('error', 'Error:  No devices found.  At minimum, the host machine should be found.');&#10;    } else {&#10;   send('devices', data);&#10;    }&#10;});&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/Discovery.js">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;This accessor discovers devices on the local area network.&#10; It requires the discovery module.  Please see:&#10; https://www.terraswarm.org/accessors/wiki/Version0/Discovery&lt;/p&gt;">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Elizabeth Latronico (beth@berkeley.edu)">
            </property>
            <property name="hostIP (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) The IP address of the host.  Used to discover other&#10;  devices on the local area network.">
            </property>
            <property name="devices (port)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;string&quot;]}) A JSON object containing IP addresses and (when&#10;  available) names and MAC addresses of devices on the local area network.">
            </property>
            <property name="useNmap (parameter)" class="ptolemy.kernel.util.StringAttribute" value="({names:[&quot;boolean&quot;]}) True if nmap should be used for discovery, &#10;  false to use ping and arp.  Default is false.">
            </property>
        </property>
        <property name="useNmap" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[285.0, 365.0]">
        </property>
        <port name="hostIP" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="devices" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="IPAddress" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** This accessor outputs the IP address of the local machine.&#10; * &#10; *  @accessor IPAddress&#10; *  @module Discovery&#10; *  @author Elizabeth Latronico (beth@berkeley.edu), based on IPAddress actor&#10; *  by Christopher Brooks&#10; *  @input {boolean} trigger Send a token here to produce an output.&#10; *  @output {string} IPAddress The IP address of the local machine.&#10; */&#10;&#10;var discovery = require('discovery');&#10;// Initialize ds here, instead of in setup(), so that the ds object is defined&#10;// when the ds.on() function is encountered&#10;var ds = new discovery.DiscoveryService(); &#10;&#10;/** Define inputs and outputs. */&#10;exports.setup = function () {&#10;    &#10;    accessor.input('trigger', {&#10;        type: 'boolean',&#10;      });&#10;    &#10;    accessor.output('IPAddress', {&#10;        type: 'string',&#10;      });&#10;};&#10;&#10;var handle;&#10;&#10;/** Upon receiving a trigger input, output the host machine's IP address.&#10; */&#10;exports.initialize = function () {&#10;	handle = addInputHandler('trigger', function() {&#10;		send('IPAddress', ds.getHostAddress());&#10;	});&#10;};&#10;&#10;/** Upon wrapup, stop handling new inputs.  */&#10;exports.wrapup = function () {&#10;    removeInputHandler(handle);&#10;};&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/IPAddress.js">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[150.0, 365.0]">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="IPAddress" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="SwarmboxName" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="&quot;swarmbox007&quot;">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[375.0, 240.0]">
        </property>
    </entity>
    <entity name="Expression" class="ptolemy.actor.lib.Expression">
        <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="baseURL + name + &quot;/devices&quot;">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
            <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[485.0, 300.0]">
        </property>
        <port name="name" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="TokenToJSON" class="ptolemy.actor.lib.conversions.json.TokenToJSON">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[385.0, 365.0]">
        </property>
    </entity>
    <entity name="Display4" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={694, 471, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[410.0, 405.0]">
        </property>
    </entity>
    <entity name="HTTPPost" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** Post the input to the given URL.  A wrapper for httpRequest for posting. &#10; *  Does NOT handle multiple data types.  Only knows how to post JSON data. &#10; * &#10; *  @accessor HTTPPost&#10; *  @author Elizabeth Latronico (beth@berkeley.edu)&#10; *  @input {JSON} data The data to post.&#10; *  @input {String} url The url to post the data to.&#10; *  @output {string} response The server's response.&#10; */&#10;&#10;/** Define inputs and outputs. */&#10;exports.setup = function () {&#10;    &#10;    accessor.input('data', {&#10;        type: 'JSON',&#10;      });&#10;    &#10;    accessor.input('url', {&#10;        type: 'string',&#10;      });&#10;    &#10;    accessor.output('response', {&#10;        type: 'string',&#10;      });&#10;};&#10;&#10;var handle;&#10;var timeout = 2000;    // The httpRequest method currently ignores the timeout&#10;&#10;/** Post the received data to the specified url.  */&#10;exports.initialize = function () {&#10;	handle = addInputHandler('data', function() {&#10;		var properties = {};&#10;		properties[&quot;Content-Type&quot;] = &quot;application/json&quot;;&#10;		var responseText = &#10;			httpRequest(get('url'), 'POST', properties, get('data'), &#10;					timeout);&#10;		send('response', responseText);&#10;	});&#10;}&#10;&#10;/** Upon wrapup, stop handling new inputs.  */&#10;exports.wrapup = function () {&#10;    removeInputHandler(handle);&#10;};&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/HTTPPost.js">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[510.0, 375.0]">
        </property>
        <port name="data" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="url" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="response" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[675.0, 375.0]">
        </vertex>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[285.0, 435.0]">
        </vertex>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[220.0, 365.0]">
        </vertex>
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation9" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[315.0, 365.0]">
        </vertex>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation12" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation11" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="Display.input" relation="relation7"/>
    <link port="Display2.input" relation="relation3"/>
    <link port="Display3.input" relation="relation"/>
    <link port="SingleEvent.output" relation="relation8"/>
    <link port="Stop.input" relation="relation6"/>
    <link port="MicrostepDelay.input" relation="relation7"/>
    <link port="MicrostepDelay.output" relation="relation5"/>
    <link port="Const.output" relation="relation6"/>
    <link port="Const.trigger" relation="relation5"/>
    <link port="Const.trigger" relation="relation2"/>
    <link port="MicrostepDelay2.input" relation="relation"/>
    <link port="MicrostepDelay2.output" relation="relation2"/>
    <link port="Discovery.error" relation="relation"/>
    <link port="Discovery.hostIP" relation="relation3"/>
    <link port="Discovery.devices" relation="relation9"/>
    <link port="IPAddress.trigger" relation="relation8"/>
    <link port="IPAddress.IPAddress" relation="relation3"/>
    <link port="SwarmboxName.output" relation="relation4"/>
    <link port="SwarmboxName.trigger" relation="relation9"/>
    <link port="Expression.output" relation="relation12"/>
    <link port="Expression.name" relation="relation4"/>
    <link port="TokenToJSON.input" relation="relation9"/>
    <link port="TokenToJSON.output" relation="relation11"/>
    <link port="Display4.input" relation="relation9"/>
    <link port="HTTPPost.data" relation="relation11"/>
    <link port="HTTPPost.url" relation="relation12"/>
    <link port="HTTPPost.response" relation="relation7"/>
</entity>
