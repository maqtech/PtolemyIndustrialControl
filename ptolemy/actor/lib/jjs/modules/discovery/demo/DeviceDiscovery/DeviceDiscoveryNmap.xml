<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="DeviceDiscoveryNmap" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={149, 55, 1080, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[846, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{413.0, 252.0}">
    </property>
    <property name="SDF Director" class="ptolemy.domains.sdf.kernel.SDFDirector">
        <property name="iterations" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[60.0, 40.0]">
        </property>
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This model uses an accessor to discover devices on the local area network, using nmap.&#10;&#10;The host code, in DiscoveryHelper, is written in Java and interfaces&#10;to the Javascript accessor using Nashorn libraries.  &#10;&#10;The host code determines the host platform, then executes the nmap command&#10;to find device IP addresses, names and MAC addresses.&#10;&#10;Nmap requires a separate install on Mac and Windows.  Please see:  https://nmap.org/">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{170.0, 25.0}">
        </property>
    </property>
    <entity name="DeviceDiscoveryNmapAccessor" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var discovery = require(&quot;discovery&quot;);&#10;&#10;var ds = new discovery.DiscoveryService();&#10;&#10;function fire() {&#10;        // Find all devices on the same subnet as host IP address using the nmap program&#10;        // Note that nmap requires a separate install on Mac and Windows.  See: https://nmap.org/&#10;        ds.discoverDevices(get('hostIP'), &quot;nmap&quot;);&#10;}&#10;&#10;ds.on('discovered', function(data) {&#10;        if (data == &quot;&quot;) {&#10;           throw('Error:  No devices found.  At minimum, the host machine should be found.');&#10;        } else {&#10;           send('devices', data);&#10;        }&#10;});&#10;">
            <property name="_hide" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[260.0, 240.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="devices" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="arrayType(arrayType({IPaddress=string, name=string, mac=string}))">
            </property>
        </port>
        <port name="hostIP" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={503, 261, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[445.0, 240.0]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={362, 595, 343, 230}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[220.0, 330.0]">
        </property>
    </entity>
    <entity name="Display3" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={742, 577, 343, 230}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[340.0, 300.0]">
        </property>
    </entity>
    <entity name="IPAddress" class="ptolemy.actor.lib.net.IPAddress">
        <doc>Send the IP address of the host to the output port.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[55.0, 230.0]">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[170.0, 240.0]">
        </vertex>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DeviceDiscoveryNmapAccessor.error" relation="relation2"/>
    <link port="DeviceDiscoveryNmapAccessor.devices" relation="relation"/>
    <link port="DeviceDiscoveryNmapAccessor.hostIP" relation="relation3"/>
    <link port="Display.input" relation="relation"/>
    <link port="Display2.input" relation="relation3"/>
    <link port="Display3.input" relation="relation2"/>
    <link port="IPAddress.output" relation="relation3"/>
</entity>
