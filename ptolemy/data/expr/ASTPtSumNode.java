/* Generated By:JJTree: Do not edit this line. ASTPtSumNode.java */
/* Modified by: Neil Smyth */
package pt.data.parser;

import java.util.*;
import collections.LinkedList;

public class ASTPtSumNode extends ASTPtSimpleNode {
    LinkedList _tokenList = new LinkedList();

    protected void _resolveValue() throws Exception {
        int num =  jjtGetNumChildren();
        if (num ==1) {
            String str = childTokens[0].toString();
            _ptToken.fromString(String.valueOf(str));
            return;
        }
        if (jjtGetNumChildren() != ( _tokenList.size() +1) ) {
            throw new ParseException();
        }
        _ptToken = _ptToken.add(_ptToken, childTokens[0]);
        int size = _tokenList.size();
        for (int i=0; i<size; i++) {
            // When start using 1.2 will change this
            Token x = (Token)_tokenList.take();
            if (x.image.compareTo("+") == 0) {
                _ptToken = _ptToken.add(_ptToken, childTokens[i+1]);
            } else if (x.image.compareTo("-") == 0) {
                _ptToken = _ptToken.subtract(_ptToken, childTokens[i+1]);
            } else {
                throw new Exception();
            }
        }
    }


  public ASTPtSumNode(int id) {
    super(id);
  }

  public ASTPtSumNode(PtParser p, int id) {
    super(p, id);
  }

  public static Node jjtCreate(int id) {
      return new ASTPtSumNode(id);
  }

  public static Node jjtCreate(PtParser p, int id) {
      return new ASTPtSumNode(p, id);
  }
}
