


ARM Macro Assembler    Page 1 


    1 00000000         ; <<< Use Configuration Wizard in Context Menu >>>
    2 00000000         ;*******************************************************
                       ***********************
    3 00000000         ;
    4 00000000         ; startup_rvmdk.S - Startup code for use with Keil's uVi
                       sion.
    5 00000000         ;
    6 00000000         ; Copyright (c) 2005-2007 Luminary Micro, Inc.  All righ
                       ts reserved.
    7 00000000         ; 
    8 00000000         ; Software License Agreement
    9 00000000         ; 
   10 00000000         ; Luminary Micro, Inc. (LMI) is supplying this software 
                       for use solely and
   11 00000000         ; exclusively on LMI's microcontroller products.
   12 00000000         ; 
   13 00000000         ; The software is owned by LMI and/or its suppliers, and
                        is protected under
   14 00000000         ; applicable copyright laws.  All rights are reserved.  
                       You may not combine
   15 00000000         ; this software with "viral" open-source software in ord
                       er to form a larger
   16 00000000         ; program.  Any use in violation of the foregoing restri
                       ctions may subject
   17 00000000         ; the user to criminal sanctions under applicable laws, 
                       as well as to civil
   18 00000000         ; liability for the breach of the terms and conditions o
                       f this license.
   19 00000000         ; 
   20 00000000         ; THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHE
                       THER EXPRESS, IMPLIED
   21 00000000         ; OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED W
                       ARRANTIES OF
   22 00000000         ; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE A
                       PPLY TO THIS SOFTWARE.
   23 00000000         ; LMI SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPE
                       CIAL, INCIDENTAL, OR
   24 00000000         ; CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   25 00000000         ; 
   26 00000000         ; This is part of revision 1900 of the Stellaris Periphe
                       ral Driver Library.
   27 00000000         ;
   28 00000000         ;*******************************************************
                       ***********************
   29 00000000         
   30 00000000         ;*******************************************************
                       ***********************
   31 00000000         ;
   32 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   33 00000000         ;
   34 00000000         ;*******************************************************
                       ***********************
   35 00000000 00000100 
                       Stack   EQU              0x00000100
   36 00000000         
   37 00000000         ;*******************************************************
                       ***********************
   38 00000000         ;
   39 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>



ARM Macro Assembler    Page 2 


   40 00000000         ;
   41 00000000         ;*******************************************************
                       ***********************
   42 00000000 00000000 
                       Heap    EQU              0x00000000
   43 00000000         
   44 00000000         ;*******************************************************
                       ***********************
   45 00000000         ;
   46 00000000         ; Allocate space for the stack.
   47 00000000         ;
   48 00000000         ;*******************************************************
                       ***********************
   49 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   50 00000000         StackMem
   51 00000000                 SPACE            Stack
   52 00000100         __initial_sp
   53 00000100         
   54 00000100         ;*******************************************************
                       ***********************
   55 00000100         ;
   56 00000100         ; Allocate space for the heap.
   57 00000100         ;
   58 00000100         ;*******************************************************
                       ***********************
   59 00000100                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   60 00000000         __heap_base
   61 00000000         HeapMem
   62 00000000                 SPACE            Heap
   63 00000000         __heap_limit
   64 00000000         
   65 00000000         ;*******************************************************
                       ***********************
   66 00000000         ;
   67 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   68 00000000         ;
   69 00000000         ;*******************************************************
                       ***********************
   70 00000000                 PRESERVE8
   71 00000000         
   72 00000000         ;*******************************************************
                       ***********************
   73 00000000         ;
   74 00000000         ; Place code into the reset code section.
   75 00000000         ;
   76 00000000         ;*******************************************************
                       ***********************
   77 00000000                 AREA             RESET, CODE, READONLY
   78 00000000                 THUMB
   79 00000000         
   80 00000000         ;*******************************************************
                       ***********************
   81 00000000         ;
   82 00000000         ; External declaration for the interrupt handler used by
                        the application.
   83 00000000         ;



ARM Macro Assembler    Page 3 


   84 00000000         ;*******************************************************
                       ***********************
   85 00000000                 EXTERN           UARTIntHandler
   86 00000000                 EXTERN           Timer0IntHandler
   87 00000000                 EXTERN           Timer1IntHandler
   88 00000000                 EXTERN           SysTickHandler
   89 00000000                 EXTERN           IntGPIOa
   90 00000000                 EXTERN           IntGPIOb
   91 00000000                 EXTERN           IntGPIOc
   92 00000000                 EXTERN           IntGPIOd
   93 00000000                 EXTERN           IntGPIOe
   94 00000000                 EXTERN           IntGPIOf
   95 00000000                 EXTERN           IntGPIOg
   96 00000000         
   97 00000000         ;*******************************************************
                       ***********************
   98 00000000         ;
   99 00000000         ; The vector table.
  100 00000000         ;
  101 00000000         ;*******************************************************
                       ***********************
  102 00000000                 EXPORT           __Vectors
  103 00000000         __Vectors
  104 00000000 00000100        DCD              StackMem + Stack ; Top of Stack
                                                            
  105 00000004 00000000        DCD              Reset_Handler ; Reset Handler
  106 00000008 00000000        DCD              NmiSR       ; NMI Handler
  107 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
  108 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
  109 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
  110 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
  111 0000001C 00000000        DCD              0           ; Reserved
  112 00000020 00000000        DCD              0           ; Reserved
  113 00000024 00000000        DCD              0           ; Reserved
  114 00000028 00000000        DCD              0           ; Reserved
  115 0000002C 00000000        DCD              IntDefaultHandler 
                                                            ; SVCall Handler
  116 00000030 00000000        DCD              IntDefaultHandler ; Debug Monit
                                                            or Handler
  117 00000034 00000000        DCD              0           ; Reserved
  118 00000038 00000000        DCD              IntDefaultHandler 
                                                            ; PendSV Handler
  119 0000003C 00000000        DCD              SysTickHandler 
                                                            ; SysTick Handler
  120 00000040 00000000        DCD              IntGPIOa    ; GPIO Port A
  121 00000044 00000000        DCD              IntGPIOb    ; GPIO Port B
  122 00000048 00000000        DCD              IntGPIOc    ; GPIO Port C
  123 0000004C 00000000        DCD              IntGPIOd    ; GPIO Port D
  124 00000050 00000000        DCD              IntGPIOe    ; GPIO Port E
  125 00000054 00000000        DCD              UARTIntHandler ; UART0
  126 00000058 00000000        DCD              IntDefaultHandler ; UART1
  127 0000005C 00000000        DCD              IntDefaultHandler ; SSI
  128 00000060 00000000        DCD              IntDefaultHandler ; I2C



ARM Macro Assembler    Page 4 


  129 00000064 00000000        DCD              IntDefaultHandler ; PWM Fault
  130 00000068 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 0
  131 0000006C 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 1
  132 00000070 00000000        DCD              IntDefaultHandler 
                                                            ; PWM Generator 2
  133 00000074 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder
  134 00000078 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 0
  135 0000007C 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 1
  136 00000080 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 2
  137 00000084 00000000        DCD              IntDefaultHandler 
                                                            ; ADC Sequence 3
  138 00000088 00000000        DCD              IntDefaultHandler ; Watchdog
  139 0000008C 00000000        DCD              Timer0IntHandler ; Timer 0A
  140 00000090 00000000        DCD              IntDefaultHandler ; Timer 0B
  141 00000094 00000000        DCD              Timer1IntHandler ; Timer 1A
  142 00000098 00000000        DCD              IntDefaultHandler ; Timer 1B
  143 0000009C 00000000        DCD              IntDefaultHandler ; Timer 2A
  144 000000A0 00000000        DCD              IntDefaultHandler ; Timer 2B
  145 000000A4 00000000        DCD              IntDefaultHandler ; Comp 0
  146 000000A8 00000000        DCD              IntDefaultHandler ; Comp 1
  147 000000AC 00000000        DCD              IntDefaultHandler ; Comp 2
  148 000000B0 00000000        DCD              IntDefaultHandler 
                                                            ; System Control
  149 000000B4 00000000        DCD              IntDefaultHandler 
                                                            ; Flash Control
  150 000000B8 00000000        DCD              IntGPIOf    ; GPIO Port F
  151 000000BC 00000000        DCD              IntGPIOg    ; GPIO Port G
  152 000000C0 00000000        DCD              IntDefaultHandler ; GPIO Port H
                                                            
  153 000000C4 00000000        DCD              IntDefaultHandler 
                                                            ; UART2 Rx and Tx
  154 000000C8 00000000        DCD              IntDefaultHandler 
                                                            ; SSI1 Rx and Tx
  155 000000CC 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer A
  156 000000D0 00000000        DCD              IntDefaultHandler ; Timer 3 sub
                                                            timer B
  157 000000D4 00000000        DCD              IntDefaultHandler ; I2C1 Master
                                                             and Slave
  158 000000D8 00000000        DCD              IntDefaultHandler ; Quadrature 
                                                            Encoder 1
  159 000000DC 00000000        DCD              IntDefaultHandler ; CAN0
  160 000000E0 00000000        DCD              IntDefaultHandler ; CAN1
  161 000000E4 00000000        DCD              IntDefaultHandler ; CAN2
  162 000000E8 00000000        DCD              IntDefaultHandler ; Ethernet
  163 000000EC 00000000        DCD              IntDefaultHandler ; Hibernate
  164 000000F0         
  165 000000F0         ;*******************************************************
                       ***********************
  166 000000F0         ;
  167 000000F0         ; This is the code that gets called when the processor f
                       irst starts execution
  168 000000F0         ; following a reset event.



ARM Macro Assembler    Page 5 


  169 000000F0         ;
  170 000000F0         ;*******************************************************
                       ***********************
  171 000000F0                 EXPORT           Reset_Handler
  172 000000F0         Reset_Handler
  173 000000F0         ;
  174 000000F0         ; Call the C library enty point that handles startup.  T
                       his will copy
  175 000000F0         ; the .data section initializers from flash to SRAM and 
                       zero fill the
  176 000000F0         ; .bss section.
  177 000000F0         ;
  178 000000F0                 IMPORT           __main
  179 000000F0 F7FF BFFE       B                __main
  180 000000F4         
  181 000000F4         ;*******************************************************
                       ***********************
  182 000000F4         ;
  183 000000F4         ; This is the code that gets called when the processor r
                       eceives a NMI.  This
  184 000000F4         ; simply enters an infinite loop, preserving the system 
                       state for examination
  185 000000F4         ; by a debugger.
  186 000000F4         ;
  187 000000F4         ;*******************************************************
                       ***********************
  188 000000F4         NmiSR
  189 000000F4 E7FE            B                NmiSR
  190 000000F6         
  191 000000F6         ;*******************************************************
                       ***********************
  192 000000F6         ;
  193 000000F6         ; This is the code that gets called when the processor r
                       eceives a fault
  194 000000F6         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  195 000000F6         ; for examination by a debugger.
  196 000000F6         ;
  197 000000F6         ;*******************************************************
                       ***********************
  198 000000F6         FaultISR
  199 000000F6 E7FE            B                FaultISR
  200 000000F8         
  201 000000F8         ;*******************************************************
                       ***********************
  202 000000F8         ;
  203 000000F8         ; This is the code that gets called when the processor r
                       eceives an unexpected
  204 000000F8         ; interrupt.  This simply enters an infinite loop, prese
                       rving the system state
  205 000000F8         ; for examination by a debugger.
  206 000000F8         ;
  207 000000F8         ;*******************************************************
                       ***********************
  208 000000F8         IntDefaultHandler
  209 000000F8 E7FE            B                IntDefaultHandler
  210 000000FA         
  211 000000FA         ;*******************************************************
                       ***********************



ARM Macro Assembler    Page 6 


  212 000000FA         ;
  213 000000FA         ; Make sure the end of this section is aligned.
  214 000000FA         ;
  215 000000FA         ;*******************************************************
                       ***********************
  216 000000FA 00 00           ALIGN
  217 000000FC         
  218 000000FC         ;*******************************************************
                       ***********************
  219 000000FC         ;
  220 000000FC         ; Some code in the normal code section for initializing 
                       the heap and stack.
  221 000000FC         ;
  222 000000FC         ;*******************************************************
                       ***********************
  223 000000FC                 AREA             |.text|, CODE, READONLY
  224 00000000         
  225 00000000         ;*******************************************************
                       ***********************
  226 00000000         ;
  227 00000000         ; The function expected of the C library startup code fo
                       r defining the stack
  228 00000000         ; and heap memory locations.  For the C library version 
                       of the startup code,
  229 00000000         ; provide this function so that the C library initializa
                       tion code can find out
  230 00000000         ; the location of the stack and heap.
  231 00000000         ;
  232 00000000         ;*******************************************************
                       ***********************
  233 00000000                 IF               :DEF: __MICROLIB
  234 00000000                 EXPORT           __initial_sp
  235 00000000                 EXPORT           __heap_base
  236 00000000                 EXPORT           __heap_limit
  237 00000000                 ELSE
  246                          ENDIF
  247 00000000         
  248 00000000         ;*******************************************************
                       ***********************
  249 00000000         ;
  250 00000000         ; Make sure the end of this section is aligned.
  251 00000000         ;
  252 00000000         ;*******************************************************
                       ***********************
  253 00000000                 ALIGN
  254 00000000         
  255 00000000         ;*******************************************************
                       ***********************
  256 00000000         ;
  257 00000000         ; Tell the assembler that we're done.
  258 00000000         ;
  259 00000000         ;*******************************************************
                       ***********************
  260 00000000                 END
Command Line: --16 --debug --xref --device=DLM --apcs=interwork -o.\Obj\Startup
.o -IC:\workspace\Keil\ARM\INC\Luminary --predefine="__MICROLIB SETA 1" --list=
.\Lst\Startup.lst Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 49 in file Startup.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 50 in file Startup.s
   Uses
      At line 104 in file Startup.s
Comment: StackMem used once
__initial_sp 00000100

Symbol: __initial_sp
   Definitions
      At line 52 in file Startup.s
   Uses
      At line 234 in file Startup.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 59 in file Startup.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 61 in file Startup.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 60 in file Startup.s
   Uses
      At line 235 in file Startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 63 in file Startup.s
   Uses
      At line 236 in file Startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FaultISR 000000F6

Symbol: FaultISR
   Definitions
      At line 198 in file Startup.s
   Uses
      At line 107 in file Startup.s
      At line 199 in file Startup.s

IntDefaultHandler 000000F8

Symbol: IntDefaultHandler
   Definitions
      At line 208 in file Startup.s
   Uses
      At line 108 in file Startup.s
      At line 109 in file Startup.s
      At line 110 in file Startup.s
      At line 115 in file Startup.s
      At line 116 in file Startup.s
      At line 118 in file Startup.s
      At line 126 in file Startup.s
      At line 127 in file Startup.s
      At line 128 in file Startup.s
      At line 129 in file Startup.s
      At line 130 in file Startup.s
      At line 131 in file Startup.s
      At line 132 in file Startup.s
      At line 133 in file Startup.s
      At line 134 in file Startup.s
      At line 135 in file Startup.s
      At line 136 in file Startup.s
      At line 137 in file Startup.s
      At line 138 in file Startup.s
      At line 140 in file Startup.s
      At line 142 in file Startup.s
      At line 143 in file Startup.s
      At line 144 in file Startup.s
      At line 145 in file Startup.s
      At line 146 in file Startup.s
      At line 147 in file Startup.s
      At line 148 in file Startup.s
      At line 149 in file Startup.s
      At line 152 in file Startup.s
      At line 153 in file Startup.s
      At line 154 in file Startup.s
      At line 155 in file Startup.s
      At line 156 in file Startup.s
      At line 157 in file Startup.s
      At line 158 in file Startup.s
      At line 159 in file Startup.s
      At line 160 in file Startup.s
      At line 161 in file Startup.s
      At line 162 in file Startup.s
      At line 163 in file Startup.s
      At line 209 in file Startup.s

NmiSR 000000F4




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: NmiSR
   Definitions
      At line 188 in file Startup.s
   Uses
      At line 106 in file Startup.s
      At line 189 in file Startup.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 77 in file Startup.s
   Uses
      None
Comment: RESET unused
Reset_Handler 000000F0

Symbol: Reset_Handler
   Definitions
      At line 172 in file Startup.s
   Uses
      At line 105 in file Startup.s
      At line 171 in file Startup.s

__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 103 in file Startup.s
   Uses
      At line 102 in file Startup.s
Comment: __Vectors used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 223 in file Startup.s
   Uses
      None
Comment: .text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$RESET 00000000

Symbol: .debug_info$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$RESET undefinedComment: .debug_info$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$RESET 00000000

Symbol: .debug_line$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$RESET undefinedComment: .debug_line$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$.text 00000000

Symbol: .debug_info$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$.text undefinedComment: .debug_info$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$.text 00000000

Symbol: .debug_line$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$.text undefinedComment: .debug_line$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00000000

Symbol: Heap
   Definitions
      At line 42 in file Startup.s
   Uses
      At line 62 in file Startup.s
Comment: Heap used once
Stack 00000100

Symbol: Stack
   Definitions
      At line 35 in file Startup.s
   Uses
      At line 51 in file Startup.s
      At line 104 in file Startup.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

IntGPIOa 00000000

Symbol: IntGPIOa
   Definitions
      At line 89 in file Startup.s
   Uses
      At line 120 in file Startup.s
Comment: IntGPIOa used once
IntGPIOb 00000000

Symbol: IntGPIOb
   Definitions
      At line 90 in file Startup.s
   Uses
      At line 121 in file Startup.s
Comment: IntGPIOb used once
IntGPIOc 00000000

Symbol: IntGPIOc
   Definitions
      At line 91 in file Startup.s
   Uses
      At line 122 in file Startup.s
Comment: IntGPIOc used once
IntGPIOd 00000000

Symbol: IntGPIOd
   Definitions
      At line 92 in file Startup.s
   Uses
      At line 123 in file Startup.s
Comment: IntGPIOd used once
IntGPIOe 00000000

Symbol: IntGPIOe
   Definitions
      At line 93 in file Startup.s
   Uses
      At line 124 in file Startup.s
Comment: IntGPIOe used once
IntGPIOf 00000000

Symbol: IntGPIOf
   Definitions
      At line 94 in file Startup.s
   Uses
      At line 150 in file Startup.s
Comment: IntGPIOf used once
IntGPIOg 00000000

Symbol: IntGPIOg
   Definitions
      At line 95 in file Startup.s
   Uses
      At line 151 in file Startup.s
Comment: IntGPIOg used once
SysTickHandler 00000000

Symbol: SysTickHandler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 88 in file Startup.s
   Uses
      At line 119 in file Startup.s
Comment: SysTickHandler used once
Timer0IntHandler 00000000

Symbol: Timer0IntHandler
   Definitions
      At line 86 in file Startup.s
   Uses
      At line 139 in file Startup.s
Comment: Timer0IntHandler used once
Timer1IntHandler 00000000

Symbol: Timer1IntHandler
   Definitions
      At line 87 in file Startup.s
   Uses
      At line 141 in file Startup.s
Comment: Timer1IntHandler used once
UARTIntHandler 00000000

Symbol: UARTIntHandler
   Definitions
      At line 85 in file Startup.s
   Uses
      At line 125 in file Startup.s
Comment: UARTIntHandler used once
__main 00000000

Symbol: __main
   Definitions
      At line 178 in file Startup.s
   Uses
      At line 179 in file Startup.s
Comment: __main used once
12 symbols
354 symbols in table
