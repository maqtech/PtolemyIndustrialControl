<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\Blinky.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\Blinky.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT3.1 [Build 934]: Last Updated: Thu Oct 30 17:30:15 2008
<BR><P>
<H3>Maximum Stack Usage =        344 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; processEvents &rArr; clock_fire &rArr; event_add &rArr; die &rArr; perror &rArr; fputs
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[fcf398]">CPUcpsid</a>
 <LI><a href="#[fcf350]">CPUcpsie</a>
 <LI><a href="#[fcf308]">CPUwfi</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b633f0]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b633f0]">NMI_Handler</a><BR>
 <LI><a href="#[b633a8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b633a8]">HardFault_Handler</a><BR>
 <LI><a href="#[b63360]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b63360]">MemManage_Handler</a><BR>
 <LI><a href="#[b63318]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b63318]">BusFault_Handler</a><BR>
 <LI><a href="#[b632d0]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b632d0]">UsageFault_Handler</a><BR>
 <LI><a href="#[b63288]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b63288]">SVC_Handler</a><BR>
 <LI><a href="#[b63240]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b63240]">DebugMon_Handler</a><BR>
 <LI><a href="#[b631f8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b631f8]">PendSV_Handler</a><BR>
 <LI><a href="#[b631b0]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b631b0]">SysTick_Handler</a><BR>
 <LI><a href="#[fd16a0]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[fd16a0]">UARTConfigSetExpClk</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b63438]">Reset_Handler</a>
 <LI><a href="#[b633f0]">NMI_Handler</a>
 <LI><a href="#[b633a8]">HardFault_Handler</a>
 <LI><a href="#[b63360]">MemManage_Handler</a>
 <LI><a href="#[b63318]">BusFault_Handler</a>
 <LI><a href="#[b632d0]">UsageFault_Handler</a>
 <LI><a href="#[b63288]">SVC_Handler</a>
 <LI><a href="#[b63240]">DebugMon_Handler</a>
 <LI><a href="#[b631f8]">PendSV_Handler</a>
 <LI><a href="#[b631b0]">SysTick_Handler</a>
 <LI><a href="#[fceb48]">__main</a>
 <LI><a href="#[b61590]">main</a>
 <LI><a href="#[fc3d50]">fputc</a>
 <LI><a href="#[fc3d50]">fputc</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[fceb48]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, entry.o($$startup$$))
<BR><BR>[Calls]<UL><LI><a href="#[fc4348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__init
</UL>

<P><STRONG><a name="[fc4390]"></a>__call_main</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[fc4348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__init
</UL>

<P><STRONG><a name="[b63438]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b633f0]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b633f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b633f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b633a8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b633a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b633a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b63360]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b63360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b63360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b63318]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b63318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b63318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b632d0]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b632d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b632d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b63288]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b63288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b63288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b63240]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b63240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b63240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b631f8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b631f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b631f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b631b0]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b631b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b631b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[b61ae8]"></a>setActuationInterrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b61a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator_fire
</UL>

<P><STRONG><a name="[b61aa0]"></a>getCurrentPhysicalTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, simpleptidesos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
<LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
<LI><a href="#[b61938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b61a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator_fire
</UL>

<P><STRONG><a name="[b61a58]"></a>actuator_fire</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b61aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentPhysicalTime
<LI><a href="#[b61ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setActuationInterrupt
</UL>

<P><STRONG><a name="[b61a10]"></a>die</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[fce7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perror
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b61818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_event
<LI><a href="#[b61860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_actor
<LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
</UL>

<P><STRONG><a name="[b619c8]"></a>event_add</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = event_add &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b61a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;die
</UL>
<BR>[Called By]<UL><LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
<LI><a href="#[b61788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_delay_fire
<LI><a href="#[b617d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;merge_fire
<LI><a href="#[b618f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computation_fire
<LI><a href="#[b61938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b61980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_fire
</UL>

<P><STRONG><a name="[b61980]"></a>clock_fire</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clock_fire &rArr; event_add &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b61938]"></a>clock_init</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clock_init &rArr; event_add &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[b61aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentPhysicalTime
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b618f0]"></a>computation_fire</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[fc4948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[b618a8]"></a>event_remove</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = event_remove &rArr; __1printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fcb818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b61860]"></a>fire_actor</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fire_actor &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b61a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;die
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
<LI><a href="#[b61818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_event
</UL>

<P><STRONG><a name="[b61818]"></a>execute_event</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b61860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_actor
<LI><a href="#[b61a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;die
</UL>

<P><STRONG><a name="[b617d0]"></a>merge_fire</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[b61788]"></a>model_delay_fire</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, simpleptidesos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[b61740]"></a>enableInterrupt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enableInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[b55d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b616f8]"></a>setTimedInterrupt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simpleptidesos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b616b0]"></a>safeToProcess</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, simpleptidesos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b61668]"></a>disableInterrupt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disableInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[b55d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[b61620]"></a>processEvents</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = processEvents &rArr; clock_fire &rArr; event_add &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b61668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableInterrupt
<LI><a href="#[b616b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;safeToProcess
<LI><a href="#[b616f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setTimedInterrupt
<LI><a href="#[b61740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableInterrupt
<LI><a href="#[b61860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fire_actor
<LI><a href="#[b618a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_remove
<LI><a href="#[b61980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_fire
<LI><a href="#[b61aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentPhysicalTime
<LI><a href="#[fc4d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b615d8]"></a>sensor_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sensor_init &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b619c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_add
<LI><a href="#[b61aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentPhysicalTime
<LI><a href="#[fc4608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[fc4d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fce360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b61590]"></a>main</STRONG> (Thumb, 536 bytes, Stack size 240 bytes, simpleptidesos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = main &rArr; processEvents &rArr; clock_fire &rArr; event_add &rArr; die &rArr; perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[b55c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[b55d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[b5a888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
<LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
<LI><a href="#[b61938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b61a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;die
<LI><a href="#[fcb818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1printf
<LI><a href="#[fcb8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__1fprintf
<LI><a href="#[fd1388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntEnable
<LI><a href="#[fd16a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[fe82d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[fe8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> init.o(.text)
</UL>
<P><STRONG><a name="[fcf398]"></a>CPUcpsid</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text), UNUSED)

<P><STRONG><a name="[fcf350]"></a>CPUcpsie</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b55c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[fcf308]"></a>CPUwfi</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu.o(.text), UNUSED)

<P><STRONG><a name="[fce7a0]"></a>perror</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, perror.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = perror &rArr; fputs
</UL>
<BR>[Calls]<UL><LI><a href="#[fc2f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[fc33d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strerror
<LI><a href="#[fc4030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputs
</UL>
<BR>[Called By]<UL><LI><a href="#[b61a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;die
</UL>

<P><STRONG><a name="[fce3a8]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[fce360]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
<LI><a href="#[b61788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_delay_fire
<LI><a href="#[b617d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;merge_fire
<LI><a href="#[b618f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computation_fire
<LI><a href="#[b61938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b61980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_fire
</UL>

<P><STRONG><a name="[fce318]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[fc4948]"></a>__aeabi_dadd</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>
<BR>[Called By]<UL><LI><a href="#[b618f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computation_fire
</UL>

<P><STRONG><a name="[fc4900]"></a>__aeabi_dsub</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>

<P><STRONG><a name="[fc48b8]"></a>__aeabi_drsub</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>

<P><STRONG><a name="[fc4608]"></a>__aeabi_i2d</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dflt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fc2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
</UL>

<P><STRONG><a name="[fc4348]"></a>__init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc4390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__call_main
</UL>
<BR>[Called By]<UL><LI><a href="#[fceb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[fc4300]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[fc4030]"></a>fputs</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fputs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputs
</UL>
<BR>[Called By]<UL><LI><a href="#[fce7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perror
</UL>

<P><STRONG><a name="[fc3d50]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, fputc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printf2.o(i.__0printf_2)
<LI> printf2.o(i.__0fprintf_2)
</UL>
<P><STRONG><a name="[fc3738]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>

<P><STRONG><a name="[fc36f0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[fc3588]"></a>__aeabi_llsr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>

<P><STRONG><a name="[fc3540]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[fc33d8]"></a>strerror</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, strerror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fce7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perror
</UL>

<P><STRONG><a name="[fc2bb0]"></a>_double_round</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[fc2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[fc2b68]"></a>_double_epilogue</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fc2bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[fc4608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[fc4990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_addcore
</UL>

<P><STRONG><a name="[b5ae70]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[b5a888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[b5ad50]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[b5a888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
</UL>

<P><STRONG><a name="[b5a888]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeUART
</UL>
<BR>[Calls]<UL><LI><a href="#[b5ad50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[b5ae70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b55d48]"></a>IntDisable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[b61668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disableInterrupt
</UL>

<P><STRONG><a name="[b55d00]"></a>IntEnable</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b61740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableInterrupt
</UL>

<P><STRONG><a name="[b55c70]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[fcf350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe8998]"></a>SysCtlClockGet</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, sysctl.o(i.SysCtlClockGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysCtlClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe82d8]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd16a0]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[fd16a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[fd16a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>

<P><STRONG><a name="[fd1388]"></a>UARTIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UARTIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fcb8f0]"></a>__0fprintf_2</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf2.o(i.__0fprintf_2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fcb980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fcb8a8]"></a>__1fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0fprintf_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __1fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fcb860]"></a>__0printf_2</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf2.o(i.__0printf_2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fcb980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[fcb818]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0printf_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __1printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b61590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b618a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_remove
</UL>

<P><STRONG><a name="[fc2f58]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[fce7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;perror
</UL>

<P><STRONG><a name="[fc2f10]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[1109e28]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1109de0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1109d98]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[fc4d70]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[b61620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processEvents
</UL>

<P><STRONG><a name="[fc4d28]"></a>malloc</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b615d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_init
<LI><a href="#[b61788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;model_delay_fire
<LI><a href="#[b617d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;merge_fire
<LI><a href="#[b618f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;computation_fire
<LI><a href="#[b61938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b61980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_fire
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[fcb980]"></a>_printf_core</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, printf2.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fcb860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf_2
<LI><a href="#[fcb8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0fprintf_2
</UL>

<P><STRONG><a name="[fc4990]"></a>_double_addcore</STRONG> (Thumb, 274 bytes, Stack size 64 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc2b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[fc3588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[fc3738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[fc48b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[fc4900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[fc4948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
