<html>
<head>
<!-- $Id$ -->
<!--

This file has pointers to tours of what's new in version 4.0.

The version number should match
ptolemy.kernel.attributes.VersionAttribute.CURRENT_VERSION
so that we can easily find and update the version number

-->
</head>
<body>
<h1>
Quick Tour of What's New in Version 4.0
</h1>
<ul>
<li> <a href="../../domains/sdf/demo/MultipleRuns/MultipleRuns.xml">
Using one model to control repeated runs of another</a>.
<li> <a href="../../domains/de/demo/SmartSender/SmartSender.xml">
Self repairing model</a>.
<li> <a href="../../vergil/kernel/attributes/demo/AnimateVergil/AnimateVergil.xml">
Interactive decorations in Vergil diagrams</a>.

<li> <a href="../../domains/sdf/demo/Array/Array.xml">
Library actors for manipulating arrays</a>.
<li><a href="../../domains/sdf/demo/SubClasses/NoisySinewave.xml">
Hierarchical classes, subclasses, and inner classes</a>.
<li><a href="../../domains/psdf/demo/BlindCommunication/BlindCommunication.xml">
The parameterized synchronous dataflow domain</a>.
<li> <a href="../../domains/wireless/demo/WirelessSoundDetection/WirelessSoundDetection.xml">
Modeling wireless sensor networks</a>.
<li> <a href="../../domains/sdf/demo/MultipleRuns/MultipleRuns.xml">
Using one model to control repeated runs of another</a>.
<li> <a href="../../domains/de/demo/SmartSender/SmartSender.xml">
Self repairing model</a>.
<li> <a href="../../domains/ct/demo/Transmission/Transmission.xml">
Using function closures to simplify a hybrid system model (of a car transmission)</a>.
<li> <a href="../../vergil/kernel/attributes/demo/AnimateVergil/AnimateVergil.xml">
Interactive decorations in Vergil diagrams</a>.
<li> <a href="../../domains/sdf/demo/Array/Array.xml">
Library actors for manipulating arrays</a>.
</ul>
<h1>
Some capabilities in Version 4.0 require additional software and/or hardware
</h1>
<ul>
<li> <a href="../../actor/lib/io/comm/demo/SerialPort/SerialPort.xml">
Using the serial port</a> (see <a href="../../../doc/codeDoc/ptolemy/actor/lib/io/comm/SerialPort.html">
SerialPort actor documentation</a>).
<li> <a href="../../actor/lib/x10/demo/OnOff/OnOff.xml">
X10 power-line network</a> (see <a href="../../../doc/codeDoc/ptolemy/actor/lib/x10/X10Interface.html">
X10Interface actor documentation</a>).

<li> The Matlab Expression actor how takes a String Parameter instead
of a  StringAttribute
This means
that you can now reference parameters in scope using the $name
or ${name} syntax.  For instance, if there is a parameter named
foo, you can specifcy a Matlab expression like:
<pre>
    output = fft(in, $foo)
</pre>
Before, you would have to have read foo in a Const actor and
provided it as input to the Matlab expression actor.
</ul>

<h2>New Actors</h2>


<menu>
<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">ptolemy.actor.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/ArrayAverage.html">ArrayAverage</a>:
<dd>(Mark Oliver, Edward A. Lee)
An actor that outputs the average of the input array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayLevelCrossing.html">ArrayLevelCrossing</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
An actor that finds the index of the first item in an array to cross a specified threshold.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayPeakSearch.html">ArrayPeakSearch</a>:
<dd>(Edward A. Lee)
An actor that identifies peaks in an array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArraySort.html">ArraySort</a>:
<dd>(Mark Oliver, Edward A. Lee)
An actor that sorts the elements of an array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayToElements.html">ArrayToElements</a>:
<dd>(Rachel Zhou)
An actor that disassemble an ArrayToken to a multiport output.

<dt><a href="codeDoc/ptolemy/actor/lib/ComputeHistogram.html">ComputeHistogram</a>:
<dd>(Steve Neuendorffer)
Compute a histogram of input data.

<dt><a href="codeDoc/ptolemy/actor/lib/ElementsToArray.html">ElementsToArray</a>:
<dd>(Rachel Zhou)
An actor that reads a token from each input channel to assemble an ArrayToken.

<dt><a href="codeDoc/ptolemy/actor/lib/Exec.html">Exec</a>:
<dd>(Christopher Hylands Brooks, Contributor: Edward A. Lee)
Execute a command in a subprocess.

<dt><a href="codeDoc/ptolemy/actor/lib/Exit.html">Exit</a>:
<dd>(Edward A. Lee)
A simple sink actor that consumes and discards input tokens and then calls System.exit() in wrapup.

<dt><a href="codeDoc/ptolemy/actor/lib/GradientAdaptiveLattice.html">GradientAdaptiveLattice</a>:
<dd>(Steve Neuendorffer)
An IIR filter actor that uses a direct form II implementation.

<dt><a href="codeDoc/ptolemy/actor/lib/SetVariable.html">SetVariable</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
Set the value of a variable contained by the container.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/comm/package-summary.html">ptolemy.actor.lib.comm</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/comm/Slicer.html">Slicer</a>:
<dd>(Rachel Zhou)
A Slicer, which functions as a decoder of the LineCoder of complex type.

<dt><a href="codeDoc/ptolemy/actor/lib/comm/TrellisDecoder.html">TrellisDecoder</a>:
<dd>(Rachel Zhou, contributor: Edward A. Lee)
Decode convolutional code with non-antipodal constellation.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/conversions/package-summary.html">ptolemy.actor.lib.conversions</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/conversions/StringToXML.html">StringToXML</a>:
<dd>(Yang Zhao)
An actor that outputs data read from a URL.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/hoc/package-summary.html">ptolemy.actor.lib.hoc</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/hoc/IterateOverArray.html">IterateOverArray</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
An actor that iterates a contained actor over input arrays.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MobileFunction.html">MobileFunction</a>:
<dd>(Yang Zhao)
An actor that apply dynamically defined functions to its input.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MobileModel.html">MobileModel</a>:
<dd>(Yang Zhao)
A composite actor that apply models dynamically.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/ModelReference.html">ModelReference</a>:
<dd>(Edward A. Lee)
An atomic actor that executes a model specified by a file or URL.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/ModelUtilities.html">ModelUtilities</a>:
<dd>(Yang Zhao)
Utilities that manipulate a model.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MultiInstanceComposite.html">MultiInstanceComposite</a>:
<dd>(Zoltan Kemenczy, Sean Simmons, Research In Motion Limited)
A TypedCompositeActor that creates multiple instances of itself during the preinitialize phase of model execution.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/io/package-summary.html">ptolemy.actor.lib.io</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/io/DirectoryListing.html">DirectoryListing</a>:
<dd>( Christopher Hylands, Edward A. Lee)
An actor that produces an array that lists the contents of a directory.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/jai/package-summary.html">ptolemy.actor.lib.jai</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/jai/AdaptiveMedian.html">AdaptiveMedian</a>:
<dd>(James Yeh)
An actor that performs adaptive median filtering on a double matrix.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/ImageToJAI.html">ImageToJAI</a>:
<dd>(James Yeh)
Convert an ImageToken to a JAIImageToken.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIConstant.html">JAIConstant</a>:
<dd>(James Yeh, Steve Neuendorffer)
An actor that produces a JAIImageToken with constant bands.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIDataConvert.html">JAIDataConvert</a>:
<dd>(James Yeh)
An actor that changes the data format in a JAIImageToken.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIPNGWriter.html">JAIPNGWriter</a>:
<dd>(James Yeh)
An actor that writes to a PNG file.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/SaltAndPepper.html">SaltAndPepper</a>:
<dd>()
package ptolemy.actor.lib.jai;

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/javasound/package-summary.html">ptolemy.actor.lib.javasound</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/javasound/LiveSoundActor.html">LiveSoundActor</a>:
<dd>(Steve Neuendorffer)
An actor that reads in audio samples and plays the audio data.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/jmf/package-summary.html">ptolemy.actor.lib.jmf</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/jmf/AudioPlayer.html">AudioPlayer</a>:
<dd>(James Yeh)
An actor that plays a DataSource containing a music file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/MovieReader.html">MovieReader</a>:
<dd>(James Yeh)
An actor that outputs frames from a video file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/MovieWriter.html">MovieWriter</a>:
<dd>(James Yeh)
An actor that writes frames to a video file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/StreamLoader.html">StreamLoader</a>:
<dd>(James Yeh)
Load a datasource from a URL.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/VideoPlayer.html">VideoPlayer</a>:
<dd>(James Yeh)
An actor that displays a AVI, Quicktime or MPEG video file.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/security/package-summary.html">ptolemy.actor.lib.security</a>:

<dl>
<dt> Java Cryptography Actors
<dd> (Christopher Hylands Brooks, Rakesh Reddy)

</dl>

<li> <a href="codeDoc/ptolemy/domains/gr/lib/package-summary.html">ptolemy.domains.gr.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/gr/lib/Box2D.html">Box2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Circle2D.html">Circle2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Ellipse2D.html">Ellipse2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/FigureInteractor.html">FigureInteractor</a>:
<dd>(Ismael M. Sarmiento)
Listen for and handle events on Diva figures.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/GRShape2D.html">GRShape2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/GRTransform2D.html">GRTransform2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for transforming input 3D shape

<dt><a href="codeDoc/ptolemy/domains/gr/lib/IconViewScreen3D.html">IconViewScreen3D</a>:
<dd>(Steve Neuendorffer)
A GR scene viewer

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Image2D.html">Image2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a figure from a user specified image file.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Line2D.html">Line2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
Create a line with the endpoints provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Rectangle2D.html">Rectangle2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/RectangularFigure2D.html">RectangularFigure2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Rotate2D.html">Rotate2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Rotate a two-dimensional figure based on the angle and anchor point provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Scale2D.html">Scale2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Scale a two-dimensional figure based on the size provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Translate2D.html">Translate2D</a>:
<dd>(Steve Neuendorffer)
An actor that translates the input 3D shape

<dt><a href="codeDoc/ptolemy/domains/gr/lib/ViewScreen2D.html">ViewScreen2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
A GR scene viewer

</dl>

<li> <a href="codeDoc/ptolemy/domains/sdf/lib/package-summary.html">ptolemy.domains.sdf.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/sdf/lib/CountTrues.html">CountTrues</a>:
<dd>(Steve Neuendorffer)
An actor that counts true inputs.

</dl>

<li> <a href="codeDoc/ptolemy/domains/sr/lib/package-summary.html">ptolemy.domains.sr.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/sr/lib/NonStrictTokenToExpression.html">NonStrictTokenToExpression</a>:
<dd>(Haiyang Zheng)
A non-strict actor that converts tokens into expressions.

</dl>

<li> <a href="codeDoc/ptolemy/domains/tm/lib/package-summary.html">ptolemy.domains.tm.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/tm/lib/PeriodicTrigger.html">PeriodicTrigger</a>:
<dd>(Edward A. Lee)
A source that emits a trigger signal periodically.

</dl>

<li> <a href="codeDoc/ptolemy/vergil/actor/lib/package-summary.html">ptolemy.vergil.actor.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/vergil/actor/lib/VisualModelReference.html">VisualModelReference</a>:
<dd>(Edward A. Lee)
An atomic actor that executes a model specified by a file or URL.

</dl>
</menu>


</body>
</html>
