<?xml version="1.0" standalone="no"?>
<!DOCTYPE model SYSTEM "moml.dtd">
<!-- The name and class of the top-level actor are specified as -->
<!-- defaults in the DTD. -->
<model>
  <doc>
  Text here documents the model. For example:
  This model demonstrates MoML, the XML-based modeling language.
  </doc>

  <director class="ptolemy.domains.de.kernel.DEDirector">
    <!-- FIXME: no such parameter name="stopTime" value="100.0" -->
  </director>

  <!-- Define the actors -->
  <actor name="clock" class="ptolemy.actor.lib.Clock">
    <parameter name="period" value="4.0"/>
    <!-- hints for a GUI... -->
    <icon xpos="100" ypos="100"
           modifiers="$CLASSPATH/ptolemy/actor/lib/icons/Clock.icon"/>
  </actor>
  <actor name="display" class="ptolemy.actor.gui.TimedPlotter">
    <!-- reference to a "plotML" file for configuration information -->
    <!-- FIXME parameter name="configuration" value="display.pml" /-->
    <icon xpos="200" ypos="100"
          modifiers="$CLASSPATH/ptolemy/actor/gui/icons/TimedPlotter.icon"/>
  </actor>
  <actor name="recorder" class="ptolemy.actor.lib.Recorder">
    <icon xpos="200" ypos="200"
          modifiers="$CLASSPATH/ptolemy/actor/lib/icons/Recorder.icon"/>
  </actor>
  <!-- To do: Link parameters with on-screen controls here. -->

  <!-- Make the connections -->
  <connection source="clock.output" destination="display.input"
        name="clockToDisplay">
    <!-- any vertex in the connection is associated with the relation -->
    <vertex xpos="150" ypos="100"/>
  </connection>
  <link port="recorder.input" vertex="clockToDisplay">
    <!-- optional vertex entities here for GUI purposes -->
  </link>

</model>