<!-- $Id$ -->
<html>
<head>
<title>Installing Ptplot</title>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>Installing Ptplot</h1>
Ptplot 5.2p1 requires Java 1.2 or later.
Java 1.3 is preferred.
The Ptplot 5.2p1 Windows installers require Java 1.3.
To run Ptplot, the Java runtime environment (JRE) is sufficient.
To run the applets in a browser, the Java plug-in is required.
The JRE is bundled with the plug-in, so downloading the plug-in
is sufficient.  To extend Ptplot with your own
Java code, the Java development kit (JDK)
or an equivalent Java development environment is required.
The JDK includes a Java compiler.

<p>To run Ptplot 5.2p1 applets, you must install the version 1.3
or later of the
<a href="http://www.javasoft.com/products/plugin/" target="_top">Javasoft Java Plug-in</a>.
In theory, it should be possible to run Ptplot using the JDK1.2 plugin,
but we recommend upgrading to the JDK 1.3  plugin.

<p> If you will be extending the Ptplot classes, then you
should install the Java 1.3 Java Development Kit: 
<a href="http://java.sun.com/j2se/1.3/" target="_top"><CODE>http://java.sun.com/j2se/1.3/</CODE></a>

<p>If you do not want to require your users to install the JDK 1.3  plugin,
then you should stick with Ptplot3.1, which does not use Swing.

<p>Ptplot is distributed in several formats.
<menu>
 <li><a href="#tarorzip">Instructions for the usual tar file and zip file format.</a>
 <li><a href="#installshield">Instructions for the Installshield Multiplatform installer.</a>
 <li>As part of the Ptolemy II distribution - This page covers the
 above two cases, for information about installing Ptolemy II
see <code>$PTII/doc/index.htm</code>

</menu>


<h2><a name="tarorzip">Ptplot Installation under Unix or Windows with Cygwin from tar or zip files</a></h2>

Ptplot is shipped with the java files precompiled, so you need not
recompile.  However, if you are using the standalone scripts such as
<CODE>ptplot</CODE>, then you may want to go through the installation
procedure so that the standalone scripts are properly localized.

 <p>This tar file (ptplot5.2p1.tar.gz), will unpack into called
ptplot5.2p1, and the configure-make-make install process will not
install any files outside of this ptplot5.2p1 directory.  So if you
unpack the tar file into /usr/local, after installing you will have
/usr/local/ptplot5.2p1, and you may want to tell users to add
/usr/local/ptplot5.2p1/bin to their PATH.  The scripts in the bin
directory will run the plotter as a standalone application, or they
can add /usr/local/ptplot5.2p1 to their Java CLASSPATH.

 <p> If you are using Windows and you want to rebuild Ptplot or
localize the standalone scripts, then you will need to install the
Cygwin toolkit from
<a href="http://sources.redhat.com/cygwin/"><CODE>http://sources.redhat.com/cygwin/</CODE></a>
<p> We have packaged up the necessary Cygwin tools and made them available at
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptII1.0/cygwin.htm"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII/ptII1.0/cygwin.htm</code></a>.

If you are running Windows and do not want to install the Cygwin toolkit,
then see
<a href="#windowswithoutcygwin">Using Ptplot under Windows without Cygwin</a>

 <p>Below are the installation instructions for Unix and Windows
with Cygwin.
<ol>

<li> Be sure that JDK 1.3  is installed, and that <CODE>javac</CODE>
is in your path.

<li> Untar or unzip the Ptplot distribution.

<li> Set the <CODE>PTII</CODE> environment variable to point
to the top of the Ptplot tree.  Under C-shell, one would do:
<pre>
setenv PTII ~/src/ptplot5.2p1
</pre>

Under Cygwin with bash:
<pre>
PTII=c:\\Program\ Files\\Ptolemy\\Ptplot\ 5.1p1 
export PTII
</pre>

<li> cd into the <CODE>PTII</CODE> directory:
<pre>
cd "$PTII"
</pre>
(The double quotes are only necessary if $PTII has spaces in it)

<li> Run <CODE>configure</CODE>
<pre>
rm -f config.*
./configure
</pre>


<li> Run make
<pre>
make
</pre>


<li> View the applets by going starting your browser and going to:
<a href="index.htm">ptolemy/plot/doc/index.htm</a>

</ol>

<h2><a name="installshield">Installshield Installer</a></h2>
Ptplot is also available in several self-extracting formats
that were created with the Installshield Professional Multiplatform
Edition

 <p>Note that when you run the installer under Windows, Ptplot is
added to your Start menu under Ptolemy -&gt; Ptplot.


<h2>Notes about building and installing</h2>
<h3>How does configure work?</h3>
<CODE>configure</CODE> is a <CODE>/bin/sh</CODE> script
that determines some information about your environment and
then modifies a few files.

When the <a href="../../../configure"><CODE>configure</CODE></a>
 script is run, it reads in
<a href="../../../mk/ptII.mk.in"><CODE>mk/ptII.mk.in</CODE></a>
and
<a href="../../../bin/ptinvoke.in"><CODE>bin/ptinvoke.in</CODE></a>

generates
<a href="../../../mk/ptII.mk.in"><CODE>mk/ptII.mk</CODE></a>
and
<a href="../../../bin/ptplot"><CODE>bin/ptplot</CODE></a>

 <p>To get help with <CODE>configure</CODE>, try
<pre>
./configure --help
</pre>


 <p> <CODE>configure</CODE> reads in the <CODE>.in</CODE> files
and substitutes strings inside the <CODE>@</CODE>
 <p>For example, <CODE>configure</CODE> reads in
<a href="../../../bin/ptinvoke.in"><CODE>bin/ptinvoke.in</CODE></a>
and sees
<pre>
PTII_DEFAULT=@PTII_DEFAULT@
PTJAVA_DIR=@PTJAVA_DIR@
</pre>

becomes
<pre>
PTII_DEFAULT=/users/cxh/ptII
PTJAVA_DIR=/opt/jdk1.3
</pre>



<h3><a name="windowswithoutcygwin">Using Ptplot under Windows without Cygwin</a></h3>
Below are the instructions for using Ptplot
if you are under Windows and you do not have the Cygwin and have
downloaded the tar or zip files.  

<ol>
<li> Set the <CODE>PTII</CODE> variable to the top-level
directory of the Ptplot tree.
<pre>
C:\ptplot5.2p1&gt; PTII=c:\ptplot5.2p1
</pre>
<CODE>PTII</CODE> is used by the standalone <CODE>ptplot.bat</CODE>
script and other scripts
<li> Be sure that <code>java</code> is in your path by running
<code>java -version</code>
<li> Add <code>%PTII%\bin</code> to your PATH.
<li> Run <code>ptplot.bat</code>

</ol>

Usually, it is not necessary to recompile the Ptplot classes, but
below are the instructions for recompiling by hand under Windows without
Cygwin.

<ol>
<li> To compile the Ptplot Java classes, they must be in the directory
ptolemy\plot.

<pre>
C:\ptplot5.2p1&gt; cd ptolemy\plot
</pre>


<li> set your CLASSPATH to ..\..
<pre>
C:\ptplot5.2p1\ptolemy\plot&gt;set CLASSPATH=..\..
C:\ptplot5.2p1\ptolemy\plot&gt;echo %CLASSPATH%
..\..
</pre>

<li> Remove the old Java files and compile them
<pre>
C:\ptplot5.2p1\ptolemy\plot&gt;del  *.class
C:\ptplot5.2p1\ptolemy\plot&gt;javac *.java
</pre>

<li> Run <CODE>ptplot.bat</CODE>, which reads <CODE>%PTII%</CODE>
<pre>
C:\ptplot5.2p1\ptolemy\plot&gt;ptplot.bat
</pre>

</ol>


<h3>Installing Ptplot as an applet</h3>
Ptplot includes several jar files, which are collections of
Java <CODE>.class</CODE> files
<dl>

<dt> <CODE>plotapplet.jar</CODE>
<dd>  .class files necessary for simple JDK1.1
browser applets - no pxgraph, no plotml.

<dt> <CODE>pxgraphapplet.jar</CODE>
<dd> .class files necessary for simple JDK1.1
browser applets with pxgraph classes, no plotml.
Applets that use the <CODE>pxgraphargs</CODE> applet parameter
should use this jar file.

<dt> <CODE>plotmlapplet.jar</CODE>
<dd> .class files necessary for PlotML applets -
includes com/microstar/xml and the plotml code, but does not include pxgraph,
or PlotFrame.

<dt> <CODE>plot.jar</CODE>

<dd> The standard Ptolemy II jar file that includes the
ptolemy/plot/*.class files and the class files in plotml and compat.
Does not include com/microstar/xml or ptolemy/gui.
<CODE>plot.jar</CODE> is used by the Ptolemy II build system.

<dt> <CODE>plotapplication.jar</CODE>

<dd> .class files necessary for standalone applications - includes
com/microstar/xml, ptolemy/gui and the plotml code, but does not
include pxgraph.  If <CODE>plotapplication.jar</CODE> is
present, then it is used by the standalone scripts (<CODE>ptplot</CODE> etc.)

</dl>

The best way to use Ptplot as an applet is to copy the appropriate
<CODE>*applet.jar</CODE> file into the same directory as your applet,
and then to use the <CODE>archive</CODE> applet directive.
For examples of applet html code, see the demonstrations.


<h3>Installing Ptplot as an application</h3>

Under Unix and Windows with the Cygwin toolkit,
 ptplot can be run as three standalone applications:
<menu>
<li> <CODE>ptplot</CODE> - A modern plot application that
with a menubar and such.
<li> <CODE>histogram</CODE> - A histogram plot application
<li> <CODE>pxgraph</CODE> - A plot application that
is mostly backward compatible with the older X11 <CODE>pxgraph</CODE>
program
</menu>

When configure is run, it substitutes variables inside <CODE>ptinvoke.in</CODE>
and produced <CODE>ptplot</CODE>.  The <CODE>ptplot</CODE> script
is shared between the standalone applications, <CODE>ptplot</CODE>
determines what name it was called with, and selects the appropriate
class accordingly.

 <p>If the <CODE>ptplot</CODE> script is run,
then <CODE>ptolemy.plot.PlotApplication</CODE> is run

 <p>If the <CODE>ptplot</CODE> script is copied to <CODE>histogram</CODE>,
then <CODE>ptolemy.plot.plotml.HistogramMLApplication</CODE> is run

 <p>If the <CODE>ptplot</CODE> script is copied to <CODE>pxgraph</CODE>,
then <CODE>ptolemy.plot.compat.PxgraphApplication</CODE> is run

 <p>Under Unix, you can use a hard link to create the histogram and
pxgraph script:
<pre>
cd $PTII/bin
ln ptplot histogram
ln ptplot pxgraph
</pre>

 <p>Under Windows, three .bat scripts are provided:
<CODE>ptplot.bat</CODE>, <CODE>histogram.bat</CODE> and
<CODE>pxgraph.bat</CODE>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
