<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="configuration" class="ptolemy.actor.gui.Configuration">

  <doc>Configuration to use codegen.</doc>

  <!-- Specify the about file to open. -->
  <property name="_about"
            class="ptolemy.data.expr.FileParameter"
            value="$CLASSPATH/ptolemy/configs/codegen/intro.htm"/>

  <!-- Specify the help file to open. -->
  <property name="_help"
            class="ptolemy.data.expr.FileParameter"
            value="$CLASSPATH/ptolemy/configs/doc/docs.htm"/>

  <!-- The directory of open models, each represented by an effigy. -->
  <!-- Note that this begins empty. -->
  <entity name="directory" class="ptolemy.actor.gui.ModelDirectory">
  </entity>

  <!-- The list of effigy factories, which defines what goes in  -->
  <!-- the New menu, and also what sorts of files can be opened. -->
  <!-- These are searched in the order listed here, until one of -->
  <!-- the effigies agrees to open the file. -->
  <!-- Any of these effigies that return true to canCreateBlankEffigy -->
  <!-- will appear in the New menu.  If there is a contained entity   -->
  <!-- named "blank", then the effigy will initially refer to a clone -->
  <!-- of that blank entity. -->
  <entity name="effigyFactory" class="ptolemy.actor.gui.EffigyFactory">
    <!-- Use a custom graph editor with an SDF director already in it. -->
    <entity name="Graph Editor" class="ptolemy.actor.gui.PtolemyEffigy$Factory">
      <entity name="blank" class="ptolemy.actor.TypedCompositeActor">
        <property name="SDF Director" 
                  class="ptolemy.domains.sdf.kernel.SDFDirector">
          <property name="iterations"
                    class="ptolemy.data.expr.Parameter" value="1">
          </property>
          <property name="_location"
                    class="ptolemy.kernel.util.Location" value="68.0, 32.0">
          </property>
        </property>
        <property name="FSM Director"
	          class="ptolemy.domains.fsm.kernel.FSMDirector"/>
        <property name="HDF Director"
	          class="ptolemy.domains.hdf.kernel.HDFDirector"/>
      </entity>
    </entity>
    <!-- Import HTML viewer, text editor, etc. -->
    <input source="ptolemy/configs/extendedEffigyFactories.xml"/>
  </entity>

  <!-- The list of tableau factories, which defines the visual   -->
  <!-- editors that are available.  After an effigy is created   -->
  <!-- for a model, these factories are tried in order until one -->
  <!-- is willing to open the model. Each editor contains a list -->
  <!-- of other editors that appear in the View menu.            -->
  <property name="tableauFactory" class="ptolemy.actor.gui.TableauFactory">
    <input source="ptolemy/configs/graphTableauFactory.xml"/>
    <input source="ptolemy/configs/extendedTableauFactories.xml"/>
  </property>

  <!-- Main default library -->
  <entity name="actor library" class="ptolemy.kernel.CompositeEntity">

    <!-- Marker so that tree view expands the library. -->
    <property name="_libraryMarker"
              class="ptolemy.kernel.util.SingletonAttribute"/>

    <!-- Default utilities library. -->
    <entity name="Utilities" class="ptolemy.moml.EntityLibrary">
      <configure>
        <?moml
          <group>
            <input source="ptolemy/configs/basicUtilities.xml"/>
            <!-- Blank composite actor. -->
            <entity name="typed composite actor"
                    class="ptolemy.actor.TypedCompositeActor"/>
          </group>
        ?>
      </configure>
    </entity>

    <!-- Default entity library to appear in the library browser. -->
    <entity name="Actors" class="ptolemy.moml.EntityLibrary">
      <configure>
        <?moml
          <group>
            <doc>default entity library</doc>
               <entity name="Math" class="ptolemy.moml.EntityLibrary">
                  <configure>
                    <group>
		       <entity name="Multiply"
		               class="ptolemy.actor.lib.Multiply"/>
	            </group>
                  </configure>
                </entity>
          </group>
        ?>
      </configure>
    </entity>
  </entity>
</entity>
