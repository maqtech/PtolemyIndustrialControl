<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="AudioFFT" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{50.0, 0.0}">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={37, 22, 1124, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[890, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.5969722103712262">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{733.2089843750001, 402.6874422940341}">
    </property>
    <property name="Annotation5" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{1.0,0.2,0.4,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="output is a JSON array &#10;with an element type:&#10; {'real':'number', 'imag':'number'}">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[40.0, 40.0]">
            <property name="relativeTo" class="ptolemy.kernel.util.StringAttribute" value="FFT">
            </property>
            <property name="relativeToElementName" class="ptolemy.kernel.util.StringAttribute" value="entity">
            </property>
        </property>
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="false">
    </property>
    <property name="Nfft" class="ptolemy.data.expr.Parameter" value="128">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{315.0, -20.0}">
        </property>
    </property>
    <property name="fs" class="ptolemy.data.expr.Parameter" value="2048">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{220.0, -20.0}">
        </property>
    </property>
    <property name="fc" class="ptolemy.data.expr.Parameter" value="256">
        <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
            <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
            </property>
        </property>
        <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
            <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">-P-</text>
      </svg>
    </configure>
        </property>
        <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{140.0, -20.0}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="14">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="A demo that plots the time and frequency domain representations of an audio capture. ">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{35.0, 260.0}">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Click here to see SinusoidFFT.xml, an FFT example that bypasses audio capture.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{40.0, 305.0}">
        </property>
        <property name="LiveLink" class="ptolemy.actor.gui.LiveLink" value="SinusoidFFT.xml">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">LL</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{190, 365}">
            </property>
        </property>
    </property>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="1.0/fs">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{160.0, 140.0}">
        </property>
    </entity>
    <entity name="SequenceToArray" class="ptolemy.domains.sdf.lib.SequenceToArray">
        <property name="arrayLength" class="ptolemy.actor.parameters.PortParameter" value="Nfft">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{395.0, 150.0}">
        </property>
    </entity>
    <entity name="Expression2" class="ptolemy.actor.lib.Expression">
        <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="n.toString()">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
            <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{655.0, 150.0}">
        </property>
        <port name="n" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="ExpressionToToken" class="ptolemy.actor.lib.conversions.ExpressionToToken">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{760.0, 150.0}">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="arrayType({real=double, imag=double})">
            </property>
        </port>
    </entity>
    <entity name="ArrayToSequence" class="ptolemy.domains.sdf.lib.ArrayToSequence">
        <property name="arrayLength" class="ptolemy.data.expr.Parameter" value="Nfft">
        </property>
        <property name="enforceArrayLength" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{910.0, 150.0}">
        </property>
    </entity>
    <entity name="RecordDisassembler" class="ptolemy.actor.lib.RecordDisassembler">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{1005.0, 130.0}">
        </property>
        <property name="_hideName" class="ptolemy.data.expr.SingletonParameter" value="true">
        </property>
        <port name="real" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="imag" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="CartesianToComplex" class="ptolemy.actor.lib.conversions.CartesianToComplex">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{1070.0, 150.0}">
        </property>
    </entity>
    <entity name="AbsoluteValue" class="ptolemy.actor.lib.AbsoluteValue">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{1225.0, 150.0}">
        </property>
    </entity>
    <entity name="SequenceScope" class="ptolemy.actor.lib.gui.SequenceScope">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={423, 553, 709, 294}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[709, 250]">
        </property>
        <property name="width" class="ptolemy.data.expr.Parameter" value="Nfft">
        </property>
        <property name="persistence" class="ptolemy.data.expr.Parameter" value="Nfft">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{1320.0, 150.0}">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>FFT(x[n])</title>
<xLabel>|X[k]|</xLabel>
<yLabel>k</yLabel>
<xRange min="0.0" max="128.0"/>
<yRange min="0.002347513079121722" max="0.47560097512340654"/>
<wrap/>
<default marks="pixels"/>
</plot>?>
        </configure>
    </entity>
    <entity name="SequenceScope2" class="ptolemy.actor.lib.gui.SequenceScope">
        <property name="fillOnWrapup" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="automaticRescale" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={413, 272, 709, 294}, maximized=false}">
        </property>
        <property name="_plotSize" class="ptolemy.actor.gui.SizeAttribute" value="[709, 250]">
        </property>
        <property name="width" class="ptolemy.data.expr.Parameter" value="Nfft">
        </property>
        <property name="persistence" class="ptolemy.data.expr.Parameter" value="Nfft">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{385.0, 75.0}">
        </property>
        <configure>
<?plotml <!DOCTYPE plot PUBLIC "-//UC Berkeley//DTD PlotML 1//EN"
"http://ptolemy.eecs.berkeley.edu/xml/dtd/PlotML_1.dtd">
<plot>
<title>Input</title>
<xLabel>n</xLabel>
<yLabel>x[n]</yLabel>
<xRange min="0.0" max="128.0"/>
<yRange min="-0.190521240234375" max="0.083465576171875"/>
<wrap/>
<default marks="pixels"/>
</plot>?>
        </configure>
    </entity>
    <entity name="FFT" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Accessor to return an array of FFT coefficients, given an input array   &#10;&#10;// Set up the accessor.&#10;exports.setup = function() {&#10;    accessor.author('FIXME');&#10;    accessor.input('signalIn');&#10;    accessor.output('fftOutput',{'type':'JSON'});&#10;    accessor.version('0.1 $$Date$$');&#10;    // FIXME: Define your inputs and outputs here.&#10;};&#10; &#10;var dspEngine = null; &#10;var dsp = require(&quot;dsp&quot;);   &#10;var handle = null;&#10;&#10;exports.initialize = function() { &#10;    handle = addInputHandler('signalIn',processSignal); &#10;    var n = 0; &#10;    dspEngine = new dsp.Signal();   &#10;}&#10;&#10;function processSignal() {&#10;    var signalValue = get('signalIn');  &#10;    var fftLength = signalValue.length; &#10;    var fftResult = dspEngine.fft(signalValue); &#10;    &#10;    var outputArray = [];&#10;    // parse the fft coefficients as record tokens with&#10;    // real and imaginary parts&#10;    for (var j = 0; j &lt; fftLength; j++) { &#10;        print(fftResult[j]);  &#10;        var trial = {&quot;real&quot;:'number', &quot;imag&quot;: 'number'};&#10;        trial.real = fftResult.real[j];&#10;        trial.imag = fftResult.imag[j];&#10;        outputArray[j] = trial; &#10;    }&#10;    &#10;&#10;    send('fftOutput',outputArray); &#10;}&#10;&#10;exports.wrapup = function() { &#10;    removeInputHandler('signalIn',handle); &#10;}&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/FFT.js">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{510.0, 150.0}">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="FIXME">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $Date$">
            </property>
        </property>
        <port name="signalIn" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="fftOutput" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="AudioCapture2" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2014-2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** Capture audio from the microphone. &#10; *&#10; *  This accessor requires the optional 'audio' module, which may or may&#10; *  not be provided by an accessor host. &#10; *&#10; *  @accessor AudioCapture&#10; *  @module AudioCapture&#10; *  @author  &#10; *  @version 0.1 $$ID$$&#10; *  @input trigger Input that triggers recording.&#10; *  @output {number} signal A sequence of numbers representing the captured audio signal.&#10; */&#10;exports.setup = function() {&#10;    accessor.author('ilgea'); &#10;    accessor.input('trigger');&#10;    accessor.output('signal',{'type':'number'});&#10;    accessor.version('0.1 $$ID$$'); &#10;};&#10;&#10;var recorder = null; &#10;var handle = null;&#10;var audio = require(&quot;audio&quot;);&#10;var cacheLength = 128;  &#10;&#10;function record() {&#10;    var data = recorder.get(); &#10;  for each (sample in data) { &#10;    send('signal',sample);&#10;  } &#10;}&#10;&#10;exports.initialize = function() { &#10;    handle = addInputHandler(&quot;trigger&quot;,record); &#10;    recorder = new audio.Capture(); &#10;} &#10;&#10;exports.wrapup = function() {&#10;    if (recorder != null) { &#10;        recorder.stop();&#10;        removeInputHandler('trigger',handle);&#10;    } &#10;}&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/AudioCapture.js">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[265.0, 140.0]">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="ilgea">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1 $ID$">
            </property>
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="signal" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
    </entity>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{345.0, 140.0}">
        </vertex>
    </relation>
    <relation name="relation9" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation10" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation11" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation2"/>
    <link port="SequenceToArray.input" relation="relation5"/>
    <link port="SequenceToArray.output" relation="relation3"/>
    <link port="Expression2.output" relation="relation4"/>
    <link port="Expression2.n" relation="relation6"/>
    <link port="ExpressionToToken.input" relation="relation4"/>
    <link port="ExpressionToToken.output" relation="relation8"/>
    <link port="ArrayToSequence.input" relation="relation8"/>
    <link port="ArrayToSequence.output" relation="relation9"/>
    <link port="RecordDisassembler.input" relation="relation9"/>
    <link port="RecordDisassembler.real" relation="relation7"/>
    <link port="RecordDisassembler.imag" relation="relation10"/>
    <link port="CartesianToComplex.x" relation="relation7"/>
    <link port="CartesianToComplex.y" relation="relation10"/>
    <link port="CartesianToComplex.output" relation="relation11"/>
    <link port="AbsoluteValue.input" relation="relation11"/>
    <link port="AbsoluteValue.output" relation="relation"/>
    <link port="SequenceScope.input" relation="relation"/>
    <link port="SequenceScope2.input" relation="relation5"/>
    <link port="FFT.signalIn" relation="relation3"/>
    <link port="FFT.fftOutput" relation="relation6"/>
    <link port="AudioCapture2.trigger" relation="relation2"/>
    <link port="AudioCapture2.signal" relation="relation5"/>
</entity>
