<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="VertxChat" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={7, 31, 915, 708}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[681, 598]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0558352825063892">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{302.8477417467168, 265.63416524805444}">
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="18">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="bold" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Peer-to-peer chat application">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[100.0, -10.0]">
        </property>
        <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The publisher and subscriber here are accessors from http://terraswarm.org/accessors.&#10;Ptolemy II also contains a native actor called VertxBusHandler that supports&#10;reading from and writing to the VertxBus. See $PTII/ptolemy/actor/lib/vertx">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-15.0, 210.0]">
        </property>
        <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{40.0, 15.0}">
        </property>
    </property>
    <property name="Annotation5" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Whenever the user types something,&#10;format a message, and publish to 'chat'.&#10;The InteractiveShell actor is wrapped&#10;in a ThreadedComposite so that it does&#10;not block the application.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[-10.0, 410.0]">
        </property>
    </property>
    <property name="Annotation7" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Authors: Edward A. Lee">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[-10.0, 505.0]">
        </property>
        <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
    </property>
    <property name="Annotation8" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Listen for published events with address 'chat':">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[-10.0, 90.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Stop the model when&#10;the user types quit&#10;or exit.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.RelativeLocation" value="[340.0, 390.0]">
        </property>
    </property>
    <property name="Annotation4" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="bold" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Peer-to-peer chat application. This model opens a shell window into which&#10;you can type messages. These messages will be broadcast to the 'chat'&#10;address on the Vert.x event bus. The model also listens for events on the&#10;'chat' address and displays them in a Display window.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[100.0, 15.0]">
        </property>
        <property name="_renderFirst" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
    </property>
    <entity name="VertxPublish" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;    &#10;var eventbus = require('eventbus');&#10;var bus;&#10;&#10;exports.initialize = function() {&#10;  var port = get(busHostPort);&#10;  var host = get(busHost);&#10;  bus = new eventbus.VertxBus({'port':port, 'host':host});&#10;}&#10;&#10;addInputHandler(function() {&#10;  var topic = get(address);&#10;  var msg = get(message);&#10;  if (msg) {&#10;    bus.publish(topic, JSON.stringify(msg));&#10;  }&#10;}, message);&#10;&#10;exports.wrapup = function() {&#10;  bus.unsubscribe();&#10;}&#10;&#10;	//  &#10;  ">
        </property>
        <property name="accessorSource" class="ptolemy.kernel.util.StringAttribute" value="/Users/eal/Box Sync/Projects/TerraSwarm/accessors/web/VertxPublish.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;    This accessor publishes to a Vert.x event bus. The input can be any data type&#10;    supported by accessors that has a string representation in JSON syntax. The&#10;    published even will be a string in JSON format.&#10;    &lt;p&gt;&#10;    The busHost is the name of the network interface through which to connect to the Vert.x event bus cluster.&#10;    The busHostPort is the port to use for this.&#10;    These two inputs are examined only at initialization time.&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Patricia Derler, Edward A. Lee, Ben Zhang">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="busHost (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The name of the network interface to use for the Vert.x event bus. A blank string is interpreted as 'localhost'.">
            </property>
            <property name="busHostPort (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The port for the Vert.x event bus. A value of 0 indicates a default port of 25500.">
            </property>
            <property name="address (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The event bus address, which is the name of the event stream.">
            </property>
            <property name="message (port)" class="ptolemy.kernel.util.StringAttribute" value="The message to the bus.">
            </property>
        </property>
        <property name="busHost" class="ptolemy.actor.parameters.PortParameter" value="&quot;&quot;">
        </property>
        <property name="busHostPort" class="ptolemy.actor.parameters.PortParameter" value="&quot;0&quot;">
        </property>
        <property name="address" class="ptolemy.actor.parameters.PortParameter" value="&quot;chat&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[360.0, 310.0]">
        </property>
        <property name="_expertMode" class="ptolemy.kernel.util.SingletonAttribute">
        </property>
        <port name="busHost" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="busHostPort" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="address" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="message" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
    </entity>
    <entity name="VertxSubscribe" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;var eventbus = require('eventbus');&#10;var bus;&#10;var currentAddress;&#10;&#10;var onReceived = function(msg) {&#10;    send(msg, message);&#10;}&#10;&#10;exports.initialize = function() {&#10;    var port = get(busHostPort);&#10;    var host = get(busHost);&#10;    bus = new eventbus.VertxBus({'port':port, 'host':host});&#10;    currentAddress = get(address);&#10;    bus.subscribe(currentAddress);&#10;    bus.on(get(address), onReceived);&#10;}&#10;&#10;addInputHandler(function() {&#10;    var topic = get(address);&#10;    if (topic != currentAddress) {&#10;        bus.unsubscribe(currentAddress);&#10;        bus.subscribe(topic);&#10;    }&#10;}, address);&#10;&#10;exports.wrapup = function() {&#10;    bus.removeAllListeners();&#10;}&#10;  	// &#10;  ">
        </property>
        <property name="accessorSource" class="ptolemy.kernel.util.StringAttribute" value="/Users/eal/Box Sync/Projects/TerraSwarm/accessors/web/VertxSubscribe.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;    This actor subscribes to a Vert.x event bus.&#10;    It attempts to parse the message as a JSON string, but if that fails,&#10;    it just attempts to produce the output as is.&#10;    The busHost is the name of the network interface through which to connect to the Vert.x event bus cluster.&#10;    The busHostPort is the port to use for this.&#10;    These two inputs are examined only at initialization time.&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Patricia Derler, Edward A. Lee, Ben Zhang">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="busHost (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The name of the network interface to use for the Vert.x event bus. A blank string is interpreted as 'localhost'.">
            </property>
            <property name="busHostPort (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The port for the Vert.x event bus. A value of 0 indicates a default port of 25500.">
            </property>
            <property name="address (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The event bus address, or the name of the events to which to subscribe.">
            </property>
            <property name="message (port)" class="ptolemy.kernel.util.StringAttribute" value="The message from the bus.">
            </property>
        </property>
        <property name="busHost" class="ptolemy.actor.parameters.PortParameter" value="0">
        </property>
        <property name="busHostPort" class="ptolemy.actor.parameters.PortParameter" value="&quot;0&quot;">
        </property>
        <property name="address" class="ptolemy.actor.parameters.PortParameter" value="&quot;chat&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[65.0, 155.0]">
        </property>
        <port name="busHost" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="busHostPort" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="address" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="message" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var name;&#10;&#10;exports.initialize = function() {&#10;  name = null;&#10;  send(&quot;Please type your name. Type quit to exit.&quot;, feedback);&#10;}&#10;&#10;var handleInput = function() {&#10;  var read = get(input);&#10;  send(read, feedback);&#10;  if (read == 'quit' || read == 'exit') {&#10;    if (name) {&#10;      send(name + ' has left.', output);&#10;    }&#10;    send(true, stop);&#10;   } else  if (!name) {&#10;    name = read;&#10;    send(name + ' has joined.', output);&#10;    first = false;&#10;  } else {&#10;    send(name + ': ' + read, output);&#10;  }&#10;}&#10;&#10;addInputHandler(handleInput, input);">
            <property name="style" class="ptolemy.actor.gui.style.TextStyle">
                <property name="height" class="ptolemy.data.expr.Parameter" value="16">
                </property>
                <property name="width" class="ptolemy.data.expr.Parameter" value="80">
                </property>
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[190.0, 340.0]">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
        <port name="stop" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="boolean">
            </property>
        </port>
        <port name="feedback" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="ThreadedComposite" class="ptolemy.actor.lib.hoc.ThreadedComposite">
        <property name="delay" class="ptolemy.data.expr.Parameter" value="UNDEFINED">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <doc>Execute the contained model in a separate thread with optional real-time properties.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.CopyCatIcon">
            <property name="echos" class="ptolemy.data.expr.Parameter" value="1">
            </property>
            <property name="echoBoxColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 1.0, 0.0, 1.0}">
            </property>
        </property>
        <property name="_configurer" class="ptolemy.actor.gui.EditorPaneFactory">
        </property>
        <property name="_configurer2" class="ptolemy.actor.gui.InsideEntityEditorPaneFactory">
        </property>
        <property name="_tableauFactory" class="ptolemy.actor.gui.LevelSkippingTableauFactory">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[40.0, 340.0]">
        </property>
        <port name="input" class="ptolemy.actor.lib.hoc.MirrorPort">
            <property name="input"/>
        </port>
        <port name="output" class="ptolemy.actor.lib.hoc.MirrorPort">
            <property name="output"/>
        </port>
        <entity name="InteractiveShell" class="ptolemy.actor.lib.gui.InteractiveShell">
            <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={34, 61, 646, 420}, maximized=false}">
            </property>
            <doc>Produce strings from an interactive shell on the screen</doc>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{425, 190}">
            </property>
        </entity>
    </entity>
    <entity name="Stop" class="ptolemy.actor.lib.Stop">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[315.0, 415.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={917, 22, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[175.0, 155.0]">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;VertxPublish.message&quot;,x=360.0,y=310.0}, tail={id=&quot;JavaScript.output&quot;,x=190.0,y=340.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;JavaScript.input&quot;,x=190.0,y=340.0}, tail={id=&quot;ThreadedComposite.output&quot;,x=40.0,y=340.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;JavaScript.stop&quot;,x=190.0,y=340.0}, tail={id=&quot;Stop.input&quot;,x=315.0,y=415.0}, points={275.0,340.0,275.0,415.0} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;ThreadedComposite.input&quot;,x=40.0,y=340.0}, tail={id=&quot;JavaScript.feedback&quot;,x=190.0,y=340.0}, points={-10.0,340.0,-10.0,400.0,260.0,400.0,260.0,350.0} } }">
        </property>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;VertxSubscribe.message&quot;,x=60.0,y=235.0}, tail={id=&quot;Display.input&quot;,x=170.0,y=235.0}, points={} } }">
        </property>
    </relation>
    <link port="VertxPublish.message" relation="relation2"/>
    <link port="VertxSubscribe.message" relation="relation"/>
    <link port="JavaScript.input" relation="relation4"/>
    <link port="JavaScript.output" relation="relation2"/>
    <link port="JavaScript.stop" relation="relation8"/>
    <link port="JavaScript.feedback" relation="relation3"/>
    <link port="ThreadedComposite.input" relation="relation3"/>
    <link port="ThreadedComposite.output" relation="relation4"/>
    <link port="Stop.input" relation="relation8"/>
    <link port="Display.input" relation="relation"/>
</entity>
