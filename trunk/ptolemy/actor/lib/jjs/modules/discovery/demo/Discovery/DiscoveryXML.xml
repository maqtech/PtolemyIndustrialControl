<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="DiscoveryXML" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={94, 70, 1074, 641}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[846, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{413.0, 252.0}">
    </property>
    <property name="enableBackwardTypeInference" class="ptolemy.data.expr.Parameter" value="true">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="10.0">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{55.0, 25.0}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Delay ensures that model stops after displaying results.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[440.0, 455.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="XML Accessor Version&#10;This demo uses an accessor to discover devices on the local area network.&#10;The accessor uses the discovery module.  &#10;&#10;The discovery module determines the host platform (Linux, Mac, Windows), &#10;then executes OS commands to find IP addresses, names (when available), &#10;and MAC addresses (when available) of devices on the local network.  &#10;&#10;By default, discovery uses the ping and arp commands.  To use nmap, &#10;double-click on the accessor and and check &quot;useNmap&quot;.  The nmap program must&#10;be installed on your system.  See link below for nmap setup info.&#10;&#10;For more info, please see:&#10;https://www.terraswarm.org/accessors/wiki/Version0/Discovery">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{130.0, 10.0}">
        </property>
    </property>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={559, 233, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[463.25, 310.0]">
        </property>
    </entity>
    <entity name="IPAddress" class="ptolemy.actor.lib.net.IPAddress">
        <doc>Send the IP address of the host to the output port.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[130.0, 365.0]">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={832, 405, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 310.0]">
        </property>
    </entity>
    <entity name="Display3" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={81, 404, 359, 246}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[343, 186]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[340.0, 490.0]">
        </property>
    </entity>
    <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[50.0, 375.0]">
        </property>
    </entity>
    <entity name="Stop" class="ptolemy.actor.lib.Stop">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[660.0, 380.0]">
        </property>
    </entity>
    <entity name="MicrostepDelay" class="ptolemy.actor.lib.MicrostepDelay">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[453.25, 375.0]">
        </property>
    </entity>
    <entity name="Const" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[595.0, 380.0]">
        </property>
    </entity>
    <entity name="MicrostepDelay2" class="ptolemy.actor.lib.MicrostepDelay">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[455.0, 430.0]">
        </property>
    </entity>
    <entity name="Discovery" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;    // &#10;    &#10;    var discovery = require('discovery');&#10;	var ds = new discovery.DiscoveryService();&#10;&#10;	function fire() {&#10;        // Find all devices on the same subnet as host IP address&#10;		// (Could automate host IP address discovery, too)&#10;		// This will ping all devices every time fire is called&#10;		// Some other device discovery protocols (ssdp, bonjour / zero-conf)&#10;		// track on/off event messages&#10;		// However, an initial list would need to be built somehow.  And, the &#10;		// device needs to support that protocol.&#10;		if (get('useNmap')) {&#10;		    ds.discoverDevices(get('hostIP'), 'nmap');&#10;		} else {&#10;			ds.discoverDevices(get('hostIP'));&#10;		}	&#10;	}&#10;&#10;	ds.on('discovered', function(data) {&#10;		if (data == &quot;&quot;) {&#10;           send('error', 'Error:  No devices found.  At minimum, the host machine should be found.');&#10;        } else {&#10;	   send('devices', data);&#10;        }&#10;	});&#10;	&#10;	// &#10;  ">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/Discovery.xml">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&#10;    &#10;    This accessor discovers devices on the local area network.&#10;    It requires the discovery module.  Please see:&#10;    https://www.terraswarm.org/accessors/wiki/Version0/Discovery&#10;	This accessor discovers devices on the local area network.&#10;	&#10;  ">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Elizabeth Latronico">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="0.1">
            </property>
            <property name="error (port)" class="ptolemy.kernel.util.StringAttribute" value="The error message if an error occurs. If this port is not connected and an error occurs, then an exception is thrown instead.">
            </property>
            <property name="hostIP (port-parameter)" class="ptolemy.kernel.util.StringAttribute" value="The IP address of the host.  Used to discover other devices on       the local area network.">
            </property>
            <property name="devices (port)" class="ptolemy.kernel.util.StringAttribute" value="A JSON object containing the IP address and (when available)      name and mac address of devices on the local area network.">
            </property>
        </property>
        <property name="hostIP" class="ptolemy.actor.parameters.PortParameter" value="&quot;192.168.56.1&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[285.0, 375.0]">
        </property>
        <property name="useNmap" class="ptolemy.data.expr.Parameter" value="false">
            <property name="style" class="ptolemy.actor.gui.style.CheckBoxStyle">
            </property>
        </property>
        <port name="hostIP" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="devices" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;IPAddress.trigger&quot;,x=115.0,y=205.0}, tail={id=&quot;SingleEvent.output&quot;,x=35.0,y=215.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.basic.layout.kieler.LayoutHint" value="{ { head={id=&quot;Stop.input&quot;,x=645.0,y=220.0}, tail={id=&quot;Const.output&quot;,x=580.0,y=220.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[420.0, 375.0]">
        </vertex>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[285.0, 430.0]">
        </vertex>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <vertex name="vertex1" value="[230.0, 375.0]">
        </vertex>
    </relation>
    <link port="Display.input" relation="relation7"/>
    <link port="IPAddress.output" relation="relation3"/>
    <link port="IPAddress.trigger" relation="relation4"/>
    <link port="Display2.input" relation="relation3"/>
    <link port="Display3.input" relation="relation"/>
    <link port="SingleEvent.output" relation="relation4"/>
    <link port="Stop.input" relation="relation6"/>
    <link port="MicrostepDelay.input" relation="relation7"/>
    <link port="MicrostepDelay.output" relation="relation5"/>
    <link port="Const.output" relation="relation6"/>
    <link port="Const.trigger" relation="relation5"/>
    <link port="Const.trigger" relation="relation2"/>
    <link port="MicrostepDelay2.input" relation="relation"/>
    <link port="MicrostepDelay2.output" relation="relation2"/>
    <link port="Discovery.error" relation="relation"/>
    <link port="Discovery.hostIP" relation="relation3"/>
    <link port="Discovery.devices" relation="relation7"/>
</entity>
