<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="XBeeHelloWorld" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="68.0, 32.0">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="To run this, you will need XBee modules available on a serial port on your host computer.&#10;You can get modules that plug into your USB port here:   FIXME&#10;For this demo, you will need two such devices.&#10;&#10;You will need to configure the module to be in &quot;API Mode&quot; (not &quot;AT Mode&quot;, which is the default).&#10;Use XCTU to configure the modules, available here: FIXME&#10;In XCTU, discover the devices and add them.&#10;Click on the devices and scroll down to &quot;AP API Enable&quot; and enable the API Mode.&#10;Save the configuration to the device by clicking on the pencil icon.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[20.0, 55.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={253, 133, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{355.0, 256.181640625}">
    </property>
    <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
        <property name="_location" class="ptolemy.kernel.util.Location" value="[65.0, 270.0]">
        </property>
    </entity>
    <entity name="StringConst" class="ptolemy.actor.lib.StringConst">
        <property name="value" class="ptolemy.data.expr.Parameter" value="Hello World">
        </property>
        <doc>Create a constant sequence with a string value.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="80">
            </property>
            <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[180.0, 270.0]">
        </property>
    </entity>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="var xbee = require('xbee');&#10;&#10;exports.setup = function() {&#10;	parameter('port', {&#10;		'type':'string',&#10;		'options': xbee.hostSerialPorts()&#10;		// FIXME: Set a default value&#10;	});&#10;	input('toSend');&#10;	output('received');&#10;};&#10;&#10;var port;&#10;&#10;exports.initialize = function() {&#10;	port = new xbee.XBee(&#10;		get('port'),&#10;		&quot;Foo&quot;, // FIXME: Instance name of accessor.&#10;		2000,  // FIXME: Need a timeout parameter.&#10;		null); // FIXME: baud rate, etc.&#10;		&#10;	port.on('data', function(data) {&#10;		send('received', data);&#10;	});&#10;		&#10;	addInputHandler('toSend', function() {&#10;		port.send(get('toSend'));&#10;	});&#10;}&#10;&#10;exports.wrapup = function() {&#10;	if (port) {&#10;		port.close();&#10;	}&#10;}&#10;&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[340.0, 270.0]">
        </property>
        <property name="port" class="ptolemy.data.expr.Parameter" value="/dev/tty.usbserial-AJV9ONHV">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <port name="toSend" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="received" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[480.0, 270.0]">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="SingleEvent.output" relation="relation"/>
    <link port="StringConst.output" relation="relation2"/>
    <link port="StringConst.trigger" relation="relation"/>
    <link port="JavaScript.toSend" relation="relation2"/>
    <link port="JavaScript.received" relation="relation4"/>
    <link port="Display.input" relation="relation4"/>
</entity>
