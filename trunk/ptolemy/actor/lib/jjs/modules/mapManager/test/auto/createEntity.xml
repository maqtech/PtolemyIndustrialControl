<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="createEntity" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 211, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="0.8000000000000004">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{339.99999999999994, 252.00000000000017}">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{-5, -20}">
        </property>
    </property>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="&#10;exports.initialize = function(){&#10;var testmessage = &quot;&quot;;&#10;&#10;mapManager = require('mapManager');&#10;&#10;var outMessage = &quot;&quot;;&#10;&#10;var myCoords = new mapManager.CoordinateSystem(&quot;myCoordsName&quot;);&#10;var myMap = new mapManager.Map(&quot;myMapName&quot; , mapManager.SpaceTypeEnum.EUCLIDEAN, myCoords);&#10;var cat = new mapManager.Entity(&quot;cat&quot;);&#10;var dog = new mapManager.Entity(&quot;dog&quot;);&#10;&#10;outMessage += &quot;Map with no entities.\n&quot;;&#10;outMessage += myMap.toString() + &quot;\n&quot;;&#10;outMessage += &quot;Entities without map.\n&quot;&#10;outMessage += cat.toString() + &quot;\n&quot;;&#10;outMessage += dog.toString() + &quot;\n&quot;;&#10;&#10;myMap.addEntity(cat);&#10;myMap.addEntity(dog);&#10;&#10;outMessage += &quot;Map with entities.\n&quot;;&#10;outMessage += myMap.toString() + &quot;\n&quot;;&#10;outMessage += &quot;Entities with map.\n&quot;&#10;outMessage += cat.toString() + &quot;\n&quot;;&#10;outMessage += dog.toString() + &quot;\n&quot;;&#10;&#10;&#10;outMessage += &quot;Removing dog. Should be true.\n&quot;;&#10;outMessage += myMap.removeEntity(dog) + &quot;\n&quot;;&#10;outMessage += &quot;Removing dog again. Should be false.\n&quot;;&#10;outMessage += myMap.removeEntity(dog) + &quot;\n&quot;;&#10;&#10;outMessage += &quot;Map with dog removed.\n&quot;;&#10;outMessage += myMap.toString() + &quot;\n&quot;;&#10;outMessage += &quot;Entities when dog has been removed.\n&quot;&#10;outMessage += cat.toString() + &quot;\n&quot;;&#10;outMessage += dog.toString() + &quot;\n&quot;;&#10;&#10;send(&quot;output&quot;, outMessage);&#10;}">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[50.0, 165.0]">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="string">
            </property>
        </port>
    </entity>
    <entity name="Test" class="ptolemy.actor.lib.Test">
        <property name="correctValues" class="ptolemy.data.expr.Parameter" value="{&quot;Map with no entities.\n{ mapName: myMapName, spaceType: Euclidean, coordinateSystem: myCoordsName }\nEntities without map.\n{ name: cat, containingMaps: {  } }\n{ name: dog, containingMaps: {  } }\nMap with entities.\n{ mapName: myMapName, spaceType: Euclidean, coordinateSystem: myCoordsName }\nEntities with map.\n{ name: cat, containingMaps: { myMapName: true } }\n{ name: dog, containingMaps: { myMapName: true } }\nRemoving dog. Should be true.\ntrue\nRemoving dog again. Should be false.\nfalse\nMap with dog removed.\n{ mapName: myMapName, spaceType: Euclidean, coordinateSystem: myCoordsName }\nEntities when dog has been removed.\n{ name: cat, containingMaps: { myMapName: true } }\n{ name: dog, containingMaps: {  } }\n&quot;}">
        </property>
        <property name="trainingMode" class="ptolemy.actor.parameters.SharedParameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[375.0, 145.0]">
        </property>
    </entity>
    <entity name="Display" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={470, 346, 832, 397}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[832, 353]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{335, 280}">
        </property>
    </entity>
    <entity name="Display2" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={0, 637, 499, 208}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[499, 164]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{720, 260}">
        </property>
    </entity>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="[185.0, 160.0]">
        </vertex>
    </relation>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="JavaScript.output" relation="relation2"/>
    <link port="Test.input" relation="relation2"/>
    <link port="Test.output" relation="relation"/>
    <link port="Display.input" relation="relation2"/>
    <link port="Display2.input" relation="relation"/>
</entity>
