# Makefile for Java Ptolemy polymorphic actor classes
#
# @Authors: Christopher Hylands, based on a file by Thomas M. Parks
#
# @Version: $Id$
#
# @Copyright (c) 1998-2000 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

# This directory contains polymorphic actors.

ME =		ptolemy/actor/lib

# $PTII/configure looks for javasound and sets PTJAVASOUND_DIR
# in $PTII/mk/ptII.mk if it was found.  Otherwise, PTJAVASOUND is empty
# $PTII/configure looks for Jini and sets PTJSPACES_DIR in
# $PTII/mk/ptII.mk if was found.  Otherwise, PTJSPACES_DIR is empty
DIRS = 		conversions gui logic test $(PTJAVASOUND_DIR) $(PTJSPACES_DIR)

# Root of the Java directory
ROOT =		../../..

CLASSPATH =	$(ROOT)

# Get configuration info
CONFIG =	$(ROOT)/mk/ptII.mk
include $(CONFIG)

# Used to build jar files
PTPACKAGE = 	lib
PTDIST =	$(PTPACKAGE)$(PTVERSION)
PTCLASSJAR =

# Include the .class files from these jars in PTCLASSALLJAR
PTCLASSALLJARS = \
	conversions/conversions.jar \
	gui/gui.jar \
	logic/logic.jar

PTCLASSALLJAR = $(PTPACKAGE).jar

# Keep this list alphabetized.
JSRCS = \
	AddSubtract.java \
	AbsoluteValue.java \
	Average.java \
	Bernoulli.java \
	BooleanExpression.java \
	Clock.java \
	Commutator.java \
	Const.java \
	CurrentTime.java \
	DB.java \
	Discard.java \
	DiscreteRandomSource.java \
	Distributor.java \
	Expression.java \
	FileWriter.java \
	Gaussian.java \
	IIR.java \
	Interpolator.java \
	MathFunction.java \
	MaxIndex.java \
	Maximum.java \
	Minimum.java \
        Multiplexor.java \
	MultiplyDivide.java \
	Poisson.java \
	Pulse.java \
	Quantizer.java \
	Ramp.java \
	RandomSource.java \
	Reader.java \
	RealTimeDelay.java \
	RecordAssembler.java \
	RecordDisassembler.java \
	Recorder.java \
	SequenceActor.java \
	SequenceSource.java \
	Scale.java \
	Sink.java \
	Source.java \
	SquareRoot.java \
	Synchronizer.java \
	Test.java \
	TimedActor.java \
	TimedSource.java \
	Transformer.java \
	TrigFunction.java \
	VariableClock.java \
	Writer.java

EXTRA_SRCS =	$(JSRCS) \
	flowcontrol.xml \
	genericicons.xml \
	math.xml \
	signalprocessing.xml \
	Sinewave.xml \
	sinks.xml \
	sources.xml

# Sources that may or may not be present, but if they are present, we don't
# want make checkjunk to barf on them.
MISC_FILES =	$(DIRS)

# make checkjunk will not report OPTIONAL_FILES as trash
# make distclean removes OPTIONAL_FILES
OPTIONAL_FILES = \
	doc \
	javasound \
	'AbsoluteValue$$1.class' \
	'AbsoluteValue$$FunctionTerm.class'

JCLASS = $(JSRCS:%.java=%.class)


all: jclass
install: jclass jars


depend:
	@echo "no dependencies in this directory"

# Get the rest of the rules
include $(ROOT)/mk/ptcommon.mk

