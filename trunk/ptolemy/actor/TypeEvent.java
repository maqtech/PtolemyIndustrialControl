/* Class representing a type change for one port.

 Copyright (c) 1998-1999 The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS.

                                        PT_COPYRIGHT_VERSION_2
                                        COPYRIGHTENDKEY

@ProposedRating Red (yuhong@eecs.berkeley.edu)
@AcceptedRating Red
*/

package ptolemy.actor;

import ptolemy.data.type.Type;
import ptolemy.actor.TypedIOPort;

//////////////////////////////////////////////////////////////////////////
//// TypeEvent
/**
A TypeEvent represents a type change to a port.  This event should be
generated by the port whose type is changed, and should be passed
to the type change listeners to notify them about the change.

@author Yuhong Xiong
@version $Id$
@see TypeListener
*/

public class TypeEvent {

    ///////////////////////////////////////////////////////////////////
    ////                         constructors                      ////

    /** Construct a TypeEvent, with the specified port and the
     *  old and new types of the port.
     *  @param port The port whose type is changed.
     *  @param oldtype The type of the port before the change.
     *  @param newtype The type of the port after the change.
     */
    public TypeEvent(TypedIOPort port, Type oldtype, Type newtype) {
        _port = port;
        _oldtype = oldtype;
        _newtype = newtype;
    }

    ///////////////////////////////////////////////////////////////////
    ////                         public methods                    ////

    /** Return the port whose type is changed.
     *  @return The port whose type is changed.
     */
    public TypedIOPort getPort() {
        return _port;
    }

    /** Return the old type.
     *  @return The type of the port before the change.
     */
    public Type getOldType() {
        return _oldtype;
    }

    /** Return the new type.
     *  @return The type of the port after the change.
     */
    public Type getNewType() {
        return _newtype;
    }

    ///////////////////////////////////////////////////////////////////
    ////                       private fields                    ////

    private TypedIOPort _port = null;
    private Type _oldtype;
    private Type _newtype;
}

