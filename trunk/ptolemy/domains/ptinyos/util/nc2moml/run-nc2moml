#!/usr/bin/perl

# Usage: run-nc2moml <input prefix> <sub prefix> <output prefix> <dirs without prefix>

if ($#ARGV < 2) {
  die "Usage: run-nc2moml <input prefix> <sub prefix> <output prefix> <dirs without prefix>";
}

# SETTINGS
$outputsuffix = ".ncxml";
$indexfilename = "_index.moml";


@args = @ARGV;

$inputprefix = shift @args;
$subprefix = shift @args;
$outputprefix = shift @args;
@mydirs = @args;

# .nc file names in short format.
@ncfiles = ();

system("mkdir -p $outputprefix") == 0
  or die "call to mkdir failed in @args: $?";

print("Converting .nc to nesc xml files.  See results in $outputprefix/command.txt\n");

foreach $mydir (@mydirs) {
  # Find all .nc files.
  $mydir = "$inputprefix/$mydir";
  $files=`find $mydir -name "*.nc" -print`;

  # Call script to convert .nc files into .xml files.
  $filesnonewline = $files;
  $filesnonewline =~ s/\n/\ /g;
  #print("./helper-get-args $inputprefix $outputprefix $outputsuffix $filesnonewline\n");
  system("echo \"./helper-get-args $inputprefix $outputprefix $outputsuffix $filesnonewline\" >> $outputprefix/command.txt 2>&1");
  system("./helper-get-args $inputprefix $outputprefix $outputsuffix $filesnonewline") == 0
      or die "system @args failed: $?";

  # Convert .xml files into .moml files.
  foreach $file (split /\n/, $files) {
    $ncfilename = $file;
    $ncfilename =~ s/^$inputprefix\///;
    push @ncfiles, $ncfilename;
  }
}

print("Converted .nc files to nesc xml files.  See results in $outputprefix/.../*.txt.\n");

# Append nc2moml command (converts xml files into .moml files) to .txt file.
system("echo \"$ENV{PTII}/bin/nc2moml $outputprefix $outputsuffix $subprefix $outputprefix @ncfiles\" >> $outputprefix/command.txt 2>&1");

# Run nc2moml command and append errors to .txt file.
$nc2momlcmd = "$ENV{PTII}/bin/nc2moml $outputprefix $outputsuffix $subprefix $outputprefix @ncfiles >> $outputprefix/command.txt 2>&1";
system($nc2momlcmd) == 0
  or die "system @args failed: $?";

print("Converted nesc xml files to .moml files.  See results in $outputprefix/command.txt\n");

# Append momllib command (creates index files from .moml files) to .txt file.
system("echo \"$ENV{PTII}/bin/momllib .moml $indexfilename $outputprefix\" >> $outputprefix/command.txt 2>&1");

$momllibcmd = "$ENV{PTII}/bin/momllib .moml $indexfilename $outputprefix >> $outputprefix/command.txt 2>&1";
system($momllibcmd) == 0
  or die "system @args failed: $?";

print("Created index files from .moml files.\n");

print("Finished.  See results in $outputprefix/command.txt\n");

