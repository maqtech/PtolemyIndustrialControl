<!-- This DTD defines the format of a PTML document.  

 Copyright (c) 1998 The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS.

                                        PT_COPYRIGHT_VERSION_2
                                        COPYRIGHTENDKEY

@ProposedRating Red (eal@eecs.berkeley.edu)
@AcceptedRating Red (johnr@eecs.berkeley.edu)

/////////////////////////////////////////////////////////////////
///// ptolemyicon.dtd

This DTD describes the format of PTML files, which is a subset of XML.
(@see http://www.w3.org/)  PTML forms the basis for
file storage and exchange within Ptolemy II.   A reference to this file
should be included at the start of every PTML document as follows:
!DOCTYPE ptolemyicon SYSTEM "ptolemyicon.dtd".  Neglecting to include this
line will cause the parser to operate strangely, and will generally be a bad
thing. 
@see PTMLParser

@author Steve Neuendorffer, John Reekie
-->

<!-- icon elements will be parsed into class Icon -->
<!ELEMENT entity (description?, entitytype, parameter*, port*)>
<!ATTLIST entity
name ID #REQUIRED
iconlibrary CDATA #REQUIRED>

<!-- entitytype elements will be parsed into class EntityType -->   
<!ELEMENT entitytype EMPTY>
<!ATTLIST entitytype
name ID #REQUIRED>

<!-- icon elements will be parsed into class Icon -->
<!ELEMENT icon (description, entitytype, graphic*, port*)>
<!ATTLIST icon
name ID #REQUIRED>

<!-- iconlibrary elements will be parsed into class IconLibrary -->
<!ELEMENT iconlibrary (header, icon*)>
<!ATTLIST iconlibrary
name ID #REQUIRED
version CDATA #REQUIRED>

<!-- parameter elements will be parsed into class SchematicParameter -->
<!ELEMENT parameter EMPTY>
<!ATTLIST parameter
name ID #REQUIRED
value CDATA ""
type (string|double|doubleArray) #REQUIRED>

<!-- port elements will be parsed into class SchematicPort -->
<!ELEMENT port EMPTY>
<!ATTLIST port
name ID #REQUIRED
input (true|false) "false"
output (true|false) "false"
multiport (true|false) "false"
type (string|double|doubleArray) #REQUIRED>

<!-- schematic relations will be parsed into class SchematicRelation -->
<!ELEMENT relation (link)*>
<!ATTLIST relation
name ID #REQUIRED>

<!-- schematic elements will be parsed into class Schematic -->
<!ELEMENT schematic (entity|relation|description|parameter)*>
<!ATTLIST schematic
name ID #REQUIRED
version CDATA #REQUIRED>


<!-- The following don't have separate classes. -->
<!ELEMENT description (#PCDATA)>
<!ELEMENT ellipse EMPTY>
<!ELEMENT header (description, sublibrary*)>
<!ELEMENT graphic (tclscript|line|rect|ellipse|polygon|textline|textbox|image)*>
<!ATTLIST graphic
format (xml|tcl) #REQUIRED>
<!ELEMENT image EMPTY>
<!ELEMENT line EMPTY>
<!ELEMENT link EMPTY>
<!ATTLIST link
name CDATA #REQUIRED>
<!ELEMENT polygon EMPTY>
<!ELEMENT rect EMPTY>
<!ELEMENT tclscript (#PCDATA)>
<!ELEMENT sublibrary (#PCDATA)>
<!ELEMENT textline (#PCDATA)>
<!ELEMENT textbox (#PCDATA)>


















