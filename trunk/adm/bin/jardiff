#!/bin/sh
# Compare two jar files and report the differences
# Example usage:
# ./jardiff "c:/Program Files/Ptolemy/Ptolemy II 1.0.1/ptolemy/actor/lib/lib.jar" "$PTII/ptolemy/actor/lib/lib.jar"

if [ $# -ne 2 ]; then
    echo "$0: Wrong number of arguments, got $#, expected 2"
    echo "$0: Usage jardiff foo.jar bar.jar"
    exit 45
fi	

jarfile1="$1"
jarfile2="$2"
if [ ! -r "$jarfile1" ]; then
    echo "$0: '$jarfile1' does not exist or is not readable"
    exit 46
fi

if [ ! -r "$jarfile2" ]; then
    echo "$0: '$jarfile3' does not exist or is not readable"
    exit 46
fi

# First pass, report class files that are not found in either jar file
tmpfile=/tmp/jardiff_$$
contents1=${tmpfile}_contents1
contents2=${tmpfile}_contents2

jar -tf "$jarfile1" | sort > $contents1
jar -tf "$jarfile2" | sort > $contents2
echo "Files found only in $jarfile1":
comm -23 $contents1 $contents2

echo "Files found only in $jarfile2":
comm -13 $contents1 $contents2

classpathseparator=:
case "${OSTYPE-no}" in
# Cygwin Bash
    cygwin*)
    classpathseparator=";" ;;
# Tcsh
    Windows*)
    classpathseparator=";" ;;
esac

description1=${tmpfile}_desc1
description2=${tmpfile}_desc2
files=`comm -12 $contents1 $contents2`
for file in $files
do
    class=`echo $file | sed -e 's@/@.@g' -e 's@.class@@'`
    echo "$class"
    javap -classpath "$jarfile1${classpathseparator}${PTII}" $class > $description1
    javap -classpath "$jarfile2${classpathseparator}${PTII}" $class > $description2
    diff $description1 $description2 > /dev/null 2>&1
    retval=$? 
    if [ $retval -eq 1 ]; then
	echo "$file has differences:"
	diff $description1 $description2
    fi
done

rm -f $contents1 $contents2 $description1 $description2
