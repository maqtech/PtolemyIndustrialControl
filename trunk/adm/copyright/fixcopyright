#!/bin/sh
# Fix the copyright date
#-[Wed Mar 17 14:59:14 2004 by cxh]-
#
# The way to run this is to use $PTII/adm/bin/ptIItxtfiles to generate
# a list of files and then run this script on that over and over
# again until all the bogus copyrights have been found

# 1. Check out a fresh tree in a separate directory 
#    cd ~/tmp; cvs -d :ext:gigasource:/home/cvs co ptII
# 2. Remove ptII/vendors
# 3. Generate a list of text files
#   cd ptII; $PTII/adm/bin/ptIItxtfiles > /tmp/f
# 4. Update the script
#    - Update the year regex in the lines marked 'EVERY_YEAR' below
# 5. Run the script in testing mode:
#    cat /tmp/f | xargs $PTII/adm/copyright/fixcopyright -n >& /tmp/fc.txt
# 6. Check the output in /tmp/fc.txt
# 7. Run it for real:
#    cat /tmp/f | xargs $PTII/adm/copyright/fixcopyright >& /tmp/fc2.txt
# 8. Do a clean checkout somewhere and rebuild and test
#    cd ~/tmp_2; cvs -d :ext:gigasource:/home/cvs co ptII
#    make fast

printonly=no

while getopts nd-- opt
do
    case $opt in
	d) 	set -x;;
	n) 	printonly=yes;;
	\?)	echo "$0: Usage: $0 [-p] [-x] [filenames . . .]"
		echo " -n  Print only, do not modify any files "
		echo " -d  debug"
		exit 3;;
    esac
done
shift `expr $OPTIND - 1`


search() {
topdir=`pwd`
echo "************ $EGREPMATCH: $topdir"

for fullfile in $@
do
    cd $topdir
    echo "Now processing: $fullfile"
    egrep "$EGREPMATCH" $fullfile
    retval=$?
    if [ $retval = 0 ]; then
	# There was a difference, so we might want to check this sucker out
	file=`basename $fullfile`
	dirname=`dirname $fullfile`
	cd $dirname
	if [ -d SCCS -o -d RCS ]; then
	    echo "Error: SCCS or RCS directory"
	    exit 2
	fi
	doit
	if [ "$printonly" = "no" ]; then
	    cp /tmp/fixcopyright.tmp $file
	    if [ -d CVS ]; then
		cvs commit -m "$LOGMESSAGE" $file 
	    fi	
	else
	    echo "Would update and commit"
	fi	
    fi
done
rm -f /tmp/fixcopyright.tmp
cd $topdir
}

doit() {
    sed 's/Copyright \(\&[^ ]*\) 1998\([ ,]\)/Copyright \1 1998-2003\2/' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}
EGREPMATCH="Copyright &[^ ]* 1998[ ,]"
LOGMESSAGE="Changed copyright to 2003"

search $@

doit() {
    sed 's/\(199[0-8]\)-199[0-9]/\1-2003/' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}
EGREPMATCH="199[0-8]-199[0-9]"
LOGMESSAGE="Changed copyright to 2003"

search $@

# EVERY_YEAR: update the regex to get last-year's changes

doit() {
    sed 's/Copyright (c) \(199[0-9]\)-200[0123]/Copyright (c) \1-2004/' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}

# EVERY_YEAR: update the regex to get last-year's changes

EGREPMATCH='Copyright \(c\) 199[0-9]-200[0123]'
LOGMESSAGE="Changed copyright to 2004"

search $@

# EVERY_YEAR: update the regex to get last-year's changes

doit() {
    sed 's/Copyright (c) \(200[012]\)-200[0123] /Copyright (c) \1-2004 /' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}

# EVERY_YEAR: update the regex to get last-year's changes

EGREPMATCH='Copyright \(c\) 200[0123]-200[0123]'
LOGMESSAGE="Changed copyright to 2004"

search $@

doit() {
    sed 's/Copyright (c) \(199[0-9]\) /Copyright (c) \1-2004 /' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}
EGREPMATCH="Copyright \(c\) 199[0-9] "
LOGMESSAGE="Changed copyright to 2004"

search $@

# EVERY_YEAR: update the regex to get last-year's changes

doit() {
    sed 's/Copyright (c) \(200[0123]\) /Copyright (c) \1-2004 /' \
	    $file > /tmp/fixcopyright.tmp	
    diff $file /tmp/fixcopyright.tmp	
}

# EVERY_YEAR: update the regex to get last-year's changes

EGREPMATCH="Copyright \(c\) 200[0123] "
LOGMESSAGE="Changed copyright to 2004"

search $@


