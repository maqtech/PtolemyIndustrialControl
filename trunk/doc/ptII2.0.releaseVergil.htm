<!-- DO NOT EDIT this file it is created by running make-->
<!-- $Id$ -->
<html>
<head>
<title>Ptolemy II 2.0beta Release Notes</title>
</head>
<body>
<!--vergilDocs-->
<h2>Limitations</h2>
Version 2.0 has a number of limitations.

<h3>Release Limitations</h3>
<menu>

<li> Code generation does not work in the Ptolemy 2.0 Web Edition.
The problem is that some of the code generation facility requires
that the <CODE>PTII</CODE> environment variable be set.

<li> The gzipped tar file that contains the Ptolemy II distribution
 <B>requires</B> GNU tar or WinZip.  Solaris 2.5.1 tar will fail to
untar this file with a checksum error because the pathnames are longer
than 100 characters.  If you do not have GNU tar, you can obtain
source and selected binaries from 
ftp://ptolemy.eecs.berkeley.edu/pub/gnu.
</menu>


<h3>Limitations in the Actor Libraries</h3>
<menu>
<li>The actor library is far from complete.

<li>The Expression actor does not properly propagate type constraints in
an expression-dependent fashion. It works correctly for double-valued
expressions of double-valued inputs.

<li> The Ptolemy parameter parser uses comma "," to separate elements
in an array.  This causes problems when Ptolemy is run on
European machines that use a comma "1,0" instead of a period "1.1"
in floating point numbers.

<li> The readFile() parameter function does not work with applets.

<!-- If you change the next paragraph update install.htm -->
<li>The Matlab interface works only under Windows and it requires that
Matlab be installed on the local machine.  The Matlab interface has
been tested with Matlab 6.1, which corresponds with R12.1.

<li> The actor.lib.comm.SerialComm actor requires that Javacomm is installed
<a href="http://java.sun.com/products/javacomm/index.html"><CODE>http://java.sun.com/products/javacomm/index.html</CODE></a>.  The SerialComm actor
will only work under Windows.

</menu>

<h3>Limitations in the FSM Domain</h3>

<h3>Limitations in the GR Domain</h3>
Some of the demos do not work.

<h3>Limitations in the PN Domain</h3>
The PN domain documents that it locally handles mutations.  However, this
is currently not true in the implementation.  For the basic PN model, this
doesn't really matter, since mutations happen pretty much the same as they
would otherwise.  (i.e. they are non-deterministic in when they execute) 
However, for timed PN models, there is actually some expressiveness
lost, since timed PN models can locally execute mutations deterministically.


<h3>Limitations in the User Interface</h3>
Version 2.0 of Ptolemy II includes the Vergil, a graphical user
interface for Ptolemy II.  This UI is still preliminary, and is made
up mostly of code that is rated "red", meaning that both the APIs
and the implementations are likely to change.
There are quite a few limitations.
<menu>

<li> Under JDK1.4, the icon titles may be rendered in the middle
of the icons instead of on the top.  The workaround is to use JDK1.3.1
instead of JDK1.4 

<li> If I right click on a port and select Customize Name and then select
Show Name, the name appears twice.
<li>No undo mechanism.
<li>Weak support for multiports in the graph editor.
<li>It is difficult to control wire routing.
<li>Cannot have more than one vertex in a connection.
<li>No mechanism to set the width of a relation.
<li>The integrated web browser is not a full-featured browser.
<li>Icon editor not yet integrated.
<li>Debugger not yet integrated.
<li>It is difficult to add actors to the libraries.
<li>No dynamic class loading.
</menu>

<h3>Code Generation Limitations</h3>
<menu>
<li> This release includes a limited prototype of our code generation facility
that will generate .class files for non-hierarchical SDF models

<li> The code generator uses Soot, which requires JDK1.3.x.
Soot will not work with JDK1.4

</menu>

<h3>Missing Domains</h3>
<menu>
<li>Boolean and integer dataflow.
<li>Dynamic dataflow
</menu>
</body>
</html>
