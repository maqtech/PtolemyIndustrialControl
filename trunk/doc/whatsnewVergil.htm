<!-- DO NOT EDIT this file, it is created by running make.
     The file to edit is $PTII/doc/ptIIx.x.release.htm
     where x.x is the release number, then run 'make update'
     to update the derived files and check them in to cvs. -->
<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II 2.0.1 Release Notes</title>
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#faf0e6">
<!--whatsnew-->
<h2>Major Features that are new in Ptolemy 2.0 </h2>
<menu>

<li> <a href="../ptolemy/domains/de/demo/ModalModel/ModalModel.xml">Modal Models</a>
 (Xiaojun Liu, Edward A. Lee)
<br>A model model is one whose behavior depends on its "mode"
of operation. A modal model in Ptolemy II is an FSM (finite state machine)
combined hierarchically with other models. A state in the FSM represents
a mode of operation, and can have a refinement that gives the behavior
in that model.
The refinement can be another FSM or some other model using some other
Ptolemy domain. This example combines DE, FSM, and SDF to model a
system where regularly sampled signals are perturbed by irregular
events in time.
</li>

<li> <a href="codegen.htm">Code Generation</a>
(Primary Author: Stephen Neuendorffer, Contributor: Christopher Hylands)
 <br>This release includes a limited prototype of our code generation facility
that will generate .class files for non-hierarchical SDF models

 <br>Note that the code generator will not work in an applet, but will
work with Web Start, the Windows installer and the standard configure
and build

<li> <a href="codeDoc/ptolemy/data/unit/package-summary.html">ptolemy.data.unit</a> -
<a href="../ptolemy/data/unit/demo/Units/Units.xml">Units Demo</a>
(Primary Authors: Yuhong Xiong, Xiaojun Liu, Contributors: Winthrop Williams, Edward A. Lee)
<br>
A major source of errors in embedded software is incorrect application
of units. Yuhong Xiong and Xiaojun Liu have created a unit system for
Ptolemy II that is quite clever. A suite of constants are defined, with
names such as "meter", "cm", "feet", "miles", "seconds", "hours", and
"days". In each unit category ("length" or "time" for example), there
is a primary unit with respect to which all the others are specified.
Thus, for example, if the primary unit of length is meters, then the
expression "1.0 * cm" will have an internal value of 0.01 * meters.
Compound units are specified by just multiplying and dividing, as in
for example "1.0 * cm/second".

<p>The way this is realized is that these unit constants are tokens just
like other Ptolemy II data, and multiplication and division are
overloaded in the base classes for numeric valued tokens.  We continue
to work on this architecture to enable users to customize the unit
system on a per-model basis.

<li> <a href="../ptolemy/domains/tm/doc/main.htm">Timed Multitasking Domain</a>
(Jie Liu) - an implementation of a model of
computation based on priority-driven multitasking, as common in
real-time operating systems (RTOSs), but with more deterministic
behavior

<li> <a href="../ptolemy/domains/sr/doc/main.htm">Synchronous/Reactive Domain</a>:
(Primary Author: Paul Whitaker, Contributors: Elaine Cheong, John Reekie)

<li> <a href="webStartHelp.htm">Web Start</a>
 (Christopher Hylands) -  
Ptolemy II includes support to build distributions using Sun's Web Start
facility, which allows end users to download fully functional distributions
via the web.

<li> Vergil updates
(Steve Neuendorffer, Edward A. Lee, John Reekie)
 Vergil has been improved
 and the following features have been added
	<menu>
	<li> Annotations - It is now much easier to annotate a model with
	text.
	<li> Parameters - The model can display top level parameter
	names and values
	<li> Snap to grid - It is now much easier to line up actors
	<li> Panner, zoom - The panner and zoom facilities make
	it easier to navigate large
	<li> Improved FSM editor
	<li> Animation - It is now possible to show which actors are firing
	when.
	<li> Better icons - Some icons such as Const, Scale and Expression
	will display their values.  
	<li> Set data types of ports
	<li> Java Virtual Machine properties window - JVM Properties
	can be queried and garbage collection requested.
	<li> <a href="../ptolemy/domains/ct/doc/signal_types.htm">Documentation for setting CT signal types</a>
	</menu>
See <a href="design/usingVergil/index.htm"><code>$PTII/doc/design/usingVergil/index.htm</code></a> for more complete information

</menu>

<h2>Other Features that are new in Ptolemy II 2.0</h2>

<ul>


<li> <a href="../ptolemy/domains/giotto/doc/main.htm">Giotto Domain rewrite</a>: 
(Haiyang Zheng) - The Giotto scheduler was rewritten and the kernel
was updated.

<li> <a href="../ptolemy/domains/fsm/demo/MultipleRuns/MultipleRuns.xml">Multiple Runs</a>
(Xiaojun Liu, Edward A. Lee) - The FSM domain as been extended
to perform multiple runs of refinement on a model.

<li> <a href="coding/debugging.htm">Support for <code>jdb</code></a> 
(Zoltan Kemenczy, Research In Motion, Ltd.) -
The scripts that invoke Ptolemy II have been extended to support
<code>jdb</code>, the Java Debugger.

<li> Ptolemy II Matlab interface
(Zoltan Kemenczy and Sean Simmons, Research In Motion, Ltd.) -
The Matlab Expression actor uses JNI to invoke the Matlab engine, 
evaluate Matlab expressions and return the results to Ptolemy II.
The Matlab Expression actor works only under Windows, and requires
that Matlab be installed on your local machine.
 <menu>
 <li> <a href="../ptolemy/matlab/matlab.htm">Ptolemy II Matlab Interface Overview</a>
 <a href="codeDoc/ptolemy/matlab/package-summary.html">Java class documentation</a>
 <li> <a href="../ptolemy/matlab/demo/MatlabExpression/MatlabExpression.xml">Matlab Expression Demonstration</a> -
 Windows only, requires that Matlab be installed locally, will not work within
 an applet, but will work with Web Start
 </menu>

<li> <a href="codeDoc/ptolemy/data/expr/package-summary.html">Expression improvements</a>
(Zoltan Kemenczy and Sean Simmons of Research In Motion, Ltd.)
Functions with scalar arguments applied to arrays and matrices
element-by-element (recursive argument dimension reduction); widened search
for static function (and method) signatures that includes most ptolemy.math
classes; performance improvements by caching search results; widened token to
java-type conversions for function arguments and results.


<li> <a href="codeDoc/ptolemy/graph/package-summary.html">ptolemy.graph</a>
 (Shuvra S. Bhattacharyya (University of Maryland at College Park)) -
The graph package was redesigned and reimplemented.


<li> <a href="codeDoc/ptolemy/kernel/util/VersionAttribute.html">VersionAttribute</a>
(Christopher Hylands, Edward A. Lee) -
Models can be annotated with the Web Start format version number of
Ptolemy II that is required to run the model.  In the future, we will
use this attribute to manage backward compatibility.

<li> <a href="codeDoc/ptolemy/data/UnsignedByteToken.html">ptolemy.data.UnsignedByteToken</a>
(Winthrop Williams, Steve Neuendorffer) - A new Token supporting
unsigned bytes.

 <!-- Tcl shell is not shipping in 2.0, it makes the download larger.-->

</ul>

<h3>New Demonstrations</h3>

<menu>
<li> <a href="../ptolemy/domains/ct/doc/main.htm">CT</a>:
	Continuous Time
 <menu>
 <li> <a href="../ptolemy/domains/ct/demo/BouncingBall/BouncingBall.xml">Bouncing Ball</a>  (Requires Java 3D, see the <a href="../ptolemy/domains/gr/doc/main.htm">GR domain</a>)
 A Continuous Time model that uses a Finite State Machine and the GR
 domain to simulate a bouncing ball.

 <li> <a href="../ptolemy/domains/ct/demo/CarTracking/CarTracking.xml">Car Tracking</a>
 A following car tracking a leading car in an unreliable 
 communication environment.

 <li> <a href="../ptolemy/domains/ct/demo/Switch/Switch.xml">Switching Continuous Signals</a>
 Shows how to handle hybrid systems with both continuous and discrete inputs
 and outputs.
 <li> <a href="../ptolemy/domains/ct/demo/Thermostat/Thermostat.xml">Modal Thermostat</a>
 A thermostat model where the refinements of the
 modes in the state machine are the same model.
 <li> <a href="../ptolemy/data/unit/demo/Units/Units.xml">Units</a>
 A demonstration of the Units facility
 </menu>
<li> <a href="../ptolemy/domains/de/doc/main.htm">DE</a>:
	 Discrete Event
<menu>
<li> <a href="../ptolemy/domains/de/demo/ModalModel/ModalModel.xml">Modal Model</a>
This example combines DE, FSM, and SDF to model a
system where regularly sampled signals are perturbed by irregular
events in time.
</menu>


<li> <a href="../ptolemy/domains/fsm/doc/main.htm">FSM</a>:
	 Finite State Machines
 <menu>
 <li> <a href="../ptolemy/domains/fsm/demo/Blending/Blending.xml">Blending</a>
 A blending controller with two major control modes.
 <li> <a href="../ptolemy/domains/fsm/demo/MultipleRuns/MultipleRuns.xml">Multiple&nbsp;Runs</a> 
 A state machine performs multiple runs of the refinement of mode1. 
 </menu>

<li><a href="../ptolemy/domains/giotto/doc/main.htm">Giotto</a>:
	Synchronous Periodic Systems
 <menu>
 <li> <a href="../ptolemy/domains/giotto/demo/Composite/Composite.xml">Composite</a>
A composite demo with a Giotto model embedded in a DE model.

 </menu>

<li><a href="../ptolemy/domains/gr/doc/main.htm">GR</a>:
	3-D graphics (experimental)
 <menu>
 <li> <a href="../ptolemy/domains/gr/demo/FurutaPendulum/FurutaPendulum.xml">FurutaPendulum</a>
 The Furuta pendulum has a motor controlling the angle of an arm, from
 which a free-swinging pendulum hangs. The objective is to swing the
 pendulum up and then balance it.

 </menu>

<li> <a href="../ptolemy/domains/pn/doc/main.htm">PN</a>:
	Process Networks
 <menu>

<li> <a href="../ptolemy/domains/sdf/doc/main.htm">SDF</a>:
	Synchronous Dataflow
 <menu>
 <li><a href="../ptolemy/domains/sdf/demo/LMSAdaptive/LMSAdaptive.xml">LMSAdaptive</a>
 An adaptive filter
 <li><a href="../ptolemy/domains/sdf/demo/MaximumEntropySpectrum/MaximumEntropySpectrum.xml">MaximumEntropySpectrum</a>
 A spectral estimation example
 </menu>


<li> <a href="../ptolemy/domains/sr/doc/main.htm">SR</a>:
	Synchronous/Reactive (experimental)
 <menu>
 <li><a href="../ptolemy/domains/sr/demo/TokenRing/TokenRing.xml">TokenRing</a>
 A cyclic token-ring arbiter composed of three blocks.
 </menu>

<li> <a href="../ptolemy/domains/tm/doc/main.htm">TM</a>:
	Timed Multitasking (experimental).
 <menu>
 <li><a href="../ptolemy/domains/tm/demo/Controllers/Controllers.xml" target="main">Controllers</a>
   Two (independent) control loops whose controllers share the same CPU.
 <li><a href="../ptolemy/domains/tm/demo/FFT/FFT.xml" target="main">FFT</a>
   This model shows the use of background process for long running tasks in 
   the TM domain.
 <li><a href="../ptolemy/domains/tm/demo/MergedEvents/MergedEvents.xml" target="main">MergedEvents</a>
 <li><a href="../ptolemy/domains/tm/demo/SimpleTasks/SimpleTasks.xml" target="main">SimpleTasks</a>
  This model shows two independent tasks on a
  single CPU machine.
 </menu>


</menu>


<h3>New Actors</h3>

<ul>

<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">ptolemy.actor.lib</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/actor/lib/Accumulator.html"><code>Accumulator</code></a>
<dd> (Edward A. Lee)
An actor that outputs the sum of the inputs so far.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanMultiplexor.html"><code>BooleanMultiplexor</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanMultiplexor.html"><code>BooleanMultiplexor</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanSelect.html"><code>BooleanSelect</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/BooleanSwitch.html"><code>BooleanSwitch</code></a> 
<dd> (Steve Neuendorffer)
A polymorphic multiplexor with boolean select.

<dt> <a href="codeDoc/ptolemy/actor/lib/ClassWrapper.html"><code>ClassWrapper</code></a> 
An actor that wraps (an instance of) a Java class.
<dd> (Xiaojun Liu)

<dt> <a href="codeDoc/ptolemy/actor/lib/Counter.html"><code>Counter</code></a> 
An up-down counter.
<dd> (Steve Neuendorffer)

<dt> <a href="codeDoc/ptolemy/actor/lib/Differential.html"><code>Differential</code></a> 
<dd> (Edward A. Lee)
An actor that outputs the difference between successive inputs.

<dt> <a href="codeDoc/ptolemy/actor/lib/DoubleReader.html"><code>DoubleReader</code></a> 
<dd> (Jie Liu, Christopher Hylands)
An actor that outputs doubles read from a URL.

<dt> <a href="codeDoc/ptolemy/actor/lib/Limiter.html"><code>Limiter</code></a> 
<dd> (Edward A. Lee)
An actor that limits the input to a specified range.

<dt> <a href="codeDoc/ptolemy/actor/lib/LinearDifferenceEquationSystem.html"><code>LinearDifferenceEquationSystem</code></a> 
<dd> (Jie Liu, Elaine Cheong)
Linear Difference Equation System.

<dt> <a href="codeDoc/ptolemy/actor/lib/LookupTable.html"><code>LookupTable</code></a> 
<dd> (Paul Whitaker, Christopher Hylands)
A lookup table that outputs internally stored data given an index
Parameter.


<dt> <a href="codeDoc/ptolemy/actor/lib/NonStrictTest.html"><code>NonStrictTest</code></a> 
<dd> (Paul Whitaker, Christopher Hylands)
Check the input streams against a parameter value, ignoring absent values.

<dt> <a href="codeDoc/ptolemy/actor/lib/URLDirectoryReader.html"><code>URLDirectoryReader</code></a> 
<dd> (Christopher Hylands)
An actor that reads a URL naming a directory and outputs each
element of the directory one at a time.

<dt> <a href="codeDoc/ptolemy/actor/lib/VectorAssembler.html"><code>VectorAssembler</code></a> 
<dd> (Jie Liu, Elaine Cheong)
An actor that reads a token from each input channel to assemble a
DoubleMatrixToken.

<dt> <a href="codeDoc/ptolemy/actor/lib/VectorDisassembler.html"><code>VectorDisassembler</code></a> 
<dd> (Jie Liu, Elaine Cheong)
An actor that disassembles a DoubleMatrixToken to a multiport output.

<dt> <a href="codeDoc/ptolemy/actor/lib/WallClockTime.html"><code>WallClockTime</code></a> 
<dd> (Edward A. Lee)
Output the elapsed time in seconds.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/comm/package-summary.html">ptolemy.actor.lib.comm</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/comm/SerialComm.html"><code>SerialComm</code></a> 
<dd> (Winthrop Williams)
Read and write from a serial port
</dl>

<li> 
 <a href="codeDoc/ptolemy/actor/lib/conversions/package-summary.html">ptolemy.actor.lib.conversions</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/BooleanToAnything.html"><code>BooleanToAnything</code></a> 
<dd> (Edward A. Lee)
An actor that converts a boolean token into any other data type.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/InUnitsOf.html"><code>InUnitsOf</code></a> 
<dd> (Yuhong Xiong, Xiaojun Liu, Edward Lee)
An actor that converts input tokens to specified units.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/IntArrayToString.html"><code>IntArrayToString</code></a> 
<dd> (Winthrop Williams)
An actor that converts an array of integers into a string.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/LongToDouble.html"><code>LongToDouble</code></a> 
<dd> (Christopher Hylands)
An actor that converts a LongToken into a DoubleToken.

<dt> <a href="codeDoc/ptolemy/actor/lib/conversions/StringToIntArray.html"><code>StringToIntArray</code></a> 
<dd> (Winthrop Williams)
An actor that converts a string to an array of integers.

</dl>


<li> <a href="codeDoc/ptolemy/actor/lib/gui/package-summary.html">ptolemy.actor.lib.gui</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/gui/MatrixVisualizer.html"><code>MatrixVisualizer</code></a> 
<dd> (Neil Turner, Steve Neuendorffer)
An actor for 2-D visualization of matrices.

<dt> <a href="codeDoc/ptolemy/actor/lib/gui/RealTimePlotter.html"><code>RealTimePlotter</code></a> 
<dd> (Edward A. Lee)
Plot input data as a function of elapsed real time.

<dt> <a href="codeDoc/ptolemy/actor/lib/gui/SliderSource.html"><code>SliderSource</code></a> 
<dd> (Xiaojun Liu)
An actor whose output is controlled by a slider in the run window.

</dl>


<li> <a href="codeDoc/ptolemy/actor/lib/logic/package-summary.html">ptolemy.actor.lib.logic</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/logic/IsPresent.html"><code>IsPresent</code></a> 
<dd> (Edward A. Lee)
Output true if the input is present, false otherwise.
</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/net/package-summary.html">ptolemy.actor.lib.net</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/actor/lib/net/DatagramReader.html"><code>DatagramReader</code></a> 
<dd> (Winthrop Williams)
An actor that asynchronously reads datagram packets.
<dt> <a href="codeDoc/ptolemy/actor/lib/net/DatagramWriter.html"><code>DatagramWriter</code></a> 
<dd> (Winthrop Williams)
An actor that sends its input as a UDP datagram packet.
</dl>

<li> <a href="codeDoc/ptolemy/domains/ct/lib/package-summary.html">ptolemy.domains.ct.lib</a>:

<dl>
<dt> <a href="codeDoc/ptolemy/domains/ct/lib/EventSource.html"><code>EventSource</code></a> 
<dd> (Jie Liu)
Generate discrete events at prespecified time instants.
<dt> <a href="codeDoc/ptolemy/domains/ct/lib/FirstOrderHold.html"><code>FirstOrderHold</code></a> 
<dd> (Jie Liu)
An actor that takes a value and a derivative and does first order projection.

<dt> <a href="codeDoc/ptolemy/domains/ct/lib/LevelCrossingDetector.html"><code>LevelCrossingDetector</code></a> 
<dd> (Jie Liu)
A CT actor that detects level crossings of its trigger input signal.

</dl>

<li> <a href="codeDoc/ptolemy/domains/de/lib/package-summary.html">ptolemy.domains.de.lib</a>:

<dl>

<dt> <a href="codeDoc/ptolemy/domains/de/lib/EventButton.html"><code>EventButton</code></a> 
<dd> (Winthrop Williams, Paul Whitaker)
An actor that generates an empty token in response to a click of a button.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/EventFilter.html"><code>EventFilter</code></a> 
<dd> (Steve Neuendorffer, Sonia Sachs)
An actor that filters false boolean tokens.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/Inhibit.html"><code>Inhibit</code></a>
<dd> (Steve Neuendorffer)
An actor that produces a copy of the most recent input each time

<dt> <a href="codeDoc/ptolemy/domains/de/lib/PreemptableTask.html"><code>PreemptableTask</code></a> 
<dd> (Elaine Cheong, Yang Zhao, Xiaojun Liu)
An actor that simulates a preemptable task.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/Previous.html"><code>Previous</code></a> 
<dd> (Edward A. Lee)
An actor that outputs the previous event when it receives an event.


<dt> <a href="codeDoc/ptolemy/domains/de/lib/Queue.html"><code>Queue</code></a> 
<dd> (Steve Neuendorffer)
An actor that implements a queue of events.

<dt> <a href="codeDoc/ptolemy/domains/de/lib/QueueWithNextOut.html"><code>QueueWithNextOut</code></a> 
<dd> (Winthrop Williams, Steve Neuendorffer)
An actor that implements a queue of events with a nextOut port

<dt> <a href="codeDoc/ptolemy/domains/de/lib/SamplerWithDefault.html"><code>SamplerWithDefault</code></a> 
<dd> (Steve Neuendorffer, Jie Liu, Edward A. Lee)
An actor that produces a copy of the most recent input each time

</dl>

<li> <a href="codeDoc/ptolemy/domains/sdf/lib/package-summary.html">ptolemy.domains.sdf.lib</a>:


<dl>
<dt> <a href="codeDoc/ptolemy/domains/sdf/lib/DoubleToMatrix.html"><code>DoubleToMatrix</code></a> 
<dd> (Edward A. Lee)
An actor that converts a sequence of input tokens to a matrix.

<dt> <a href="codeDoc/ptolemy/domains/sdf/lib/MatrixToDouble.html"><code>MatrixToDouble</code></a> 
<dd> (Edward A. Lee)
An actor that converts a matrix to sequence of output tokens.

</dl>

</ul>


<h2>Backward compatibility issues</h2>
Most models developed under Ptolemy II 1.0.1 should run under Ptolemy II 2.0.

 <p>The MoMLParser has been extended to include a list of backward
compatibility filters that look for actors that have changed while
parsing a model.  The backward compatibility filters will make what
ever change is necessary, and the user will eventually be prompted to
save the model.  The filters themselves are defined in <a
href="codeDoc/ptolemy/moml/filter/package-summary.html">ptolemy.moml.filter</a>

 <p>Below are the backward compatibility issues
that are handled automatically.

<menu>
<li> ptolemy.moml.filter.AddEditorFactory:
 If a parameter has a <code>_location</code>, then
Add a VisibleParameterEditorFactory named <code>_editorFactory</code>
<li> ptolemy.moml.filter.AddIcon:
Add specialized icons that display the value
of one of the parameters.
<br>The affected actors are:
  <menu>
  <li>ptolemy.actor.lib.Scale
  <li>ptolemy.actor.lib.Const
  <li>ptolemy.actor.lib.TrigFunction
  <li>ptolemy.actor.lib.MathFunction
  <li>ptolemy.actor.lib.Expression
  </menu>
<li> ptolemy.moml.filter.HideAnnotationNames:
If an annotation name ends with
'annotation1', then add <code>_hideName</code> if necessary.

<li> ptolemy.moml.filter.PortNameChanges:
Update any actor port names that have been
renamed. 
  <br>Below are the actors that are affected, along with the old port name 
  and the new port name:
  <menu>
  <li>ptolemy.actor.lib.Sleep
  <br>&nbsp;&nbsp;		delay	 -&gt; sleepTime
  <li>ptolemy.actor.lib.conversions.ComplexToCartesian
  <br>&nbsp;&nbsp;		imag	 -&gt; y
  <br>&nbsp;&nbsp;		real	 -&gt; x
  <li>	ptolemy.actor.lib.conversions.CartesianToComplex
  <br>&nbsp;&nbsp;		imag	 -&gt; y
  <br>&nbsp;&nbsp;		real	 -&gt; x
  </menu>

<li>ptolemy.moml.filter.PropertyClassChanges:
Update any actor port class names that have been renamed. 
  <br>Below are the actors that are affected, along with the port name 
  and the new classname:
   
  <menu>
  <li>	ptolemy.domains.sdf.lib.vq.ImageUnpartition
  <br>&nbsp;&nbsp;		output	 -&gt; ptolemy.actor.TypedIOPort
  <br>&nbsp;&nbsp;		input	 -&gt; ptolemy.actor.TypedIOPort
  <li>	ptolemy.actor.lib.javasound.AudioReader
  <br>&nbsp;&nbsp;		sourceURL	 -&gt; ptolemy.data.expr.Parameter
  <li>	ptolemy.domains.sdf.lib.vq.VQDecode
  <br>&nbsp;&nbsp; 		output	 -&gt; ptolemy.actor.TypedIOPort
  <br>&nbsp;&nbsp;		input	 -&gt; ptolemy.actor.TypedIOPort
  <li>	ptolemy.domains.sdf.lib.vq.HTVQEncode
  <br>&nbsp;&nbsp;		output	 -&gt; ptolemy.actor.TypedIOPort
  <br>&nbsp;&nbsp;		input	 -&gt; ptolemy.actor.TypedIOPort
  <li>	ptolemy.domains.sdf.lib.vq.ImagePartition
  <br>&nbsp;&nbsp;		output	 -&gt; ptolemy.actor.TypedIOPort
  <br>&nbsp;&nbsp;		input	 -&gt; ptolemy.actor.TypedIOPort
  </menu>
</menu>

Below are the changes that are not handled automatically:
<menu>
<li> ct.kernel.CTRealTimeDirector has been removed, the fix
is to use ct.kernel.CTDirector instead and to 
set the synchronizeToRealTime parameter to true.

<li> DDE: RcvrComparator renamed to ReceiverComparator

<li> actor.lib.Reader is now actor.lib.DoubleReader
 <br> The Reader class was
included in the Ptolemy II 1.0.1 download, but was not part of the 
default configuration.
</menu>

If you have developed your own actors under Ptolemy II 1.0.1 by
writing your own Java files, you should recompile all your java code with
the new release.  In theory, copying the .class files should work, but
recompiling is safer.

</body>
</html>
