<!-- DO NOT EDIT this file, it is created by running make.
     The file to edit is $PTII/doc/ptIIx.x.release.htm
     where x.x is the release number, then run 'make update'
     to update the derived files and check them in to cvs. -->
<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II 4.0-alpha Release Notes</title>

</head>
<body>
<!--whatsnew-->
<h2>Major Features that are new in Ptolemy II 4.0 </h2>
Below are new features that were not present in Ptolemy II 3.x
<menu>


<li> Classes and inheritance at the block diagram level
(Edward A. Lee)

<li> Lifecycle management components
(Yang Zhao)

<li> Unit system rework
(Rowland Johnson)

<li> Updates to Vergil, the user interface for building models
(Steve Neuendorffer, Edward A. Lee)
	<menu>
	<li> Decorative elements in block diagrams (boxes, etc.)
        <li> Much smaller XML files
	<li> Icon editor (and animated icons)
	<li> Expert mode parameter editing
	<li><CODE>vergil -help</CODE> lists available configurations.
	<li> Full-screen mode for use in presentations.
        </menu>

<li> Single Window Mode
(J.  Blanc (Thales),  B. Masson (Thales))

</menu>

<h2>Other Features that are new in Ptolemy II 4.0</h2>

<menu>
<li> <I>TBA</I>
</menu>

<h3>New Demonstrations</h3>


<menu>
<li> <I>Domain</I>
	<menu>
	<li> <I>Demo</I>
	</menu>

</menu>

<h3>New Actors</h3>

<menu>
<li> <a href="codeDoc/ptolemy/actor/lib/package-summary.html">ptolemy.actor.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/ArrayAverage.html">ArrayAverage</a>:
<dd>(Mark Oliver, Edward A. Lee)
An actor that outputs the average of the input array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayLevelCrossing.html">ArrayLevelCrossing</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
An actor that finds the index of the first item in an array to cross a specified threshold.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayPeakSearch.html">ArrayPeakSearch</a>:
<dd>(Edward A. Lee)
An actor that identifies peaks in an array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArraySort.html">ArraySort</a>:
<dd>(Mark Oliver, Edward A. Lee)
An actor that sorts the elements of an array.

<dt><a href="codeDoc/ptolemy/actor/lib/ArrayToElements.html">ArrayToElements</a>:
<dd>(Rachel Zhou)
An actor that disassemble an ArrayToken to a multiport output.

<dt><a href="codeDoc/ptolemy/actor/lib/ComputeHistogram.html">ComputeHistogram</a>:
<dd>(Steve Neuendorffer)
Compute a histogram of input data.

<dt><a href="codeDoc/ptolemy/actor/lib/ElementsToArray.html">ElementsToArray</a>:
<dd>(Rachel Zhou)
An actor that reads a token from each input channel to assemble an ArrayToken.

<dt><a href="codeDoc/ptolemy/actor/lib/Exec.html">Exec</a>:
<dd>(Christopher Hylands Brooks, Contributor: Edward A. Lee)
Execute a command in a subprocess.

<dt><a href="codeDoc/ptolemy/actor/lib/Exit.html">Exit</a>:
<dd>(Edward A. Lee)
A simple sink actor that consumes and discards input tokens and then calls System.exit() in wrapup.

<dt><a href="codeDoc/ptolemy/actor/lib/GradientAdaptiveLattice.html">GradientAdaptiveLattice</a>:
<dd>(Steve Neuendorffer)
An IIR filter actor that uses a direct form II implementation.

<dt><a href="codeDoc/ptolemy/actor/lib/SetVariable.html">SetVariable</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
Set the value of a variable contained by the container.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/comm/package-summary.html">ptolemy.actor.lib.comm</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/comm/Slicer.html">Slicer</a>:
<dd>(Rachel Zhou)
A Slicer, which functions as a decoder of the LineCoder of complex type.

<dt><a href="codeDoc/ptolemy/actor/lib/comm/TrellisDecoder.html">TrellisDecoder</a>:
<dd>(Rachel Zhou, contributor: Edward A. Lee)
Decode convolutional code with non-antipodal constellation.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/conversions/package-summary.html">ptolemy.actor.lib.conversions</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/conversions/StringToXML.html">StringToXML</a>:
<dd>(Yang Zhao)
An actor that outputs data read from a URL.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/hoc/package-summary.html">ptolemy.actor.lib.hoc</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/hoc/IterateOverArray.html">IterateOverArray</a>:
<dd>(Edward A. Lee, Steve Neuendorffer)
An actor that iterates a contained actor over input arrays.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MobileFunction.html">MobileFunction</a>:
<dd>(Yang Zhao)
An actor that apply dynamically defined functions to its input.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MobileModel.html">MobileModel</a>:
<dd>(Yang Zhao)
A composite actor that apply models dynamically.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/ModelReference.html">ModelReference</a>:
<dd>(Edward A. Lee)
An atomic actor that executes a model specified by a file or URL.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/ModelUtilities.html">ModelUtilities</a>:
<dd>(Yang Zhao)
Utilities that manipulate a model.

<dt><a href="codeDoc/ptolemy/actor/lib/hoc/MultiInstanceComposite.html">MultiInstanceComposite</a>:
<dd>(Zoltan Kemenczy, Sean Simmons, Research In Motion Limited)
A TypedCompositeActor that creates multiple instances of itself during the preinitialize phase of model execution.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/io/package-summary.html">ptolemy.actor.lib.io</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/io/DirectoryListing.html">DirectoryListing</a>:
<dd>( Christopher Hylands, Edward A. Lee)
An actor that produces an array that lists the contents of a directory.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/jai/package-summary.html">ptolemy.actor.lib.jai</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/jai/AdaptiveMedian.html">AdaptiveMedian</a>:
<dd>(James Yeh)
An actor that performs adaptive median filtering on a double matrix.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/ImageToJAI.html">ImageToJAI</a>:
<dd>(James Yeh)
Convert an ImageToken to a JAIImageToken.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIConstant.html">JAIConstant</a>:
<dd>(James Yeh, Steve Neuendorffer)
An actor that produces a JAIImageToken with constant bands.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIDataConvert.html">JAIDataConvert</a>:
<dd>(James Yeh)
An actor that changes the data format in a JAIImageToken.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/JAIPNGWriter.html">JAIPNGWriter</a>:
<dd>(James Yeh)
An actor that writes to a PNG file.

<dt><a href="codeDoc/ptolemy/actor/lib/jai/SaltAndPepper.html">SaltAndPepper</a>:
<dd>()
package ptolemy.actor.lib.jai;

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/javasound/package-summary.html">ptolemy.actor.lib.javasound</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/javasound/LiveSoundActor.html">LiveSoundActor</a>:
<dd>(Steve Neuendorffer)
An actor that reads in audio samples and plays the audio data.

</dl>

<li> <a href="codeDoc/ptolemy/actor/lib/jmf/package-summary.html">ptolemy.actor.lib.jmf</a>:

<dl>
<dt><a href="codeDoc/ptolemy/actor/lib/jmf/AudioPlayer.html">AudioPlayer</a>:
<dd>(James Yeh)
An actor that plays a DataSource containing a music file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/MovieReader.html">MovieReader</a>:
<dd>(James Yeh)
An actor that outputs frames from a video file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/MovieWriter.html">MovieWriter</a>:
<dd>(James Yeh)
An actor that writes frames to a video file.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/StreamLoader.html">StreamLoader</a>:
<dd>(James Yeh)
Load a datasource from a URL.

<dt><a href="codeDoc/ptolemy/actor/lib/jmf/VideoPlayer.html">VideoPlayer</a>:
<dd>(James Yeh)
An actor that displays a AVI, Quicktime or MPEG video file.

</dl>

<li>  <a href="codeDoc/ptolemy/actor/lib/security/package-summary.html">ptolemy.actor.lib.security</a>:

<dl>
<dt> Java Cryptography Actors
<dd> (Christopher Hylands Brooks, Rakesh Reddy)

</dl>


<li> <a href="codeDoc/ptolemy/domains/gr/lib/package-summary.html">ptolemy.domains.gr.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/gr/lib/Box2D.html">Box2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Circle2D.html">Circle2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Ellipse2D.html">Ellipse2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/FigureInteractor.html">FigureInteractor</a>:
<dd>(Ismael M. Sarmiento)
Listen for and handle events on Diva figures.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/GRShape2D.html">GRShape2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
An abstract base class for shaded GR Actors

<dt><a href="codeDoc/ptolemy/domains/gr/lib/GRTransform2D.html">GRTransform2D</a>:
<dd>(Steve Neuendorffer)
An abstract base class for transforming input 3D shape

<dt><a href="codeDoc/ptolemy/domains/gr/lib/IconViewScreen3D.html">IconViewScreen3D</a>:
<dd>(Steve Neuendorffer)
A GR scene viewer

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Image2D.html">Image2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a figure from a user specified image file.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Line2D.html">Line2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
Create a line with the endpoints provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Rectangle2D.html">Rectangle2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/RectangularFigure2D.html">RectangularFigure2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Create a rectangle, rounded rectangle, or ellipse with the size and position specified by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Rotate2D.html">Rotate2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Rotate a two-dimensional figure based on the angle and anchor point provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Scale2D.html">Scale2D</a>:
<dd>(Ismael M. Sarmiento, Steve Neuendorffer)
Scale a two-dimensional figure based on the size provided by the user.

<dt><a href="codeDoc/ptolemy/domains/gr/lib/Translate2D.html">Translate2D</a>:
<dd>(Steve Neuendorffer)
An actor that translates the input 3D shape

<dt><a href="codeDoc/ptolemy/domains/gr/lib/ViewScreen2D.html">ViewScreen2D</a>:
<dd>(Steve Neuendorffer, Ismael M. Sarmiento)
A GR scene viewer

</dl>

<li> <a href="codeDoc/ptolemy/domains/sdf/lib/package-summary.html">ptolemy.domains.sdf.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/sdf/lib/CountTrues.html">CountTrues</a>:
<dd>(Steve Neuendorffer)
An actor that counts true inputs.

</dl>

<li> <a href="codeDoc/ptolemy/domains/sr/lib/package-summary.html">ptolemy.domains.sr.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/sr/lib/NonStrictTokenToExpression.html">NonStrictTokenToExpression</a>:
<dd>(Haiyang Zheng)
A non-strict actor that converts tokens into expressions.

</dl>

<li> <a href="codeDoc/ptolemy/domains/tm/lib/package-summary.html">ptolemy.domains.tm.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/domains/tm/lib/PeriodicTrigger.html">PeriodicTrigger</a>:
<dd>(Edward A. Lee)
A source that emits a trigger signal periodically.

</dl>

<li> <a href="codeDoc/ptolemy/vergil/actor/lib/package-summary.html">ptolemy.vergil.actor.lib</a>:

<dl>
<dt><a href="codeDoc/ptolemy/vergil/actor/lib/VisualModelReference.html">VisualModelReference</a>:
<dd>(Edward A. Lee)
An atomic actor that executes a model specified by a file or URL.

</dl>
</menu>

<h2>Backward Compatibility</h2>


Most models developed under Ptolemy II 1.0.1,
2.0.1, 3.0.2  or HyVisual 2.2-beta should run under Ptolemy II 4.0
The MoMLParser includes a list of backward
compatibility filters that make certain changes on models
when read, handling such issues as actors being moved or renamed
and parameter names being changed.
The filters themselves are defined in
<a href="codeDoc/ptolemy/moml/filter/package-summary.html">
ptolemy.moml.filter</a>.
If you have developed your own actors under Ptolemy II 2.0.1 by
writing your own Java files, you should recompile all your java code with
the new release.  In theory, copying the .class files should work, but
recompiling is safer.
<p>
Not all changes can be handled automatically, since
some have semantic content. We begin with a description
of the changes that are not handled, followed by a description
of changes that are handled.

<h3>Backward compatible issues that are not handled automatically</h3>

<menu>
<li> The FileWriter and DoubleReader actors have been removed, use
the LineWriter or ExpressionWriter actors instead of FileWriter
and use the LineReader and ExpressionReader actors instead of
DoubleReader.
<li> In the CT (continuous-time) domain, instances of Clock and
TriggeredClock very likely should be manually changed to
ContinuousClock and TriggeredContinuousClock. The reason for this is that
we have made progress on the semantics of signals with discontinuities
and have improved the software implementation.
We created a new set of clocks for the CT domain.
ContinuousClock and TriggeredContinuousClock generate piecewise
constant signals with discontinuities.  The discontinuities
are correctly handled regardless of step sizes, and threshold
crossing detectors properly identify discrete transitions
across the threshold.
In principle, Clock and TriggeredClock can still be used in
CT models, e.g. to generate a sequence of events, but it is better to use
the EventSource actor for this purpose.

<li> In hybrid systems models (CT + FSM), the signal types for
modal models may not be inferred as expected.
If a modal model has both continuous and discrete signal
types at its inputs, it may need manual adjustment of the output signal
types. To do this, right click an output port and
add a "signalType" parameter; then set the value of the parameter
to "CONTINUOUS" or "DISCRETE" depending on your needs.

<li> AudioReader now uses a FileParameter instead of a string valued
parameter.  The name of this parameter has changed from
sourceURL to fileOrURL to conform with LineReader and ExpressionReader.

<li> Longs are now printed with a trailing capital <CODE>L</CODE>
character.

<li> We have improved the way that the SDF (synchronous dataflow) domain
implements rate propagation. Previously, SDF would infer the rates of
ports of an SDF model, and create parameters named
"tokenConsumptionRate" "tokenInitProduction" and
"tokenConsumptionRate". However, this has two bad side effects:
<ol>
<li> 
 If a port has these parameters already, then the SDF scheduler
   overrides them.  This may not be correct.
<li> If a port has these parameters already, then running a model
   will mark it dirty, resulting in a prompt to save the model
   on exit.
</ol>
We've changed this so that it sets these values only if the parameters
do not exist already, and stores them in new attributes called
"_tokenConsumptionRate" "_tokenInitProduction" and
"_tokenConsumptionRate". These are transient (instances
of Variable rather than
Parameter), so they will not trigger a prompt to save.
</menu>

<h3>Backward compatible issues that are handled automatically</h3>

<menu>
<li>ptolemy.moml.filter.AddEditorFactory:
If a parameter has a <code>_location</code>, then
add a VisibleParameterEditorFactory named <code>_editorFactory</code>.
This supports double clicking on visible parameters.

<li>ptolemy.moml.filter.AddIcon: Add specialized icons that display
in Vergil the value of one of the parameters or certain actors.
The affected actors are:
        <menu>
	<li>ptolemy.actor.lib.Const
	<li>ptolemy.actor.lib.MathFunction
	<li>ptolemy.actor.lib.TrigFunction
	<li>ptolemy.actor.lib.Scale
	<li>ptolemy.actor.lib.Expression
	</menu>

<li>ptolemy.moml.filter.ClassChanges:
change class names that have been renamed or moved to a different package.
The changes are:
        <menu>
	<li>ptolemy.kernel.util.VersionAttribute	 -&gt; ptolemy.kernel.attributes.VersionAttribute
	<li>ptolemy.moml.Location	 -&gt; ptolemy.kernel.util.Location
	<li>ptolemy.actor.lib.comm.SerialComm	 -&gt; ptolemy.actor.lib.io.comm.SerialComm
        </menu>

<li>ptolemy.moml.filter.HideAnnotationNames: If an annotation name ends with
'annotation1', then add <code>_hideName</code> if necessary.
This prevents labels from appearing above visible parameters in Vergil.

<li>ptolemy.moml.filter.ParameterNameChanges: Update any Parameter names
that have been changed.
Below are the actors that are affected, along with the Parameter name 
and the new name:	
       <menu>
       <li>ptolemy.domains.pn.kernel.PNDirector
	<br>&nbsp;&nbsp;	Initial_queue_capacity	 -&gt; initialQueueCapacity
       </menu>

<li>ptolemy.moml.filter.PortNameChanges:
Update any actor port names that have been changed.
Below are the actors that are affected, along
with the old port name and the new port name:
        <menu>
	<li>ptolemy.actor.lib.conversions.CartesianToComplex
	 <br>&nbsp;&nbsp;	imag	 -&gt; y
	 <br>&nbsp;&nbsp;	real	 -&gt; x
	<li>ptolemy.actor.lib.Sleep
	 <br>&nbsp;&nbsp;	delay	 -&gt; sleepTime
	<li>ptolemy.actor.lib.conversions.ComplexToCartesian
	 <br>&nbsp;&nbsp;	imag	 -&gt; y
	 <br>&nbsp;&nbsp;	real	 -&gt; x
        </menu>

<li>ptolemy.moml.filter.PropertyClassChanges:
Update any actor port class names that have been changed.
Below are the actors that are affected, along with the port name
and the new classname:
        <menu>
	<li>ptolemy.domains.sdf.lib.vq.HTVQEncode
	 <br>&nbsp;&nbsp;	input	 -&gt; ptolemy.actor.TypedIOPort
	 <br>&nbsp;&nbsp;	output	 -&gt; ptolemy.actor.TypedIOPort
	<li>ptolemy.domains.sdf.lib.vq.VQDecode
	 <br>&nbsp;&nbsp;	input	 -&gt; ptolemy.actor.TypedIOPort
	 <br>&nbsp;&nbsp;	output	 -&gt; ptolemy.actor.TypedIOPort
	<li>ptolemy.domains.sdf.lib.vq.ImagePartition
	 <br>&nbsp;&nbsp;	input	 -&gt; ptolemy.actor.TypedIOPort
	 <br>&nbsp;&nbsp;	output	 -&gt; ptolemy.actor.TypedIOPort
	<li>ptolemy.domains.sdf.lib.vq.ImageUnpartition
	 <br>&nbsp;&nbsp;	input	 -&gt; ptolemy.actor.TypedIOPort
	 <br>&nbsp;&nbsp;	output	 -&gt; ptolemy.actor.TypedIOPort
	<li>ptolemy.actor.lib.Expression
	 <br>&nbsp;&nbsp;	expression	 -&gt; ptolemy.kernel.util.StringAttribute
        </menu>
</menu>

</body>
</html>
