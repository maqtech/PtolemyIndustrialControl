<!-- $Id$ -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>Ptolemy II</title>
<link href="default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1>The Ptolemy Project - Ptolemy II 1.0 Beta</h1>
<table content="text/html; charset=iso-8859-1" http-equiv="Content-Type">
<tr>
<td>
<img vspace="6" align="left" src="img/PtolemyIISmall.gif" alt="Claudius Ptolemy">
</td>
<td>
<p>
Ptolemy II is a software framework developed as part of the Ptolemy project.
It is a Java-based component assembly framework with a graphical
user interface called Vergil.  Vergil itself is a component assembly
defined in Ptolemy II.
</p>
<p>
The Ptolemy project studies modeling, simulation, and design of
concurrent, real-time, embedded systems. The focus is on assembly of
concurrent components. The key underlying principle in the project is
the use of well-defined <i>models of computation</i> that govern the
interactions between components. A major problem area being addressed is
the use of heterogeneous mixtures of models of computation.
</p>
<p>
The <a href="http://ptolemy.eecs.berkeley.edu/index.html" target="_top">Ptolemy Project web page</a>
contains much more information about the
project. The work is conducted in the
<a href="http://www.eecs.berkeley.edu/" target="_top">Department of Electrical Engineering and Computer Sciences</a>
of the
<a href="http://www.berkeley.edu/" target="_top">University of California at Berkeley</a>.
The project is directed by
<a href="http://ptolemy.eecs.berkeley.edu/~eal/index.html" target="_top">Prof. Edward Lee</a>.
The project is named after
<a href="http://ptolemy.eecs.berkeley.edu/people/ptolemy.htm" target="_top">Claudius Ptolemaeus</a>,
the second century Greek astronomer, mathematician, and geographer.
</p>
</table>
<p>
Ptolemy II includes a growing suite of <i>domains</i>, each of which
realizes a model of computation.  It also includes a component library,
in which most components are <i>domain polymorphic</i>, in that they
can operate in several of the domains.  Most are also <i>data polymorphic</i>,
in that they operate on several data types.
The domains that have been implemented are listed below.
Some of these are preliminary and/or experimental,
as indicated below.
<ul>
<li> <a href="../ptolemy/domains/csp/doc/body.htm" target="body">CSP</a>:
	 communicating sequential processes,
<li> <a href="../ptolemy/domains/ct/doc/body.htm" target="body">CT</a>:
	continuous-time modeling,
<li> <a href="../ptolemy/domains/de/doc/body.htm" target="body">DE</a>:
	discrete-event modeling,
<li> <a href="../ptolemy/domains/dde/doc/body.htm" target="body">DDE</a>:
	distributed discrete events (experimental),
<li> <a href="../ptolemy/domains/dt/doc/body.htm" target="body">DT</a>:
	discrete time,
<li> <a href="../ptolemy/domains/fsm/doc/body.htm" target="body">FSM</a>:
	 finite state machines,
<li> <a href="../ptolemy/domains/giotto/doc/body.htm" target="body">Giotto</a>:
	periodic time-driven (experimental),
<li> <a href="../ptolemy/domains/gr/doc/body.htm" target="body">GR</a>:
	3-D graphics (experimental),
<li> <a href="../ptolemy/domains/pn/doc/body.htm" target="body">PN</a>:
	process networks, and
<li> <a href="../ptolemy/domains/sdf/doc/body.htm" target="body">SDF</a>:
	synchronous dataflow.
</ul>
</body>
</html>
