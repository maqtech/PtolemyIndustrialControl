<!-- $Id$ -->
<html>
<head>
<title>Ptolemy II Installation</title>
</head>
<body bgcolor="#faf0e6">
<h1>Ptolemy II Installation</h1>
See the <a href="ptII1.0.release.htm">Ptolemy II 1.0 release notes</a>
for details about this release.
<h2>Ptiny</h2>
<p>Ptolemy II is available in two versions:
   <menu>
   <li> Ptiny - which can be used to build models in 
   CT, DE, FSM, PN and SDF using built-in actors. 
   <li> Full - which includes other domains and 
   support for developing custom actors.
   </menu>
The Ptiny version is primarily for the Windows platform, it does not include
a <a href="troubleshooting.htm#startVergil">start up script for Vergil</a>
for non-Windows platforms.  Installation instructions for the Ptiny
version can be found online at
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII" target="_top"><code>http://ptolemy.eecs.berkeley.edu/ptolemyII</code></a>.

<p>The Full version is for Windows and Unix platforms.  The instructions
on this page concern installing the Full version.

<h2>Instructions for the impatient</h2>

<ol>

<li> Install JDK1.3 and have the <code>make</code> command available.

<li> Set the PTII environment variable to the top level Ptolemy directory,
that is the directory above this directory
	<dl>
	<dt> bash
	<dd> <pre>
PTII=c:\\Program\ Files\\Ptolemy\\Ptolemy\ II\ 1.0 
export PTII
</pre>

<dt> csh
<dd> <pre>
setenv PTII /users/yourname/ptII
</pre>

</dl>

<li> Run configure
<pre>
cd "$PTII"
rm -f config.*
./configure
</pre>

<li> Ptolemy is shipped with .class and .jar files, but the
$PTII/bin/scripts needs to be updated.  The safest thing to do is 
to run make install on the entire tree:
<pre>
make install
</pre>


<li> Start vergil
<pre>
$PTII/bin/vergil
</pre>


</ol>


<h2>Requirements</h2>
<h3>The PTII variable</h3>
The PTII environment variable is used to refer to the directory
that contains the Ptolemy II tree.
Setting <CODE>PTII</CODE> is covered in
the <a href="#Unix">Unix</a> and <a href="#Windows">Windows</a>
sections below.

<h3><a name="java">Java</a></h3>
Ptolemy II has been developed under JDK1.3.0, which is available from
<a href="http://java.sun.com/j2se/1.3/" target="_top"><CODE>http://java.sun.com/j2se/1.3/</CODE></a>

<p>Ptolemy II has also been successfully built and run with JDK1.2.2.
We recommend JDK1.3 over JDK1.2.2.  If you have problems with under
JDK1.2.2, please upgrade to JDK1.3.

<h3><a name="Plugin">Java Plug-in</a></h3>
 <!-- Note: the plug-in is called "The Java Plug-in", not "The JDK Plugin"-->
The applet tags have been configured to require JDK1.3, so to run the applets
in Netscape 4.7 or Internet Explorer 5.0 under Windows, you will need to use
the <a href="http://www.javasoft.com/products/plugin/" target="_top">Java Plug-in</a>
 <p>Currently, the Java Plug-in 1.3 is included in the JDK1.3 download for
Windows.
 <p>If you are running under Solaris 2.6 or 2.7, you can
<a href="http://www.sun.com/solaris/netscape/" target="_top">download</a>
a separate plug-in or a complete Netscape installation.
 <p>If your platform is not supported by the plug-in, you can run
the applets with the JDK <CODE>appletviewer</CODE> command.
 <p>See the <a href="troubleshooting.htm#plugin">Plug-in section of the Ptolemy II Troubleshooting guide</a> for details.

<h2>Optional packages that are shipped with Ptolemy</h2>

<h3><a name="Jacl">Jacl</a></h3>
Jacl is a 100% Java implementation of Tcl that we use for testing Ptolemy II.

Each Java directory contains a <CODE>test</CODE> subdirectory that contains
Tcl files that use Jacl to test the Ptolemy II Java code.

 <p>Jacl is <B>only</B> necessary if you are planning on running
the Ptolemy II test suite.

 <p>We ship a customized version of Jacl called Ptjacl.
The primary difference between Ptjacl and Jacl1.1 is that Ptjacl
is shipped as one jar file.

 <p>The Ptjacl jar file at <CODE>$PTII/lib/ptjacl.jar</CODE>
is shipped with Ptolemy II.

 <p>For more information about Jacl and Tcl Blend, see
<menu>
<li> <a href="http://www.scriptics.com/software/java.html" target="_top">Scriptics Jacl and Tcl Blend page</a>.

<li> <a href="http://ptolemy.eecs.berkeley.edu/~cxh/java" target="_top">Christopher Hylands' Java Page.</a>

<li> <a href="coding/tcljava.htm"><CODE>java::</CODE> man page</a>
</menu>


<h3><a name="Diva">Diva</a></h3>
Diva is a visualization package used by some of the demos.
 <p>The Ptolemy II distribution include <CODE>$PTII/lib/diva.jar</CODE>.
 <p>The Diva sources and documentation are available at
<a href="http://www.gigascale.org/diva" target="_top"><CODE>http://www.gigascale.org/diva</CODE></a>.


<h2>Optional packages not shipped with Ptolemy</h2>

<h3>Java3d</h3>
The 
<a href="../ptolemy/domains/gr/doc/body.htm" target="body">3-D graphics (GR)</a>
domain demos require Java3d, which can be installed from
<a href="http://java.sun.com/products/java-media/3D/" target="_top"><CODE>http://java.sun.com/products/java-media/3D/</CODE></a>.

You need not install Java3d if you are not planning on using GR domain.

<h3><a name="javacc">JavaCC</a></h3>
JavaCC is the Java Compiler Compiler, which similar to <CODE>yacc</CODE>
and <CODE>lex</CODE>.
 <p>JavaCC is only necessary if you modify the expression parser in
<CODE>ptolemy/data/expr</CODE>.
 <p>As of 1/00, Ptolemy II was using JavaCC 1.1

 <p>To install JavaCC, follow the instructions below
<ol>
<li> Download JavaCC1_1.class from
<a href="http://www.sun.com/forte/ffj/resources/contributedcontent.html" target="_top"><CODE>http://www.sun.com/forte/ffj/resources/contributedcontent.html</CODE></a>

<li> Set your CLASSPATH to <CODE>.</CODE>
<pre>
setenv CLASSPATH .
</pre>

<li> cd to the directory where the JavaCC <CODE>.class</CODE> file
was downloaded to.


<li> Run <CODE>java</CODE> on the file.  Note that you should
<B>not</B> include the <CODE>.class</CODE> suffix in the command line.
<pre>
java Java1_1
</pre>

<li> <CODE>$PTII/configure</CODE> looks for JavaCC in
the <CODE>$PTII/vendors/sun/JavaCC</CODE> directory.  If
<CODE>configure</CODE> does not find JavaCC there, then it looks
for the <CODE>javacc</CODE> binary your path.  You may also
use the <CODE>--with-javacc=DIR</CODE> <CODE>configure</CODE> argument.
 <br>The best place to install JavaCC is
<CODE>$PTII/vendors/sun/javaCC</CODE>

</ol>


<h2>Rebuilding</h2>
The Ptolemy II distribution includes the compiled Java <CODE>.class</CODE>
files and the <CODE>javadoc</CODE> output, so it is not
necessary to 'build' or run <CODE>make</CODE> to use Ptolemy II.

<h3><a name="Unix">Unix</a></h3>
 If you would like to rebuild from the Java sources under Unix,
you should set the <CODE>PTII</CODE> environment variable in your
environment.  Under C Shell:
<pre>
setenv PTII /users/ptII
</pre>
You may want to add that line to your <CODE>~/.cshrc</CODE> file.

 <p>To configure the makefiles,
run <CODE>$PTII/configure</CODE>, which is
a GNU autoconf script that looks for your Java compiler, reads in
<CODE>$PTII/mk/ptII.mk.in</CODE> and generates
<CODE>$PTII/mk/ptII.mk</CODE>:
<pre>
cd "$PTII"
rm -f config.*
./configure
</pre>
<CODE>$PTII/configure</CODE> creates <CODE>$PTII/config.status</CODE>
and <CODE>$PTII/config.cache</CODE>.  If you would like to reconfigure
Ptolemy II to use a different Java compiler, set your path so
that the appropriate compiler is first in your path, then
remove <CODE>config.status</CODE> and rerun configure.  You
may also use the <CODE>--with-java=</CODE> configure command line
argument.  For more information, run <CODE>configure -help</CODE>.


 <p>To build:
<pre>
make
</pre>

<h3><a name="Windows">Windows</a></h3>
Ptolemy II was developed under Windows 2000.  We have successfully
installed Ptolemy II under Windows '98, but if you have problems under 
Windows '98 we recommend upgrading Windows 2000.

<p>To build Ptolemy II under Windows 2000:
<ol>
<li>Install JDK1.3 from
<a href="http://java.sun.com/j2se/1.3/" target="_top"><CODE>http://java.sun.com/j2se/1.3/</CODE></a>

<li> Install the Cygwin toolkit from
<a href="http://sources.redhat.com/cygwin/" target="_top"><CODE>http://sources.redhat.com/cygwin/</CODE></a>
 <p>Complete installation instructions can be found at
<a href="http://sources.redhat.com/cygwin/faq" target="_top"><CODE>http://sources.redhat.com/cygwin/faq</CODE></a>, below is a summary:
 <ol>
 <li> Create an empty directory

 <li> Download <a href="http://sources.redhat.com/cygwin/setup.exe"><CODE>http://sources.redhat.com/cygwin/setup.exe</CODE></a> and save it in the empty directory

 <li> Click on <CODE>setup</CODE>

 <li> Select Install from Internet

 <li> Use the default Local Package Directory, which should be the
 directory you created above.

 <li> Select <CODE>c:\cygwin</CODE> as your install root directory.

 <li> Select 'Default Text File Type' of DOS.

 <li> If you are not behind a firewall, click on direct connection.

 <li> Select a nearby mirror.

 <li> You will be presented with a list of packages to install.
  <br>A complete installation takes at least 75Mb.

  <p>At the minimum, select the packages below, which is roughly a
  3Mb download
	that expands into an 8.7Mb installation.
	<ul>
	<li> ash -  For <CODE>/bin/sh</CODE>
	<li> bash
	<li> cygwin
	<li> diff - Configure uses <CODE>cmp</CODE>
	<li> fileutils - For <CODE>ls</CODE>
	<li> grep - Used by configure
	<li> make
	<li> sed - Needed by config.status, which is created by configure
	<li> shellutils - For <CODE>basename</CODE>
	<li> textutils - For <CODE>cat</CODE> and <CODE>tr</CODE>
	</ul>

	 <p> If you are serious about development you may also want:
	<ul>

	<li> autoconf - requires gawk, grep, m4
	<li> findutils
	<li> gzip
	<li> less
	<li> tar
	<li> Rebuilding in java/lang/ptbyacc requires gcc and w32api
	</ul>

</ol>

<li> <a name="settingptII">Set the value of the <CODE>PTII</CODE> environment variable</a>
to the
name of the directory where Ptolemy II is installed.
Under Windows 2000, you set the environment variable via
the Environment tab of the System control panel
(<CODE>Start Menu </CODE> -&gt; <CODE>Settings</CODE> -&gt;
<CODE>Control Panels</CODE> -&gt; <CODE>System</CODE> -&gt;
<CODE>Advanced</CODE> -&gt; <CODE>Environment Variables</CODE>
 <p>The PTII value should be set using back slashes so that javac
gets the right path if you've installed Cygwin in a location
other than <CODE>C:\</CODE> such as <CODE>C:\Cygwin</CODE>.

<BLOCKQUOTE>
If you have installed Cygwin in c:/cygwin, and your Ptolemy II installation
is in a directory outside of the c:/cygwin tree, then Cygwin may
change your PTII variable to include "/cygdrive/c".  This
will cause problems with non-Cygwin tools like javac that do
not understand /cygdrive/c
</BLOCKQUOTE>


 <p>An example PTII value would be:
<pre>
c:\users\yourname\ptII
</pre>


<li> In the Environment tab, you should also set your path to include the location of the JDK bin directory (i.e. <CODE>C:\jdk1.3\bin</CODE>)

 <p>When you run cygwin.bat, your path
should be set to include the Cygwin tools.  You can test this
by typing <CODE>type make</CODE>, which should return
<pre>
make is /usr/bin/make
</pre>
If <CODE>make</CODE> cannot be found, then
you may also need to add the Cygwin bin directory
<CODE>c:\cygwin\usr\bin</CODE>
to your path.

<li> Optional: Install JavaCC, see the instructions
<a href="#javacc">above</a>.


<li> Start up Cygwin <CODE>bash</CODE>, and cd to the Ptolemy II directory.

<li> Run <CODE>rm -f config.*</CODE>
<li> Run <CODE>./configure</CODE>

<li> Run <CODE>make</CODE>
</ol>


 <p>Currently, Ptolemy II does not support building via Microsoft
Visual Studio <CODE>nmake</CODE> under Windows.  Also, we have not
tried building Ptolemy II under Windows '95 or Windows '98.

 <p>The instructions for setting up a parallel tree using CVS can be found in
<a href="coding/develsetup.htm"><CODE>$PTII/doc/coding/develsetup</CODE>.</a>


<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
