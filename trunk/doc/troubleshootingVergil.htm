<!-- DO NOT EDIT this file, it is created by running make.
     The file to edit is $PTII/doc/ptIIx.x.release.htm
     where x.x is the release number, then run 'make update'
     to update the derived files and check them in to cvs. -->
<!-- $Id$ -->
<html>
<head>
<title>Troubleshooting</title>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</head>
<body>
<!--vergilDocs-->
<h2><a name="vergil">Troubleshooting Vergil</a></h2>
<dl>
<dt> How do I start Vergil by hand?
<dd> Vergil uses the following jar files
	<ul>
	<li> <CODE>./ptolemy/ptsupport.jar</CODE>
	<li> <CODE>./ptolemy/vergil/vergil.jar</CODE>
	<li> <CODE>./ptolemy/lib/diva.jar</CODE>
	<li> <CODE>./ptolemy/domains/domains.jar</CODE>
	<li> <CODE>./ptolemy/copernicus/copernicus.jar</CODE>
	</ul>
The directory where Ptolemy II is installed should also be in the classpath.

 <p>To start Vergil by hand, try starting up by cd'ing to where the
release is installed and typing in the following (all on one line)

 <!-- Split this into multiple lines so that the display does not
have a horizontal scroll bar because of the length of the line. -->
<pre>
java -classpath ".;./ptolemy/ptsupport.jar;\
./ptolemy/vergil/vergil.jar;./lib/diva.jar;\
./ptolemy/copernicus/copernicus.jar;\
./ptolemy/domains/domains.jar"\
 ptolemy.vergil.VergilApplication
</pre>

<dt> The user interface appears to be frozen, but windows are redrawn.

<dd> A modal dialog may be open.  Unfortunately, these dialogs do not
appear in the task bar on windows systems, so the only way to find
them is to put windows in the background until they appear.  You can
do this by repeatedly hitting Alt-Escape.</li>

<dt> My model hangs, failing to make progress.

<dd> In the DE domain, if an actor has input tokens that it fails to
consume when it is fired, then it the director will continue to fire
it repeatedly until those tokens are consumed.  Actors in the DE
domain must consume pending input tokens.

<dt> Ptolemy seems to consume more and more memory after opening and closing several demos.

<dd> 
The drag and drop mechanism has contained many memory leaks in older versions
of Sun's JDK.   The leak occurs because there are references internal to the
platform drag and drop system that do not allow windows using drag and drop 
to be properly garbage collected after they are no longer visible. 
If you run into problems, we strongly suggest upgrading to the
newest version of Java.  We have seen memory leaks of this sort in versions
of Java prior to 1.3.1 beta. 

</dl>
</body>
</html>
