<!-- $Id$ -->
<html>
<head>
<title>Ptolemy II 1.0 Release Notes</title>
</head>
<body bgcolor="#faf0e6">
<h1>Ptolemy II 1.0 Release Notes</h1>
Ptolemy II 1.0 is a release of the Ptolemy II Java classes
and the Ptolemy II design document

 <p>Ptolemy II 1.0 includes Vergil, a graphical user interface for
developing models. 

 <p>The design document describes the Ptolemy II design and the implementation
of the Java classes.

<p> The Ptolemy design document is shipped with Ptolemy II 1.0, it can be found
in <a href="design/toc.htm" target="toc">$PTII/doc/design</a>.

The most recent copy of the Ptolemy II design document can be
found online at
<a href="http://ptolemy.eecs.berkeley.edu/ptolemyII/doc/design.html"><CODE>http://ptolemy.eecs.berkeley.edu/ptolemyII/doc/design.html</CODE></a>


<h2>Major Features that are new in Ptolemy 1.0 </h2>
<menu>

<li> Vergil - the Ptolemy II GUI
(Steve Neuendorffer and Edward A. Lee)

<li> CORBA/Jini work
<li> Giotto Domain

<li> GR Domain

<li> DT Domain

<li> Code Generation of SDF models
(Jeff Tsay and Christopher Hylands)

</menu>

<h2>Platforms</h2>

The core of Ptolemy II 1.0 is 100% Java, so it should work on any
platform that has JDK1.2 or JDK1.3

 <p>We developed Ptolemy II 1.0 under Solaris 2.5.1 and Windows 2000 sr1
and with JDK1.2.2 and JDK1.3.0. 

<p> Ptolemy II 1.0 will not compile under JDK1.1.x.

 <p>See the <a href="install.htm#Jacl">Jacl</a> section of
the installation page for information about the Ptolemy II test suite

<h2>Limitations</h2>
Version 1.0 has a number of limitations.
<h3>Release Limitations</h3>
<menu>
<li> The gzipped tar file that contains the Ptolemy II distribution
 <B>requires</B> GNU tar or WinZip.  Solaris 2.5.1 tar will fail to
untar this file with a checksum error because the pathnames are longer
than 100 characters.  If you do not have GNU tar, you can obtain
source and selected binaries from <a
href="ftp://ptolemy.eecs.berkeley.edu/pub/gnu"><CODE>ftp://ptolemy.eecs.berkeley.edu/pub/gnu</CODE></a>.
</menu>


<h3>Limitations in the Actor Libraries</h3>
<menu>
<li>The actor library is far from complete.
<li>The Expression actor does not properly propagate type constraints in
an expression-dependent fashion. It works correctly for double-valued
expressions of double-valued inputs.

<li> The readFile() parameter function does not work with applets.

</menu>

<h3>Limitations in the User Interface</h3>
Version 1.0 of Ptolemy II includes the first graphical user
interface for Ptolemy II.  This UI is preliminary, and is made
up mostly of code that is rated "red", meaning that both the APIs
and the implementations are likely to change.
There are quite a few limitations.
<menu>
<li>No undo mechanism.
<li>Incomplete printing support.
<li>Weak support for multiports in the graph editor.
<li>It is difficult to control wire routing.
<li>Cannot have more than one vertex in a connection.
<li>No mechanism to set the width of a relation.
<li>The integrated web browser is not a full-featured browser.
<li>No snap-to-grid.
<li>Icon editor not yet integrated.
<li>Debugger not yet integrated.
<li>FSM editor is not yet useful.
<li>It is difficult to add actors to the libraries.
<li>No dynamic class loading.
</menu>

<h3>Missing Domains</h3>
<menu>
<li>Synchronous/reactive.
<li>Boolean and integer dataflow.
<li>Dynamic dataflow
</menu>

<h3><a name="CodeGenerationBugs">Code Generation Bugs</a></h3>
<dl>

<dt> Under JDK1.2.2 you may see <CODE>java.lang.OutOfMemoryError</CODE>
<dd> The workaround is to upgrade to JDK1.3

<dt> The name CG_Main is hardwired in.
sdf.codegen.SDFCodeGenerator uses "CG_Main".
sdf.codegen.SDFActorTransformerVisitor._portFieldDeclNode()
also uses "CG_Main" in a few places, so I have to figure out a way
to pass the model name via a visitor so that _portFieldDeclNode() can
get the name.
<dd> 


<dt> zip and jar files are not handled properly
<dd> Running codegen fails in the nightly build because the code coverage
tools are in a zip file and codegen does not look inside the zip
file.  The fix is to modify SearchPath and 
ASTReflect.lookupClass so that they will handle zip and jar files in
the classpath

<dt> Duplicate directories with the same name cause problems
<dd> If there are two directories
named 'cg', then the codegenerator has a hard time 
resolving classes in the cg package.

To replicate the bug, do:
<pre>
	cd $PTII/ptolemy/lang/java
	rm -rf ~/ptII/cg cg
	make CGROOT=. ramp
	make ramp

</pre>

The workaround is to only have one cg directory
and remove the other.

</dl>

<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
