<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="RosSubscriber" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[420.0, 25.0]">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="A simple demo for RosSubscriber accesor. This accessor connects to a rosbridge server, &#10;that is running on a ROS sytem, and subscribes to a ROS topic in that system. &#10;&#10;The accessor takes in the following 3 parameters:&#10;1. address (string) of rosbridge, eg: &quot;localhost&quot; or &quot;127.0.0.1&quot;&#10;2. port (number) of rosbridge, eg: 9090&#10;3. topic (string), eg: /noise (don't enclose in quotation marks &quot;&quot; !)&#10;&#10;It displays the JSON message it receives.&#10;&#10;To run the demo, run the following commands on a ROS system. &#10;&#10;&#10;&#10;&#10;&#10;&#10;This publishes &quot;hello world&quot; to the /noise topic. You should see the RosSubscriber &#10;output &quot;hello world&quot;&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[335.0, 190.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={563, 80, 852, 848}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[638, 759]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000016">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{536.4387376237628, 332.51933787128723}">
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
        </property>
        <property name="fontFamily" class="ptolemy.data.expr.StringParameter" value="Monospaced">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="$roscore&#10;$roslaunch rosbridge_server rosbridge_websocket.launch&#10;$rostopic pub noise std_msgs/String &quot;hello world&quot;&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[350.0, 385.0]">
        </property>
    </property>
    <entity name="MessageOnTopic" class="ptolemy.actor.lib.gui.Display">
        <display name="MessageOnTopic&#10;"/>
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={70, 465, 1370, 406}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[1370, 357]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[635.0, 145.0]">
        </property>
    </entity>
    <entity name="RosSubscriber3" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** This accessor subscribes to a ROS topic.&lt;br&gt;&#10; *  It communicates to ROS through the rosbridge web socket, and extends the &#10; *  WebSocketClient accessor to do so. &#10; *  It has a 'topic' parameter, that must be prefixed with a '/' eg: '/noise'.&lt;br&gt; &#10; *  The other parameters configure how the data is to be received according to the rosbridge specification:&#10; *  https://github.com/RobotWebTools/rosbridge_suite/blob/develop/ROSBRIDGE_PROTOCOL.md#344-subscribe&#10; *&#10; *  @accessor RosSubscriber&#10; *  @parameter {string} server The IP address or domain name of server.&#10; *  @parameter {number} port The port that the web socket listens to.&#10; *  @parameter {string} topic The ROS topic to subscribe to.&#10; *  @parameter {int} throttle_rate The minimum amount of time (in ms) that must elapse between messages sent. Defaults to 0.&#10; *  @parameter {int} queue_length The ROS size of the queue to buffer messages. Messages are buffered as a result of the throttle_rate. Defaults to 1.&#10; *  @parameter {int} fragment_size The maximum size that a message can take before it is to be fragmented. Defaults to 1000. Ptolemy will close the model if fragment size is too large (not sure what the maximum is).&#10; *  @parameter {string} compression A string to specify the compression scheme to be used on messages. Options are &quot;none&quot; (default) and &quot;png&quot;. &#10; *  @output {boolean} connected The status of the web socket connection.&#10; *  @output {JSON} received The data received from the web socket server.&#10; *  @author Marcus Pan &#10; *  @version $$Id: RosSubscriber.js 208 2015-07-03 22:20:31Z mpanj@seas.upenn.edu $$ &#10; *&#10; */&#10;&#10;&#10;/** Sets up by accessor by inheriting inputs, outputs and parameters from setup() in WebSocketClient.&lt;br&gt;&#10; *  Adds a 'topic' input which is the ROS topic to subscribe to. */&#10;exports.setup = function() {&#10;&#10;   extend('WebSocketClient');&#10;&#10;   parameter('topic', {&#10;      type: &quot;string&quot;,&#10;      value: &quot;&quot;&#10;   });&#10;   parameter('throttle_rate', {&#10;      type: &quot;int&quot;,&#10;      value: 0&#10;   });&#10;   parameter('queue_length', {&#10;      type: &quot;int&quot;,&#10;      value: 10&#10;   });&#10;   parameter('fragment_size', {&#10;      type: &quot;int&quot;,&#10;      value: 10000&#10;   });&#10;   parameter('compression', {&#10;      type: &quot;string&quot;,&#10;      value: 'none'&#10;   });&#10;   &#10;}&#10;&#10;/** Overrides the toSendInputHandler to throw an error if called. A subscriber should not be publishing inputs. */&#10;exports.toSendInputHandler = function() {&#10;   console.error('This is a subscriber and does not take input to publish.');&#10;}&#10;&#10;/** Inherits initialize from webSocketClient.&lt;br&gt;&#10;    Sends a message to rosbridge to start subscribing to the topic on input 'topic'.*/ &#10;exports.initialize = function() {&#10;  Object.getPrototypeOf(exports).initialize.apply(this);&#10;&#10;  exports.sendToWebSocket({&#10;      &quot;op&quot;: &quot;subscribe&quot;,&#10;      &quot;topic&quot;: getParameter('topic'),&#10;      &quot;throttle_rate&quot;: getParameter('throttle_rate'),&#10;      &quot;queue_length&quot;: getParameter('queue_length'),&#10;      &quot;fragment_size&quot;: getParameter('fragment_size'),&#10;      &quot;compression&quot;: getParameter('compression')&#10;  });&#10;}&#10;&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://terraswarm.org/accessors/RosSubscriber.js">
        </property>
        <property name="server" class="ptolemy.data.expr.StringParameter" value="localhost">
        </property>
        <property name="port" class="ptolemy.data.expr.Parameter" value="9090">
        </property>
        <property name="numberOfRetries" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="timeBetweenRetries" class="ptolemy.data.expr.Parameter" value="100">
        </property>
        <property name="reconnectOnClose" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="discardMessagesBeforeOpen" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="throttleFactor" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="topic" class="ptolemy.data.expr.StringParameter" value="/noise">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[360.0, 130.0]">
        </property>
        <property name="throttle_rate" class="ptolemy.data.expr.Parameter" value="0">
        </property>
        <property name="queue_length" class="ptolemy.data.expr.Parameter" value="1">
        </property>
        <property name="fragment_size" class="ptolemy.data.expr.Parameter" value="10000">
        </property>
        <property name="compression" class="ptolemy.data.expr.StringParameter" value="none">
        </property>
        <port name="toSend" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="connected" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="received" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="MessageOnTopic.input" relation="relation"/>
    <link port="RosSubscriber3.received" relation="relation"/>
</entity>
