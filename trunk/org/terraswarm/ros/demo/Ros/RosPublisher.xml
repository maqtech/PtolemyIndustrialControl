<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="RosPublisher" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="Infinity">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[420.0, 25.0]">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={462, 96, 1060, 752}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[846, 635]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0000000000000064">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{611.6875, 379.89453125}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
        </property>
        <property name="fontFamily" class="ptolemy.data.expr.StringParameter" value="SansSerif">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="A demo for running the RosPublisher and RosSubscriber accessor.&#10;Open the RosPublisher and RosSubscriber model by clicking on the links. &#10;&#10;Start up ROS and rosbridge on an Ubuntu machine:&#10;&#10;&#10;&#10;Now we set up a ROS topic and publish to it from ROS. &#10;The following command creates the topic &quot;/noise&quot;, ties it to the datatype String,&#10;and publishes &quot;im a ros publisher&quot; with a rate of 1 Hz:&#10;&#10;&#10;&#10;Now run your RosSubscriber accessor with the following parameters:&#10;server (string): IP address of ROS machine, eg &quot;localhost&quot; or &quot;127.0.0.1&quot;&#10;port (number): 9090 (default port of rosbridge)&#10;topic (string): /noise (don't enclose in quotation marks!)&#10;&#10;You should see the JSON output &quot;im a ros publisher&quot; printed at 1 Hz. &#10;&#10;Now we'll publish to that topic using the RosPublisher model.  &#10;Open the RosPublisher model, and configure the DiscreteClock as below.&#10;This triggers the publisher to publish at 1 Hz. The value it publishes must match the &#10;the ROS std_msgs/String datatype, which is formatted: {&quot;data&quot;: &quot;string to publish&quot;} &#10;StopTime: Infinity&#10;Period: 1.0&#10;Offset: {0.0}&#10;Values: {{data = &quot;im an accessor publisher&quot;}}&#10;&#10;Look at the RosSubscriber output, and you should see it alternate between:&#10;&quot;im a ros publisher&quot;&#10;&quot;im an accessor publisher&quot;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[285.0, 200.0]">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
        </property>
        <property name="fontFamily" class="ptolemy.data.expr.StringParameter" value="Monospaced">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="$roscore&#10;$roslaunch rosbridge_server rosbridge_websocket.launch&#10;">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[295.0, 275.0]">
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 0.0, 1.0}">
        </property>
        <property name="fontFamily" class="ptolemy.data.expr.StringParameter" value="Monospaced">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="$rostopic pub /noise std_msgs/String &quot;im a ros publisher&quot; -r 1">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[290.0, 385.0]">
        </property>
    </property>
    <entity name="DiscreteClock" class="ptolemy.actor.lib.DiscreteClock">
        <property name="period" class="ptolemy.actor.parameters.PortParameter" value="1.0">
        </property>
        <property name="offsets" class="ptolemy.data.expr.Parameter" value="{0.0}">
        </property>
        <property name="values" class="ptolemy.data.expr.Parameter" value="{{data = &quot;im an accessor publisher&quot;}}">
        </property>
        <doc>Create periodic timed events.</doc>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[430.0, 140.0]">
        </property>
    </entity>
    <entity name="RosPublisher" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** This accessor publishes to a pre-defined ROS topic.&lt;br&gt;&#10; *  This accessor extends WebSocketClient.js. &#10; *  It inherits the input and output from WebSocketClient, but adds&#10; *  its own 'topic' input. This must be a pre-established topic in ROS.&#10; *  This input is usually prefixed with a '/' eg: '/noise'.&lt;br&gt; &#10; *  On input from 'toSend', this accessor publishes that input to the &#10; *  aforementioned topic. &#10; *  The input from 'toSend' must be in JSON form, and must match the message&#10; *  datatype that the ROS topic is expecting. For example if ROS topic is &#10; *  expecting &lt;code&gt;std_msgs/String&lt;/code&gt;, then the input in 'toSend' should be&#10; *  as follows:&#10; *  &lt;pre&gt; { &quot;data&quot;: &quot;hello world&quot; } &lt;/pre&gt;&#10; *&#10; *  @accessor RosPublisher&#10; *  @parameter {string} server The IP address or domain name of server.&#10; *  @parameter {number} port The port that the web socket listens to.&#10; *  @parameter {string} topic The ROS topic to publish to.&#10; *  @input {JSON} toSend The data to be published to the topic.&#10; *  @output {boolean} connected The status of the web socket connection.&#10; *  @output {JSON} received The data received from the web socket server.&#10; *  @author Marcus Pan &#10; *  @version $$Id: RosPublisher.js 198 2015-06-26 17:50:11Z mpanj@seas.upenn.edu $$ &#10; */&#10;&#10;&#10;/** Sets up by accessor by inheriting inputs from setup() in webSocketClient.&lt;br&gt;&#10; *  Adds a 'topic' input which is a pre-defined ROS topic to publish to.*/ &#10;exports.setup = function() {&#10;   extend('WebSocketClient');&#10;   parameter('topic', {&#10;      type: &quot;string&quot;,&#10;      value: &quot;&quot;&#10;   });&#10;}&#10;&#10;/** Override inputHandler on 'toSend' from WebSocketClient */&#10;exports.toSendInputHandler = function() {&#10;   var data = {&#10;      &quot;op&quot;: &quot;publish&quot;,&#10;      &quot;topic&quot;: getParameter('topic'),&#10;      &quot;msg&quot;: get('toSend') &#10;   }&#10;   exports.sendToWebSocket(data);&#10;}&#10;&#10;/**  Inherits initialize from webSocketClient.*/ &#10;exports.initialize = function() {&#10;   Object.getPrototypeOf(exports).initialize.apply(this);&#10;}&#10;&#10;&#10;&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://terraswarm.org/accessors/RosPublisher.js">
        </property>
        <property name="server" class="ptolemy.data.expr.StringParameter" value="localhost">
        </property>
        <property name="port" class="ptolemy.data.expr.Parameter" value="9090">
        </property>
        <property name="topic" class="ptolemy.data.expr.StringParameter" value="/noise">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="[690.0, 140.0]">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="toSend" class="ptolemy.kernel.util.StringAttribute" value="The data to be send to the web socket server, in JSON format.">
            </property>
        </property>
        <property name="numberOfRetries" class="ptolemy.data.expr.Parameter" value="5">
        </property>
        <property name="timeBetweenRetries" class="ptolemy.data.expr.Parameter" value="1000">
        </property>
        <property name="reconnectOnClose" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <port name="toSend" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="connected" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="received" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
    </relation>
    <link port="DiscreteClock.output" relation="relation"/>
    <link port="RosPublisher.toSend" relation="relation"/>
</entity>
