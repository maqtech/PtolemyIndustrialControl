package org.terraswarm.gdp;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Cleanup buffers<br>
 * <i>native declaration : /usr/include/pthread.h:52</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _pthread_cleanup_buffer extends Structure {
	/**
	 * Function to call.<br>
	 * C type : __routine_callback*
	 */
	public _pthread_cleanup_buffer.__routine_callback __routine;
	/**
	 * Its argument.<br>
	 * C type : void*
	 */
	public Pointer __arg;
	/** Saved cancellation type. */
	public int __canceltype;
	/**
	 * Chaining of cleanup functions.<br>
	 * C type : _pthread_cleanup_buffer*
	 */
	public _pthread_cleanup_buffer.ByReference __prev;
	/** <i>native declaration : /usr/include/pthread.h:51</i> */
	public interface __routine_callback extends Callback {
		/** @param voidPtr1 Function to call. */
		void apply(Pointer voidPtr1);
	};
	public _pthread_cleanup_buffer() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__routine", "__arg", "__canceltype", "__prev");
	}
	/**
	 * @param __routine Function to call.<br>
	 * C type : __routine_callback*<br>
	 * @param __arg Its argument.<br>
	 * C type : void*<br>
	 * @param __canceltype Saved cancellation type.<br>
	 * @param __prev Chaining of cleanup functions.<br>
	 * C type : _pthread_cleanup_buffer*
	 */
	public _pthread_cleanup_buffer(_pthread_cleanup_buffer.__routine_callback __routine, Pointer __arg, int __canceltype, _pthread_cleanup_buffer.ByReference __prev) {
		super();
		this.__routine = __routine;
		this.__arg = __arg;
		this.__canceltype = __canceltype;
		this.__prev = __prev;
	}
	public _pthread_cleanup_buffer(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends _pthread_cleanup_buffer implements Structure.ByReference {
		
	};
	public static class ByValue extends _pthread_cleanup_buffer implements Structure.ByValue {
		
	};
}
