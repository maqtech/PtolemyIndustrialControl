package org.terraswarm.gdp;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/pthread.h:271</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class __pthread_unwind_buf_t extends Structure {
	/** C type : __cancel_jmp_buf_struct[1] */
	public __pthread_unwind_buf_t.__cancel_jmp_buf_struct[] __cancel_jmp_buf = new __pthread_unwind_buf_t.__cancel_jmp_buf_struct[1];
	/** C type : void*[4] */
	public Pointer[] __pad = new Pointer[4];
	/** <i>native declaration : /usr/include/pthread.h:270</i> */
	public static class __cancel_jmp_buf_struct extends Structure {
		/** C type : __jmp_buf */
		public NativeLong[] __cancel_jmp_buf = new NativeLong[8];
		public int __mask_was_saved;
		public __cancel_jmp_buf_struct() {
			super();
		}
		protected List<? > getFieldOrder() {
			return Arrays.asList("__cancel_jmp_buf", "__mask_was_saved");
		}
		/** @param __cancel_jmp_buf C type : __jmp_buf */
		public __cancel_jmp_buf_struct(NativeLong __cancel_jmp_buf[], int __mask_was_saved) {
			super();
			if ((__cancel_jmp_buf.length != this.__cancel_jmp_buf.length)) 
				throw new IllegalArgumentException("Wrong array size !");
			this.__cancel_jmp_buf = __cancel_jmp_buf;
			this.__mask_was_saved = __mask_was_saved;
		}
		public __cancel_jmp_buf_struct(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends __cancel_jmp_buf_struct implements Structure.ByReference {
			
		};
		public static class ByValue extends __cancel_jmp_buf_struct implements Structure.ByValue {
			
		};
	};
	public __pthread_unwind_buf_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__cancel_jmp_buf", "__pad");
	}
	/**
	 * @param __cancel_jmp_buf C type : __cancel_jmp_buf_struct[1]<br>
	 * @param __pad C type : void*[4]
	 */
	public __pthread_unwind_buf_t(__pthread_unwind_buf_t.__cancel_jmp_buf_struct __cancel_jmp_buf[], Pointer __pad[]) {
		super();
		if ((__cancel_jmp_buf.length != this.__cancel_jmp_buf.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__cancel_jmp_buf = __cancel_jmp_buf;
		if ((__pad.length != this.__pad.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.__pad = __pad;
	}
	public __pthread_unwind_buf_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends __pthread_unwind_buf_t implements Structure.ByReference {
		
	};
	public static class ByValue extends __pthread_unwind_buf_t implements Structure.ByValue {
		
	};
}
