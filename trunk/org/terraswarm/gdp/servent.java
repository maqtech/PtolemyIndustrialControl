package org.terraswarm.gdp;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /usr/include/netdb.h:28</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class servent extends Structure {
	/**
	 * official service name<br>
	 * C type : char*
	 */
	public Pointer s_name;
	/**
	 * alias list<br>
	 * C type : char**
	 */
	public PointerByReference s_aliases;
	/** port # */
	public int s_port;
	/**
	 * protocol to use<br>
	 * C type : char*
	 */
	public Pointer s_proto;
	public servent() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("s_name", "s_aliases", "s_port", "s_proto");
	}
	/**
	 * @param s_name official service name<br>
	 * C type : char*<br>
	 * @param s_aliases alias list<br>
	 * C type : char**<br>
	 * @param s_port port #<br>
	 * @param s_proto protocol to use<br>
	 * C type : char*
	 */
	public servent(Pointer s_name, PointerByReference s_aliases, int s_port, Pointer s_proto) {
		super();
		this.s_name = s_name;
		this.s_aliases = s_aliases;
		this.s_port = s_port;
		this.s_proto = s_proto;
	}
	public servent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends servent implements Structure.ByReference {
		
	};
	public static class ByValue extends servent implements Structure.ByValue {
		
	};
}
