package org.terraswarm.gdp;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * Structures returned by network data base library.  All addresses are<br>
 * supplied in host order, and returned in network order (suitable for<br>
 * use in system calls).<br>
 * <i>native declaration : /usr/include/netdb.h:12</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class hostent extends Structure {
	/**
	 * official name of host<br>
	 * C type : char*
	 */
	public Pointer h_name;
	/**
	 * alias list<br>
	 * C type : char**
	 */
	public PointerByReference h_aliases;
	/** host address type */
	public int h_addrtype;
	/** length of address */
	public int h_length;
	/**
	 * list of addresses from name server<br>
	 * C type : char**
	 */
	public PointerByReference h_addr_list;
	public hostent() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("h_name", "h_aliases", "h_addrtype", "h_length", "h_addr_list");
	}
	/**
	 * @param h_name official name of host<br>
	 * C type : char*<br>
	 * @param h_aliases alias list<br>
	 * C type : char**<br>
	 * @param h_addrtype host address type<br>
	 * @param h_length length of address<br>
	 * @param h_addr_list list of addresses from name server<br>
	 * C type : char**
	 */
	public hostent(Pointer h_name, PointerByReference h_aliases, int h_addrtype, int h_length, PointerByReference h_addr_list) {
		super();
		this.h_name = h_name;
		this.h_aliases = h_aliases;
		this.h_addrtype = h_addrtype;
		this.h_length = h_length;
		this.h_addr_list = h_addr_list;
	}
	public hostent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends hostent implements Structure.ByReference {
		
	};
	public static class ByValue extends hostent implements Structure.ByValue {
		
	};
}
