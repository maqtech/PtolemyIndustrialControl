#!/bin/sh -x
# Tree shake a demo: Build the minimal jar file and then run it
# Usage treeshake pathToJarExecutable treeshakejarfile java_commands . . .
#   The first java_command is expected to be the java interpreter

#
# @Authors: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997-2001 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

# We pass in the location of the jar command so that we are sure
# that we get the right jar command in our path.  In particular, 
# gcj comes with a jar command that could end up in /usr/local/bin
# which is not exactly the same as the Sun jar command.
JAR=$1
treeshakejar=$2
javaCommand=$3

shift; shift; shift

# We can't use tmp here because under cygwin will remap /tmp
# to c:/cygwin/tmp, and java will not be able to find it
manifest=$PTII/treeshake_manifest$$.txt
touch $manifest

# Find the class that includes main()
# This is a bit of a hack, we look for a command line argument that
# starts with "ptolemy."
for arg in $@
do
    echo "$arg" | egrep "^ptolemy\."
    retval=$?
    if [ $retval = 0 ]; then
	echo "Main-class: $arg" > $manifest
	break
    fi
done

# Generate a list of ptolemy classes to include by running
# the demo with under java -verbose

#set -x
ptolemyFiles=`$javaCommand -verbose ${1+"$@"} | \
    egrep '^\[Loaded ' | \
    egrep 'Loaded (ptolemy|com.microstar)' | \
    awk '{print substr($2, 1, length($2)-1)}' | \
    sed 's@\.@/@g' | awk '{print $1 ".class"}'`
#set +x
(cd $PTII; $JAR -cm $manifest $ptolemyFiles) > $treeshakejar

rm -f $manifest

# Throw away everything before -classpath xxx, where xxx is also tossed
echo "$@" | egrep -e "-classpath"
retval=$?
if [ $retval = 0 ]; then
    for arg in $@
    do
	if [ "$1" = "-classpath" ]; then
	    shift
	    echo "third $@: $@"
	    shift
	    break
	fi    
	# Consume 
	shift
    done	
fi

#set -x
$javaCommand -classpath $treeshakejar $@
