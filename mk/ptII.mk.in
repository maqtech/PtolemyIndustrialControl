# Makefile for Ptolemy II standalone distribution
#
# Version identification:
# $Id$
#
# Copyright (c) 1996-2001 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY
# Date of creation: 7/31/96
# Author: Christopher Hylands

# NOTE: Don't edit this file if it is called ptII.mk, instead
# edit ptII.mk.in, which is read by configure

# Every Ptolemy II makefile should include ptII.mk

# Variables with @ around them are substituted in by the configure script

# Default top-level directory.  Usually this is the same as $PTII
prefix =	@prefix@

# Usually the same as prefix.  exec_prefix is part of the autoconf standard.
exec_prefix =	@exec_prefix@

# Source directory we are building from.
srcdir =	@srcdir@

# Directory in which to install scripts
BIN_INSTALL_DIR =	$(exec_prefix)/bin

# The home of the Java Developer's Kit (JDK)
# Generating Java documentation uses this makefile variable
# The line below gets substituted by the configure script
PTJAVA_DIR = 	@PTJAVA_DIR@

# Location of rt.jar, usually $(PTJAVA_DIR)/jre/lib/rt.jar
# However, we have to be careful of backslashes and /cygwin
# Soot uses this variable to find java.lang.Object
JAVA_SYSTEM_JAR = @JAVA_SYSTEM_JAR@

# JDK Version from the java.version property
JVERSION =	@JVERSION@

# Java CLASSPATH separator
# For Unix, this would be :
# For Cygwin, this would be ;
CLASSPATHSEPARATOR = @CLASSPATHSEPARATOR@

# The home of the Java Foundation Classes (JFC) aka Swing
JFCHOME = 	/opt/swing

# CLASSPATH necessary to find the swing.jar file for JFC
JFCCLASSPATH = $(JFCHOME)/swing.jar

# The variables below are for the SunTest JavaScope code coverage tool
# See http://www.suntest.com/JavaScope
# The 'jsinstr' command, which instruments Java code.
JSINSTR = 	jsinstr
JSINSTRFLAGS = 	-IFLUSHCLASS=true
# The 'jsrestore' command which uninstruments Java code.
JSRESTORE =	jsrestore
# The pathname to the JavaScope.zip file
JSCLASSPATH = 	/users/ptdesign/vendors/sun/JavaScope/JavaScope.zip

# KVM is the JDK for PalmOS, see
# http://java.sun.com/products/kvm
KVM_CLASSES = @KVM_CLASSES@

# Directory that contains the kvm used by PalmOS
KVM_DIR = @KVM_DIR@

# Directory the Palm Pilot Hot Sync program looks for downloads
PALM_ADD_ON_DIR = /Program\ Files/Palm/Add-on

# Jar files used Soot - a Java Optimization Framework
SOOT_CLASSES = @SOOT_CLASSES@

# Directory that contains the Soot installation
SOOT_DIR = @SOOT_DIR@

# Tini is a single board Java processor from Dallas Semi (www.dalsemi.com)
TINI_CLASSES = @TINI_CLASSES@

# Directory that contains the TINI installation
TINI_DIR = @TINI_DIR@

# Waba is another JDK for PalmOS, see
# http://www.wabasoft.clom
WABA_CLASSES = @WABA_CLASSES@

# Directory that contains the waba used by PalmOS
WABA_DIR = @WABA_DIR@

# Lejos is a JDK for Lego Mindstorms, see
# http://lejos.sourceforge.net
LEJOS_DIR = @LEJOS_DIR@

########## You should not have to change anything below this line ######

# The 'javac' compiler.
JAVAC = 	$(PTJAVA_DIR)/bin/javac

# Flags to pass to javac.  Usually something like '-g -depend'
JDEBUG =	-g
JOPTIMIZE =	-O
JFLAGS = 	$(JDEBUG) $(JOPTIMIZE)

# The 'javadoc' program
JAVADOC = 	$(PTJAVA_DIR)/bin/javadoc

# Flags to pass to javadoc.
JDOCFLAGS = 	-author -version

# The jar command, used to produce jar files, which are similar to tar files
JAR =		$(PTJAVA_DIR)/bin/jar

# The 'java' interpreter.
JAVA =		$(PTJAVA_DIR)/bin/java

# The 'rmic' command - The Java Remote Method Invocation (RMI) command
RMIC =		$(PTJAVA_DIR)/bin/rmic

# Jar file that contains JDHL, see http://www.jhdl.org.
JHDL_JAR =	@JHDL_JAR@

# If Jini is present, the set to yes, otherwise, set to no
JINI_PRESENT =  @JINI_PRESENT@

# Jini home directory, see http://www.sun.com/jini/
JINI_DIR =	@JINI_DIR@

# lib/ directory of the Jini distribution
JINI_LIB =	$(JINI_DIR)/lib

# Do not include a trailng $(CLASSPATHSEPARATOR) here, or
# we may run into problems compiling under Solaris8 with JavaScope
# because we end up with a classpath with an empty element ::
JINI_JARS =     $(JINI_LIB)/jini-core.jar$(CLASSPATHSEPARATOR)$(JINI_LIB)/jini-jspaces.jar

# Location of the Matlab directory.  The matlab binary will be
# found at $(MATLAB_DIR)/bin/matlab
MATLAB_DIR = 	@MATLAB_DIR@

# Set to gcc if gcc was found and used in $PTII/ptolemy/matlab/makefile.
PTCC =	@PTCC@

# Set to copernicus and used in $PTII/ptolemy/makefile if Soot was found
PTCOPERNICUS_DIR = @PTCOPERNICUS_DIR@

# Set to dlltool if dlltool was found and used in
# $PTII/ptolemy/matlab/makefile.
PTDLLTOOL = @PTDLLTOOL@

# Location of the local $PTII directory as a file:/// URL
# This variable is used with the Java Network Launching Protocol files
PTII_LOCALURL = @PTII_LOCALURL@

# Set to gr and used in
# $PTII/ptolemy/domains/makefile if Java 3D was found
PTJAVA3D_DIR = @PTJAVA3D_DIR@

# Set to javasound and used in
# $PTII/ptolemy/actor/lib/makefile if javasound was found
PTJAVASOUND_DIR = @PTJAVASOUND_DIR@

# Set to jspaces and used in $PTII/ptolemy/actor/lib/makefile if jini
# was found
PTJSPACES_DIR =	@PTJSPACES_DIR@

# Set to kvm and used in $PTII/ptolemy/makefile if the PalmOS KVM was found
PTKVM_DIR =	@PTKVM_DIR@

# JavaCC is the Java Compiler Compiler which is used by ptolemy.data.expr

# The default location is $(PTII)/vendors/sun/JavaCC
JAVACC_DIR =	@JAVACC_DIR@
# Under Unix:
# JJTREE =	$(JAVACC_DIR)/bin/jjtree
# JAVACC =	$(JAVACC_DIR)/bin/javacc
# Under Cygwin32 NT the following should be used and JavaCC.zip must be in
# the CLASSPATH
# JJTREE = 	$(JAVA) COM.sun.labs.jjtree.Main
# JAVACC = 	$(JAVA) COM.sun.labs.javacc.Main

JJTREE =	@JJTREE@
JAVACC =	@JAVACC@

# Jar file that contains Jacl
PTJACL_JAR =	@PTJACL_JAR@

# jtclsh script to run Jacl for the test suite.
# We could use bin/ptjacl here, but instead we start it from within
# make and avoid problems
JTCLSH =	CLASSPATH="$(CLASSPATH)$(AUXCLASSPATH)$(CLASSPATHSEPARATOR)$(PTJACL_JAR)" @JTCLSH@

# Directory that contains the Java Serial Comm API, see
# http://java.sun.com/products/javacomm/
COMMAPI_DIR =   @COMMAPI_DIR@

# PTJHDL_DIR is set to jhdl if the JHDL directory is found
PTJHDL_DIR =    @PTJHDL_DIR@

# Set to lego and used in $PTII/ptolemy/apps/makefile if
# the Java Communications API was found
PTLEGO_DIR =	@PTLEGO_DIR@

# Set to lejos and used in $PTII/ptolemy/apps/makefile if
# the Java Communications API and Lejos was found
PTLEJOS_DIR =	@PTLEJOS_DIR@

# Set to matlab and used in $PTII/ptolemy/makefile if
# matlab was found.
PTMATLAB_DIR =	@PTMATLAB_DIR@

# Set to tini and used in $PTII/ptolemy/apps/makefile if the Dallas Semi
# TINI was found
PTTINI_DIR =	@PTINI_DIR@

# Set to waba and used in $PTII/ptolemy/makefile if the PalmOS WABA was found
PTWABA_DIR =	@PTWABA_DIR@

# Location of the diva.jar file.  Diva is (among other things) a graph
# visualization tool used by some of the demos.  For more information, see
# http://www-cad.eecs.berkeley.edu/diva/
DIVA_JAR = $(PTII)/lib/diva.jar

# Commands used to install scripts and data
# Use $(ROOT) instead of $(PTII) for install so that we don't
# need to have PTII set under Ptolemy classic when installing Ptplot
INSTALL =		$(ROOT)/config/install-sh -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644


