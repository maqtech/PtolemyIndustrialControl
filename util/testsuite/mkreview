#!/bin/sh
# Version: $Id$
# Author: Christopher Hylands
#
# @Copyright (c) 1997-2000 The Regents of the University of California.
# All rights reserved.
# 
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
# 
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

# Generate the materials for a review
# It is unlikely that this script will work anywhere but at UCB
# 
# This script expects as its arguments:
if [ $# -lt 1 ]; then
    echo "$0: Usage: $0 reviewtopdir reviewname file1 [file2...]"
    echo "reviewtopdir should be of the form: /users/ptII/public_html/reviews"
    echo "reviewname should be of the form YYYYMMDD-design or YYMMDD-code"
    echo "file should be of the form: ptolemy/package/foo.java"
    echo "For example:"
    echo "mkreview ~/ptIIweb/reviews 19990430-design ptolemy/data/expr/{Variable,VariableList}.java"
    echo "Source files will be loaded from $PTII/file and a review created in $reviewtopdir/reviewname"
    exit 2
fi
# It generates PostScript and PDF versions of the source files and 
# of the javadoc output

# The name of the directory that the review materials will reside in
reviewtopdir=$1
reviewname=$2
reviewdate=`basename $reviewname`

shift
shift

files=$@

basedir=`dirname $1`


# This directory will contain the docs
reviewdir=$reviewtopdir/$basedir/$reviewname
if [ -d $reviewdir ]; then
    echo "$0: $reviewdir exists, will not overwrite it, exiting."
    exit 3
fi

# Name of the HTML page that refers to the review materials
# Note that this page is in the directory above the review materials
reviewfile=$reviewtopdir/$basedir/$reviewname.htm


echo "Will generate review materials in $reviewdir"
echo "The file '$reviewfile'"
echo " contains links to the review materials."
echo "Please edit this file and check in to CVS"

mkdir $reviewdir

####################################
echo "Generating codeDoc"
cd $PTII/$basedir
rm -rf codeDoc
mkdir codeDoc

# Remove the directories from the filenames
shortfiles=""
for file in $files
do
   shortfiles=" $shortfiles `basename $file`"
done

CLASSPATH=$PTII
export CLASSPATH
javadoc -d codeDoc $shortfiles
cp -r codeDoc $reviewdir
cp $shortfiles $reviewdir

####################################
cd $reviewdir/codeDoc
echo "Generating PostScript of the docs in `pwd`"

if [ "$DISPLAY" = "" ]; then
    echo "$0: Warning: \$DISPLAY is not set, so we are not generating PS or PDF of the docs"
else
    # html2ps is a hack that often does not work
    sh $PTII/util/testsuite/html2ps -d ../javadocs.ps $basedir
    psnup -n 2 < ../javadocs.ps > ../javadocs2up.ps
fi

cd ..

# Generate PostScript of the code
enscript -Gp - $shortfiles > javafiles.ps
psnup -n 2 < javafiles.ps > javafiles2up.ps

# Generate PDF
distill *.ps


####################################
echo "Generate a html file with the appropriate links"
cat >$reviewfile <<EoF
<!-- $Id$

This file should be of the form yyyymmdd-design.htm, for example
19990402-design.htm or 19990402-code.htm

Links are relative, not absolute.
 -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<link href="/~ptII/lib/default.css" rel="stylesheet" type="text/css">
<title>Title</title>
</head>
<body>
 <!-- Replace all the italic text, including the <I></I> directives -->
<h1><I>Title</I></h1>

<p>
<ul>
<li><a href="#preliminary">Preliminary notes</a>
<li><a href="#identified">Identified defect</a>
<li><a href="#related">Related issues</a>
<li><a href="#concluding">Concluding notes</a>
</ul>


<h2><a name="preliminary">Preliminary notes</a></h2>
<I>If necessary, a few paragraphs about the review</I>
<menu>
<li>Source code:
  <menu>
EoF


for file in $shortfiles
do
    echo "  <li><a href=\"$reviewdate/$file\"><code>$file</code></a>" >>$reviewfile
done

cat >>$reviewfile <<EOF
  <li><a href="$reviewdate/javafiles.ps" target="_top">PostScript</a> -
<a href="$reviewdate/javafiles.pdf" target="_top">PDF</a>
  <li><a href="$reviewdate/javafiles2up.ps" target="_top">2 up PostScript</a> -
<a href="$reviewdate/javafiles2up.pdf" target="_top">2 up PDF</a>
  </menu>
<li> Javadoc 
  <menu>
  <li><a href="$reviewdate/codeDoc/index.html">HTML</a>
  <li><a href="$reviewdate/javadocs.ps">PostScript</a> -
    <a href="$reviewdate/javadocs.pdf">PDF</a>
  <li><a href="$reviewdate/javadocs2up.ps" target="_top">2 up PostScript</a> -
<a href="$reviewdate/javadocs2up.pdf" target="_top">2 up PDF</a>
  </menu>
<li> <i>UML Diagram</i>
</menu>

<p>
<ul>
<li>Moderator: <I>loginname</I>
<li>Scribe: <I>loginname</I>
<li>Author: <I>loginname</I>
<li>Reader: <I>loginname</I>
<li>Reviewers: <I>loginname</I>
</ul>

<p>
Review started: <I>time</I>
<br>
Review ended: <I>time</I>



<h2><a name="identified">Identified defects</a></h2>

<ul>

<li> <I>Classname</I>
<ol>
<li><I>method name</I>: <I>description of error</I> [<B><I>login</I></B>]
</ol>

</ul>


<h2><a name="related">Related issues </a></h2>

<ol>

<li><I>description</I>
[<B><I>login</I></B>]
</ol>


<h2><a name="concluding">Concluding notes</a></h2>

<ol>
</ol>

<p>
<br>
<I>login of moderator and date</I>
<br>
<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
 <br>comments to: <ADDRESS><a href="mailto:ptdesign@eecs.berkeley.edu">ptdesign@eecs.berkeley.edu</a></ADDRESS>

</body>
</html>
EOF

# Do a little checking
retval=0
outputfiles="javafiles.ps javafiles2up.ps javafiles.pdf javafiles2up.pdf javadocs.ps javadocs2up.ps javadocs.pdf javadocs2up.pdf"
for outputfile in $outputfiles
do
    if [ ! -f $outputfile ]; then
	echo "$0: Warning: '$outputfile' does not exist in `pwd`."
	retval=3
    fi
done


# Fix the permissions
chmod g+ws .
chmod -R g+w . $reviewfile
chgrp -R ptolemy . $reviewfile

exit $retval
