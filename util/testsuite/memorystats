#!/bin/sh
# Script that reads in output generated by Manager.timeAndMemory()
# and prints the averages of the second and successive runs 

#
# @Authors: Christopher Hylands
#
# @Version: $Id$
#
# @Copyright (c) 1997-2002 The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

# Lines look like
# 719 ms. Memory: 3520K Free: 2212K (63%)


awk 'BEGIN {min=99999999; count = 0 }
    NR > 1  {   if ( $0 ~ /ms. Memory:/) {
		    count++;
		    sum+= $1;
		    if ($1 < min) {
			min = $1
		    } else if ($1 > max) {
			max = $1
		    }
		    memory=substr($4, 1, length($4)-1) + 0
		    free=substr($6, 1, length($6)-1) + 0
		    static=substr($9, 1, length($9)-1) + 0
		    staticRT=substr($11, 1, length($11)-1) + 0
		    dynamicRT=substr($13, 1, length($11)-1) + 0

		    memorySum += memory
		    freeSum += free
		    staticSum += static
		    staticRTSum += staticRT
		    dynamicRTSum += dynamicRT
		}
	    }
	END {   
	        print "memorystats: count = " count 
		if (count==0) {
		    print description ": count == 0! Perhaps the output did not contain   \"ms. Memory\""
		} else {
		    timeAverage= int(sum/count+0.5)
		    percentFree=int (((freeSum/count)+0.0)/((memorySum/count)+0.0) * 100.0 + 0.5)
		    print description ": Averages of second and succeeding " count-1 " runs:" 

		    print description " ave: " timeAverage " ms. Memory: " memorySum/count "K Free: " freeSum/count "K ("  percentFree "%) Stat: " staticSum/count "K StatRT: " staticRTSum/count "K DynRT: " dynamicRTSum/count
	       }
}' description="$1" -

