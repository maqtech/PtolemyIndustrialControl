#!/bin/sh
# Script that creates a Ptolemy II model directory
#
# Author:  Christopher Hylands
# Version: $Id$
#
# Copyright (c) 1999 The Regents of the University of California.
# 	All Rights Reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

progname=`basename $0`

if [ $# -ne 2 ]; then
	echo "$progname: Usage: $progname <domain> <model>"
	echo "  Create a directory for a model in a specific domain"
	echo "  <domain> must be a directory in $PTII/ptolemy/domains"
	echo "  <model>  must start with a capital letter and not be a"
	echo "           directory that already exists"
	exit 2
fi

# The domain to create the model in
domain=$1

# The name of the model
model=$2

######################################################################
# Do some error checking

# $PTII must be set
if [ "x$PTII" = "x" ]; then
	echo "$progname: Error, \$PTII is not set, exiting"
	exit 3
fi

# Check the domain
existingdomains=`ls -1 $PTII/ptolemy/domains`
founddomain=0
for existingdomain in $existingdomains
do
	if [ "$existingdomain" = "$domain" ]; then
		founddomain=1
	fi
done 

if [ "$founddomain" = "0" ]; then
	echo "$progname: domain '$domain' is not listed in \$PTII/ptolemy/domains"
	exit 4
fi

# Check the model
# It could be that we should take the model directory as an
# optional argument
modeldir=$PTII/ptolemy/domains/$domain/demo/$model
if [ -d $modeldir ]; then
	echo "$progname: '$modeldir' already exists.  Exiting"
	exit 5
fi

# Check to see that the model starts with a capital letter
echo "$model" | egrep -s "^[A-Z]"
status=$?
if [ $status = 1 ]; then
	echo "$progname: '$modeldir' does not start with a capital letter." 
	exit 6
fi

# Get the full username.
username=YourName
uid=`whoami`
if [ -f /etc/passwd ]; then
    pwent=`grep $uid /etc/passwd`
    status=$?
    if [ $status = 0 ]; then
	username=`echo $pwent | awk -F: '{print $5}' | awk -F, '{print $1}' `
    else 	
	if [ -f /usr/bin/ypcat ]; then
	    pwent=`/usr/bin/ypcat passwd | grep $uid`
	    status=$?
	    if [ $status = 0 ]; then
		username=`echo $pwent | awk -F: '{print $5}' | awk -F, '{print $1}' `
	    fi
	fi
    fi	
fi

######################################################################
# Now, we create the directory and files

mkdir $modeldir
year=`date "+%Y"`

# Name of the Applet class
# We append 'Applet' in case there is a stand alone application as well.
appletclass=${model}Applet

# Name of the Java file that contains the applet
appletjava=$appletclass.java

# Name of the HTML file that invokes the applet
applethtm=$model.htm

echo "About to create '$modeldir/makefile'"

cat > $modeldir/makefile <<EOF
# Makefile for Ptolemy II $domain $model demo
#
# @Authors: $username
#
# @Version: $Id$
#
# @Copyright (c) $year The Regents of the University of California.
# All rights reserved.
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the
# above copyright notice and the following two paragraphs appear in all
# copies of this software.
#
# IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#
# 						PT_COPYRIGHT_VERSION_2
# 						COPYRIGHTENDKEY

ME =		ptolemy/domains/$domain/demo/$model

# Root of the Java directory
ROOT =		../../../../..

CLASSPATH =	\$(ROOT)

# Get configuration info
CONFIG =	\$(ROOT)/mk/ptII.mk
include \$(CONFIG)

# Used to build jar files
PTPACKAGE = 	$model
PTCLASSJAR = 	\$(PTPACKAGE).jar

JSRCS = \\
	$appletjava

EXTRA_SRCS = \\
	$applethtm \\
	\$(JSRCS)

# Sources that may or may not be present, but if they are present, we don't
# want make checkjunk to barf on them.
MISC_FILES =

# make checkjunk will not report OPTIONAL_FILES as trash
# make realclean removes OPTIONAL_FILES
OPTIONAL_FILES =

JCLASS = \$(JSRCS:%.java=%.class)

# Don't include all or install rules here, we want the user
# to run 'make demos' to run the tests.
all: jclass \$(PTCLASSJAR)
	@echo "To run all the demos, run 'make demo'"

install: all

demo: \$(PTCLASSJAR)
	CLASSPATH=\$(CLASSPATH) appletviewer $applethtm

depend:
	@echo "no dependencies in this directory"

# Get the rest of the rules
include \$(ROOT)/mk/ptcommon.mk
EOF




######
# Generate the Applet htm file

# Code to invoke the model.  Note that this does not end in .class
# because the JDK1.2.1 appletviewer will fail if it does.
code=ptolemy.domains.$domain.demo.$model.$appletclass

# Jar file that contains the domain
domainjar=ptolemy/domains/$domain/$domain.jar

# Jar file that contains the model.
modeljar=ptolemy/domains/$domain/demo/$model/$model.jar


echo "About to create '$modeldir/$applethtm'"

cat > $modeldir/$applethtm <<EOF2
<!-- $Id$
  @author: $username
 -->
<html>
<head>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<title>$model<I>Add your own title, removing the &lt;I&gt; ... &lt;/I&gt; </I></title>
<link href="../../../../doc/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<H1>$model<I>Should be the same as the title</I></H1>
<P>
 <!-- All of the controls of the applet should be visible when the
applet is displayed on a XGA screen-->
<center>

<!-- The HTML below is for the Java Plugin.  
	The first section is for IE, 
	the second is for appletviewer, 
	the third is for Netscape Communicator
 -->
<OBJECT classid="clsid:8AD9C840-044E-11D1-B3E9-00805F499D93"
   width="700"
   height="300"
   codebase="http://java.sun.com/products/plugin/1.2/jinstall-12-win32.cab#Version=1,2,0,0">
<PARAM NAME="code" VALUE="$code.class">
<PARAM NAME="codebase" VALUE="../../../../..">
<PARAM NAME=ARCHIVE VALUE="
	ptolemy/ptsupport.jar,
	$domainjar,
	$modeljar"
<PARAM NAME="type" VALUE="application/x-java-applet;version=1.2">
<COMMENT>
<EMBED type="application/x-java-applet;version=1.2"
   width="700"
   height="300"
   code="$code.class"
   codebase="../../../../.."

   archive="
	ptolemy/ptsupport.jar,
	$domainjar,
	$modeljar"
   pluginspage="http://java.sun.com/products/plugin/1.2/plugin-install.html">
</COMMENT>
<NOEMBED>
No JDK 1.2 support for applet!
</NOEMBED>
</EMBED>
</OBJECT>
</center>

<I>Add text describing the applet</I>
<p><font size="2" color="#cc0000">Last Updated: $Date$</font>
</body>
</html>
EOF2


######
# Generate the Applet java file

upcasedomain=`echo $domain | tr "[a-z]" "[A-Z]"` 

# Parent Class that this applet should inherit from
appletparent=${upcasedomain}Applet

if [ ! -f "$PTII/ptolemy/domains/$domain/gui/$appletparent.java" ]; then
	echo "$progname: '$PTII/ptolemy/domains/$domain/gui/$appletparent.java'"
	echo " does not exist so we will inherit from PtolemyApplet"
	appletparent=PtolemyApplet
fi


echo "About to create '$modeldir/$appletjava'"

cat > $modeldir/$appletjava <<EOF3 
/* An applet that uses Ptolemy II DE domain.

 Copyright (c) $year The Regents of the University of California.
 All rights reserved.
 Permission is hereby granted, without written agreement and without
 license or royalty fees, to use, copy, modify, and distribute this
 software and its documentation for any purpose, provided that the above
 copyright notice and the following two paragraphs appear in all copies
 of this software.

 IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
 SUCH DAMAGE.

 THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
 PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
 CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
 ENHANCEMENTS, OR MODIFICATIONS.

                                        PT_COPYRIGHT_VERSION_2
                                        COPYRIGHTENDKEY

@ProposedRating Red ($uid@eecs.berkeley.edu)
@AcceptedRating Red (reviewmoderator@eecs.berkeley.edu)
*/

package ptolemy.domains.$domain.demo.$model;

import java.applet.Applet;
import java.awt.*;
import java.awt.event.*;

import ptolemy.kernel.*;
import ptolemy.kernel.util.*;
import ptolemy.data.*;
import ptolemy.actor.lib.*;
import ptolemy.actor.gui.*;
import ptolemy.actor.util.*;
import ptolemy.domains.$domain.gui.*;
import ptolemy.domains.$domain.kernel.*;
import ptolemy.domains.$domain.lib.*;

import ptolemy.plot.*;

//////////////////////////////////////////////////////////////////////////
//// $appletclass
/**

@author $username
@version $Id$appletjava.java,v 1.1 1999/05/06 20:14:28 cxh Exp $
*/
public class $appletclass extends $appletparent {

    ///////////////////////////////////////////////////////////////////
    ////                         public methods                    ////

    /** Initialize the applet.
     */
    public void init() {
        super.init();
        try {
            Clock clock = new Clock(_toplevel,"clock");
            TimedPlotter plotter = new TimedPlotter(_toplevel,"plotter");
            plotter.setPanel(this);
            Dimension size = getSize();
            plotter.plot.setSize(size.width, size.height - 50);
            _toplevel.connect(clock.output, plotter.input);
            add(_createRunControls(2));
        } catch (Exception ex) {
            report("Error constructing model.", ex);
        }
    }
}
EOF3


echo "Your model '$model' has been created in"
echo "'$modeldir'"
echo "Be sure to do the following:"
echo " 1. Edit the parent makefile in $domain/demo and add your model"
if [ "$username" = "YourName" ]; then
    echo " 2. Edit '$appletjava' and substitute your name for $username"
fi
