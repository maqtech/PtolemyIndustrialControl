/* Functional Mock-up Interface (FMI) event information.

   Copyright (c) 2012 The Regents of the University of California.
   All rights reserved.
   Permission is hereby granted, without written agreement and without
   license or royalty fees, to use, copy, modify, and distribute this
   software and its documentation for any purpose, provided that the above
   copyright notice and the following two paragraphs appear in all copies
   of this software.

   IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
   FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
   ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
   THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
   SUCH DAMAGE.

   THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
   PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
   CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
   ENHANCEMENTS, OR MODIFICATIONS.

   PT_COPYRIGHT_VERSION_2
   COPYRIGHTENDKEY

*/

package org.ptolemy.fmi;
import org.ptolemy.fmi.FMICallbackFunctions.ByValue;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
/**
 * A Java Native Acess (JNA) Wrapper for a Functional Mock-up Unit shared library.
 *
 * <p>This file is based on a file that was autogenerated by 
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br> a tool
 * written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses
 * a few opensource projects.</a>.</p>
 *
 * @author Christopher Brooks
 * @version $Id$
 * @Pt.ProposedRating Red (cxh)
 * @Pt.AcceptedRating Red (cxh)
 */
public interface FMILibrary extends Library {
    // FIXME: get this from the .fmu
    //public static final String JNA_LIBRARY_NAME = "bouncingBall2";
    public static final String JNA_LIBRARY_NAME = "/Users/cxh/src/fmu/jna2/cs/binaries/darwin64/bouncingBall.dylib";
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(FMILibrary.JNA_LIBRARY_NAME);
    public static final FMILibrary INSTANCE = (FMILibrary)Native.loadLibrary(FMILibrary.JNA_LIBRARY_NAME, FMILibrary.class);
    /**
     * <i>native declaration : bouncingBall2.h:13</i><br>
     * enum values
     */
    public static interface FMIStatus {
        /// <i>native declaration : bouncingBall2.h:7</i>
        public static final int fmiOK = (int)0;
        /// <i>native declaration : bouncingBall2.h:8</i>
        public static final int fmiWarning = (int)1;
        /// <i>native declaration : bouncingBall2.h:9</i>
        public static final int fmiDiscard = (int)2;
        /// <i>native declaration : bouncingBall2.h:10</i>
        public static final int fmiError = (int)3;
        /// <i>native declaration : bouncingBall2.h:11</i>
        public static final int fmiFatal = (int)4;
        /// <i>native declaration : bouncingBall2.h:12</i>
        public static final int fmiPending = (int)5;
    };
    /**
     * <i>native declaration : bouncingBall2.h:76</i><br>
     * enum values
     */
    public static interface FMIStatusKind {
        /// <i>native declaration : bouncingBall2.h:73</i>
        public static final int fmiDoStepStatus = (int)0;
        /// <i>native declaration : bouncingBall2.h:74</i>
        public static final int fmiPendingStatus = (int)1;
        /// <i>native declaration : bouncingBall2.h:75</i>
        public static final int fmiLastSuccessfulTime = (int)2;
    };
    /// <i>native declaration : bouncingBall2.h:14</i>
    public interface FMICallbackLogger extends Callback {
        // FIXME: Handle vargargs
        void apply(Pointer c, Pointer instanceName, int status, Pointer category, Pointer message, String ... parameters);
    };
    /// <i>native declaration : bouncingBall2.h:15</i>
    public interface FMICallbackAllocateMemory extends Callback {
        Pointer apply(NativeSize nobj, NativeSize size);
    };
    /// <i>native declaration : bouncingBall2.h:16</i>
    public interface FMICallbackFreeMemory extends Callback {
        void apply(Pointer obj);
    };
    /// <i>native declaration : bouncingBall2.h:17</i>
    public interface FMIStepFinished extends Callback {
        void apply(Pointer c, int status);
    };
//     /**
//      * Original signature : <code>char* bouncingBall_fmiGetTypesPlatform()</code><br>
//      * <i>native declaration : bouncingBall2.h:33</i>
//      */
//     String bouncingBall_fmiGetTypesPlatform();
//     /**
//      * Original signature : <code>char* bouncingBall_fmiGetVersion()</code><br>
//      * <i>native declaration : bouncingBall2.h:35</i>
//      */
//     //String bouncingBall_fmiGetVersion();
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetDebugLogging(fmiComponent, fmiBoolean)</code><br>
//      * <i>native declaration : bouncingBall2.h:37</i>
//      */
//     int bouncingBall_fmiSetDebugLogging(Pointer c, byte loggingOn);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetReal(fmiComponent, const fmiValueReference[], size_t, fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:39</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetReal(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.DoubleBuffer)} and {@link #bouncingBall_fmiGetReal(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.DoubleByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetReal(Pointer c, IntByReference vr, NativeSize nvr, DoubleByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetReal(fmiComponent, const fmiValueReference[], size_t, fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:39</i>
//      */
//     int bouncingBall_fmiGetReal(Pointer c, IntBuffer vr, NativeSize nvr, DoubleBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetInteger(fmiComponent, const fmiValueReference[], size_t, fmiInteger[])</code><br>
//      * <i>native declaration : bouncingBall2.h:41</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetInteger(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.IntBuffer)} and {@link #bouncingBall_fmiGetInteger(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.IntByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetInteger(Pointer c, IntByReference vr, NativeSize nvr, IntByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetInteger(fmiComponent, const fmiValueReference[], size_t, fmiInteger[])</code><br>
//      * <i>native declaration : bouncingBall2.h:41</i>
//      */
//     int bouncingBall_fmiGetInteger(Pointer c, IntBuffer vr, NativeSize nvr, IntBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetBoolean(fmiComponent, const fmiValueReference[], size_t, fmiBoolean[])</code><br>
//      * <i>native declaration : bouncingBall2.h:43</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetBoolean(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.ByteBuffer)} and {@link #bouncingBall_fmiGetBoolean(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetBoolean(Pointer c, IntByReference vr, NativeSize nvr, Pointer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetBoolean(fmiComponent, const fmiValueReference[], size_t, fmiBoolean[])</code><br>
//      * <i>native declaration : bouncingBall2.h:43</i>
//      */
//     int bouncingBall_fmiGetBoolean(Pointer c, IntBuffer vr, NativeSize nvr, ByteBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetString(fmiComponent, const fmiValueReference[], size_t, fmiString[])</code><br>
//      * <i>native declaration : bouncingBall2.h:45</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetString(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference)} and {@link #bouncingBall_fmiGetString(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetString(Pointer c, IntByReference vr, NativeSize nvr, PointerByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetString(fmiComponent, const fmiValueReference[], size_t, fmiString[])</code><br>
//      * <i>native declaration : bouncingBall2.h:45</i>
//      */
//     int bouncingBall_fmiGetString(Pointer c, IntBuffer vr, NativeSize nvr, PointerByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetReal(fmiComponent, const fmiValueReference[], size_t, const fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:47</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiSetReal(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.DoubleBuffer)} and {@link #bouncingBall_fmiSetReal(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.DoubleByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiSetReal(Pointer c, IntByReference vr, NativeSize nvr, DoubleByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetReal(fmiComponent, const fmiValueReference[], size_t, const fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:47</i>
//      */
//     int bouncingBall_fmiSetReal(Pointer c, IntBuffer vr, NativeSize nvr, DoubleBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetInteger(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[])</code><br>
//      * <i>native declaration : bouncingBall2.h:49</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiSetInteger(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.IntBuffer)} and {@link #bouncingBall_fmiSetInteger(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.IntByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiSetInteger(Pointer c, IntByReference vr, NativeSize nvr, IntByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetInteger(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[])</code><br>
//      * <i>native declaration : bouncingBall2.h:49</i>
//      */
//     int bouncingBall_fmiSetInteger(Pointer c, IntBuffer vr, NativeSize nvr, IntBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetBoolean(fmiComponent, const fmiValueReference[], size_t, const fmiBoolean[])</code><br>
//      * <i>native declaration : bouncingBall2.h:51</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiSetBoolean(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.ByteBuffer)} and {@link #bouncingBall_fmiSetBoolean(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiSetBoolean(Pointer c, IntByReference vr, NativeSize nvr, Pointer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetBoolean(fmiComponent, const fmiValueReference[], size_t, const fmiBoolean[])</code><br>
//      * <i>native declaration : bouncingBall2.h:51</i>
//      */
//     int bouncingBall_fmiSetBoolean(Pointer c, IntBuffer vr, NativeSize nvr, ByteBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetString(fmiComponent, const fmiValueReference[], size_t, const fmiString[])</code><br>
//      * <i>native declaration : bouncingBall2.h:53</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiSetString(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference)} and {@link #bouncingBall_fmiSetString(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiSetString(Pointer c, IntByReference vr, NativeSize nvr, PointerByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetString(fmiComponent, const fmiValueReference[], size_t, const fmiString[])</code><br>
//      * <i>native declaration : bouncingBall2.h:53</i>
//      */
//     int bouncingBall_fmiSetString(Pointer c, IntBuffer vr, NativeSize nvr, PointerByReference value);
//     /**
//      * Original signature : <code>fmiComponent bouncingBall_fmiInstantiateSlave(fmiString, fmiString, fmiString, fmiString, fmiReal, fmiBoolean, fmiBoolean, FMICallbackFunctions, fmiBoolean)</code><br>
//      * <i>native declaration : bouncingBall2.h:55</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiInstantiateSlave(java.lang.String, java.lang.String, java.lang.String, java.lang.String, double, byte, byte, bouncingball2.FMICallbackFunctions.ByValue, byte)} and {@link #bouncingBall_fmiInstantiateSlave(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double, byte, byte, bouncingball2.FMICallbackFunctions.ByValue, byte)} instead
//      */
//     @Deprecated 
//     Pointer bouncingBall_fmiInstantiateSlave(Pointer instanceName, Pointer fmuGUID, Pointer fmuLocation, Pointer mimeType, double timeout, byte visible, byte interactive, ByValue functions, byte loggingOn);
//     /**
//      * Original signature : <code>fmiComponent bouncingBall_fmiInstantiateSlave(fmiString, fmiString, fmiString, fmiString, fmiReal, fmiBoolean, fmiBoolean, FMICallbackFunctions, fmiBoolean)</code><br>
//      * <i>native declaration : bouncingBall2.h:55</i>
//      */
//     Pointer bouncingBall_fmiInstantiateSlave(String instanceName, String fmuGUID, String fmuLocation, String mimeType, double timeout, byte visible, byte interactive, ByValue functions, byte loggingOn);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiInitializeSlave(fmiComponent, fmiReal, fmiBoolean, fmiReal)</code><br>
//      * <i>native declaration : bouncingBall2.h:57</i>
//      */
//     int bouncingBall_fmiInitializeSlave(Pointer c, double tStart, byte StopTimeDefined, double tStop);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiTerminateSlave(fmiComponent)</code><br>
//      * <i>native declaration : bouncingBall2.h:59</i>
//      */
//     int bouncingBall_fmiTerminateSlave(Pointer c);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiResetSlave(fmiComponent)</code><br>
//      * <i>native declaration : bouncingBall2.h:61</i>
//      */
//     int bouncingBall_fmiResetSlave(Pointer c);
//     /**
//      * Original signature : <code>void bouncingBall_fmiFreeSlaveInstance(fmiComponent)</code><br>
//      * <i>native declaration : bouncingBall2.h:63</i>
//      */
//     void bouncingBall_fmiFreeSlaveInstance(Pointer c);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetRealInputDerivatives(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[], const fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:65</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiSetRealInputDerivatives(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #bouncingBall_fmiSetRealInputDerivatives(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiSetRealInputDerivatives(Pointer c, IntByReference vr, NativeSize nvr, IntByReference order, DoubleByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiSetRealInputDerivatives(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[], const fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:65</i>
//      */
//     int bouncingBall_fmiSetRealInputDerivatives(Pointer c, IntBuffer vr, NativeSize nvr, IntBuffer order, DoubleBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetRealOutputDerivatives(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[], fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:67</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetRealOutputDerivatives(com.sun.jna.Pointer, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.nio.IntBuffer, java.nio.DoubleBuffer)} and {@link #bouncingBall_fmiGetRealOutputDerivatives(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetRealOutputDerivatives(Pointer c, IntByReference vr, NativeSize nvr, IntByReference order, DoubleByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetRealOutputDerivatives(fmiComponent, const fmiValueReference[], size_t, const fmiInteger[], fmiReal[])</code><br>
//      * <i>native declaration : bouncingBall2.h:67</i>
//      */
//     int bouncingBall_fmiGetRealOutputDerivatives(Pointer c, IntBuffer vr, NativeSize nvr, IntBuffer order, DoubleBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiCancelStep(fmiComponent)</code><br>
//      * <i>native declaration : bouncingBall2.h:69</i>
//      */
//     int bouncingBall_fmiCancelStep(Pointer c);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiDoStep(fmiComponent, fmiReal, fmiReal, fmiBoolean)</code><br>
//      * <i>native declaration : bouncingBall2.h:71</i>
//      */
//     int bouncingBall_fmiDoStep(Pointer c, double currentCommunicationPoint, double communicationStepSize, byte newStep);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetStatus(fmiComponent, const FMIStatusKind, FMIStatus*)</code><br>
//      * <i>native declaration : bouncingBall2.h:78</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetStatus(com.sun.jna.Pointer, int, java.nio.IntBuffer)} and {@link #bouncingBall_fmiGetStatus(com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetStatus(Pointer c, int s, IntByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetStatus(fmiComponent, const FMIStatusKind, FMIStatus*)</code><br>
//      * <i>native declaration : bouncingBall2.h:78</i>
//      */
//     int bouncingBall_fmiGetStatus(Pointer c, int s, IntBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetRealStatus(fmiComponent, const FMIStatusKind, fmiReal*)</code><br>
//      * <i>native declaration : bouncingBall2.h:80</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetRealStatus(com.sun.jna.Pointer, int, java.nio.DoubleBuffer)} and {@link #bouncingBall_fmiGetRealStatus(com.sun.jna.Pointer, int, com.sun.jna.ptr.DoubleByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetRealStatus(Pointer c, int s, DoubleByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetRealStatus(fmiComponent, const FMIStatusKind, fmiReal*)</code><br>
//      * <i>native declaration : bouncingBall2.h:80</i>
//      */
//     int bouncingBall_fmiGetRealStatus(Pointer c, int s, DoubleBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetIntegerStatus(fmiComponent, const FMIStatusKind, fmiInteger*)</code><br>
//      * <i>native declaration : bouncingBall2.h:82</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetIntegerStatus(com.sun.jna.Pointer, int, java.nio.IntBuffer)} and {@link #bouncingBall_fmiGetIntegerStatus(com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetIntegerStatus(Pointer c, int s, IntByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetIntegerStatus(fmiComponent, const FMIStatusKind, fmiInteger*)</code><br>
//      * <i>native declaration : bouncingBall2.h:82</i>
//      */
//     int bouncingBall_fmiGetIntegerStatus(Pointer c, int s, IntBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetBooleanStatus(fmiComponent, const FMIStatusKind, fmiBoolean*)</code><br>
//      * <i>native declaration : bouncingBall2.h:84</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetBooleanStatus(com.sun.jna.Pointer, int, java.nio.ByteBuffer)} and {@link #bouncingBall_fmiGetBooleanStatus(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetBooleanStatus(Pointer c, int s, Pointer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetBooleanStatus(fmiComponent, const FMIStatusKind, fmiBoolean*)</code><br>
//      * <i>native declaration : bouncingBall2.h:84</i>
//      */
//     int bouncingBall_fmiGetBooleanStatus(Pointer c, int s, ByteBuffer value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetStringStatus(fmiComponent, const FMIStatusKind, fmiString*)</code><br>
//      * <i>native declaration : bouncingBall2.h:86</i><br>
//      * @deprecated use the safer methods {@link #bouncingBall_fmiGetStringStatus(com.sun.jna.Pointer, int, java.lang.String[])} and {@link #bouncingBall_fmiGetStringStatus(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
//      */
//     @Deprecated 
//     int bouncingBall_fmiGetStringStatus(Pointer c, int s, PointerByReference value);
//     /**
//      * Original signature : <code>FMIStatus bouncingBall_fmiGetStringStatus(fmiComponent, const FMIStatusKind, fmiString*)</code><br>
//      * <i>native declaration : bouncingBall2.h:86</i>
//      */
//     int bouncingBall_fmiGetStringStatus(Pointer c, int s, String value[]);
}
