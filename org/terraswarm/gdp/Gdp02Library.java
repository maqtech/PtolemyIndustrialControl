package org.terraswarm.gdp;
import org.ptolemy.fmi.NativeSizeT; //Use NativeSizeT intead of NativeSize.  Fixed in makefile
// import com.ochafik.lang.jnaerator.runtime. // Commented out by cxh in makefileNativeSizeTByReference;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
import org.terraswarm.gdp.EP_STAT.ByValue;
/**
 * JNA Wrapper for library <b>gdp.0.2</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Gdp02Library extends Library {
	public static final String JNA_LIBRARY_NAME = "gdp.0.2";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Gdp02Library.JNA_LIBRARY_NAME);
	public static final Gdp02Library INSTANCE = (Gdp02Library)Native.loadLibrary(Gdp02Library.JNA_LIBRARY_NAME, Gdp02Library.class);
	/**
	 * <i>native declaration : src/gdp/gdp/gdp.h:30</i><br>
	 * enum values
	 */
	public static interface gdp_iomode_t {
		/**
		 * no mode specified<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:25</i>
		 */
		public static final int GDP_MODE_ANY = 0;
		/**
		 * read only<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:27</i>
		 */
		public static final int GDP_MODE_RO = 1;
		/**
		 * append only<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:29</i>
		 */
		public static final int GDP_MODE_AO = 2;
	};
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_USE_PTHREADS = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_INTTYPES_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDBOOL_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDINT_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDLIB_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STRING_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_SYS_TYPES_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_UNISTD_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_64BITPTR = (int)0;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_SEVBITS = (int)3;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_REGBITS = (int)11;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_MODBITS = (int)8;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_DETBITS = (int)10;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_REGISTRIES = (int)((1 << 11) - 1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_MODULES = (int)((1 << 8) - 1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_DETAIL = (int)((1 << 10) - 1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_MODSHIFT = (int)10;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_REGSHIFT = (int)(10 + 8);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_SEVSHIFT = (int)((10 + 8) + 11);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_OK = (int)(0);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_WARN = (int)(4);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_ERROR = (int)(5);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_SEVERE = (int)(6);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_ABORT = (int)(7);
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_GENERIC = (int)0x000;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_USER = (int)0x001;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_EPLIB = (int)0x100;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_NEOPHILIC = (int)0x101;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_SENDMAIL = (int)0x102;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_UCB = (int)0x103;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MOD_GENERIC = (int)0;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MOD_ERRNO = (int)0x0FE;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((0) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((1) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((1) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((2) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((2) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((3) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((3) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((4) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1U << 11) - 1)) << (10 + 8)) | (((0) & ((1U << 8) - 1)) << 10) | ((4) & ((1U << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/ep/ep.h</i> */
	public static final int EP_LIB_USEPTHREADS = (int)0x00000001;
	/**
	 * define<br>
	 * Conversion Error : ((void*)0xDEADBEEF)<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep.h:0</i><br>
	 * ((void*)0xDEADBEEF)
	 */
	/** <i>native declaration : src/gdp/ep/ep_time.h</i> */
	public static final long EP_TIME_NOTIME = (long)(-9223372036854775807L - 1);
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x32AAABA7, { 0 } }
	 */
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_NORMAL = (int)0;
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_ERRORCHECK = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_RECURSIVE = (int)2;
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_DEFAULT = (int)0;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x3CB0B1BB, { 0 } }
	 */
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x2DA8B3B4, { 0 } }
	 */
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_MODULE = (int)1;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((1) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((1) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((2) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((2) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((3) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((3) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((4) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((4) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((5) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((5) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((6) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((6) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((7) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((7) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((8) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((8) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((9) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((4) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((9) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((10) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((10) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((11) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((11) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((12) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((12) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((13) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((13) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((14) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((14) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((15) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((15) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((16) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((16) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((17) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((17) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((18) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((18) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((19) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((19) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((20) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((20) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((21) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((21) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((22) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((22) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((23) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((23) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((24) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((24) & ((1U << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_SUCCESS = (int)200;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CREATED = (int)201;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_DELETED = (int)202;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_VALID = (int)203;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CHANGED = (int)204;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CONTENT = (int)205;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADREQ = (int)400;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_UNAUTH = (int)401;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADOPT = (int)402;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_FORBIDDEN = (int)403;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTFOUND = (int)404;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_METHNOTALLOWED = (int)405;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTACCEPTABLE = (int)406;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_PRECONFAILED = (int)412;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_TOOLARGE = (int)413;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_UNSUPMEDIA = (int)415;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_INTERNAL = (int)500;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTIMPL = (int)501;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADGATEWAY = (int)502;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_SVCUNAVAIL = (int)503;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_GWTIMEOUT = (int)504;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_PROXYNOTSUP = (int)505;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((200) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((200) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((201) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((201) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((202) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((202) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((203) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((203) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((204) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((204) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((205) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((205) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((400) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((400) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((401) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((401) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((402) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((402) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((403) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((403) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((404) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((404) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((405) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((405) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((406) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((406) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((409) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((409) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((412) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((412) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((413) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((413) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((415) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((415) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((500) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((500) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((501) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((501) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((502) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((502) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((503) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((503) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((504) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((504) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((505) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((505) & ((1U << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((600) & ((1U << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1U << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1U << 11) - 1)) << (10 + 8)) | (((1) & ((1U << 8) - 1)) << 10) | ((600) & ((1U << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_DEBUG = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_F_FAILOK = (int)0x00000001;
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_F_ZERO = (int)0x00000004;
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_F_TRASH = (int)0x00000008;
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_F_ALIGN = (int)0x00000010;
	/** <i>native declaration : src/gdp/ep/ep_mem.h</i> */
	public static final int EP_MEM_F_WAIT = (int)0x00000020;
	/**
	 * define<br>
	 * Conversion Error : "<no file>", 1<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:0</i><br>
	 * "<no file>", 1
	 */
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_GCL_PNAME_LEN = (int)43;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final String PRIgdp_rid = (String)"u";
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final String PRIgdp_recno = (String)"ll";
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int _GDP_MAX_DER_LEN = (int)1024;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_GCLMD_XID = (int)0x00584944;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_GCLMD_PUBKEY = (int)0x00505542;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int _GDP_EVENT_FREE = (int)0;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_EVENT_DATA = (int)1;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_EVENT_EOS = (int)2;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_EVENT_SHUTDOWN = (int)3;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_EVENT_ASTAT = (int)4;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_DATUM_PRTEXT = (int)0x00000001;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_DATUM_PRDEBUG = (int)0x00000002;
	/**
	 * status handling function<br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:3</i>
	 */
	public interface EP_STAT2 extends Callback {
		Gdp02Library.EP_STAT_callback apply(Pointer EP_STAT_HANDLER_FUNCP);
	};
	/** <i>native declaration : src/gdp/ep/ep_stat.h:51</i> */
	public interface EP_STAT_callback extends Callback {
		/**
		 * @param estat status code<br>
		 * @param defmsg default message
		 */
		int apply(ByValue estat, Pointer defmsg, Object... av);
	};
	/** <i>native declaration : src/gdp/ep/ep_thr.h:93</i> */
	public interface ep_thr_pool_run_func_callback extends Callback {
		/** @param voidPtr1 the function */
		void apply(Pointer voidPtr1);
	};
	/** <i>native declaration : src/gdp/gdp/gdp.h:80</i> */
	public interface gdp_event_cbfunc_t extends Callback {
		void apply(Pointer ev);
	};
	/**
	 * called if the assertion failed<br>
	 * Original signature : <code>void ep_assert_failure(const char*, const char*, const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:4</i><br>
	 * @deprecated use the safer methods {@link #ep_assert_failure(java.lang.String, java.lang.String, java.lang.String, int)} and {@link #ep_assert_failure(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	void ep_assert_failure(Pointer expr, Pointer type, Pointer file, int line);
	/**
	 * called if the assertion failed<br>
	 * Original signature : <code>void ep_assert_failure(const char*, const char*, const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:4</i>
	 */
	void ep_assert_failure(String expr, String type, String file, int line);
	/**
	 * called if ep_assert_failure was rude enough to return<br>
	 * Original signature : <code>void ep_assert_abort(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:9</i><br>
	 * @deprecated use the safer methods {@link #ep_assert_abort(java.lang.String)} and {@link #ep_assert_abort(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void ep_assert_abort(Pointer msg);
	/**
	 * called if ep_assert_failure was rude enough to return<br>
	 * Original signature : <code>void ep_assert_abort(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:9</i>
	 */
	void ep_assert_abort(String msg);
	/**
	 * functions<br>
	 * Original signature : <code>EP_STAT ep_stat_from_errno(int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:7</i>
	 */
	ByValue ep_stat_from_errno(int uerrno);
	/**
	 * register stat code to string mappings<br>
	 * Original signature : <code>void ep_stat_reg_strings(ep_stat_to_string*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:14</i>
	 */
	void ep_stat_reg_strings(ep_stat_to_string ep_stat_to_stringPtr1);
	/**
	 * return string representation of status<br>
	 * Original signature : <code>char* ep_stat_tostr(EP_STAT, char*, size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:19</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	Pointer ep_stat_tostr(ByValue estat, Pointer buf, NativeSizeT bsize);
	/**
	 * return string representation of status<br>
	 * Original signature : <code>char* ep_stat_tostr(EP_STAT, char*, size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:19</i>
	 */
	Pointer ep_stat_tostr(ByValue estat, ByteBuffer buf, NativeSizeT bsize);
	/**
	 * return string representation of severity (in natural language)<br>
	 * Original signature : <code>char* ep_stat_sev_tostr(int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:24</i>
	 */
	String ep_stat_sev_tostr(int sev);
	/**
	 * register/deregister a status handler<br>
	 * Original signature : <code>EP_STAT_HANDLE* ep_stat_register(EP_STAT, EP_STAT, EP_STAT_HANDLER_FUNCP)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:29</i>
	 */
	PointerByReference ep_stat_register(ByValue estat, ByValue mask, Gdp02Library.EP_STAT_HANDLER_FUNCP f);
	/**
	 * Original signature : <code>EP_STAT ep_stat_unregister(EP_STAT_HANDLE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:31</i><br>
	 * @deprecated use the safer method {@link #ep_stat_unregister(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue ep_stat_unregister(Pointer h);
	/**
	 * Original signature : <code>EP_STAT ep_stat_unregister(EP_STAT_HANDLE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:31</i>
	 */
	ByValue ep_stat_unregister(PointerByReference h);
	/**
	 * post a status<br>
	 * Original signature : <code>EP_STAT ep_stat_post(EP_STAT, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:36</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, java.lang.Object)} and {@link #ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	ByValue ep_stat_post(ByValue c, Pointer defmsg, Object... varArgs1);
	/**
	 * post a status<br>
	 * Original signature : <code>EP_STAT ep_stat_post(EP_STAT, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:36</i>
	 */
	ByValue ep_stat_post(ByValue c, String defmsg, Object... varArgs1);
	/**
	 * Original signature : <code>EP_STAT ep_stat_vpost(EP_STAT, const char*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:38</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, java.lang.Object)} and {@link #ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	ByValue ep_stat_vpost(ByValue c, Pointer defmsg, Object... av);
	/**
	 * Original signature : <code>EP_STAT ep_stat_vpost(EP_STAT, const char*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:38</i>
	 */
	ByValue ep_stat_vpost(ByValue c, String defmsg, Object... av);
	/**
	 * print a status<br>
	 * Original signature : <code>void ep_stat_print(EP_STAT, const char*, FILE*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:43</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, org.terraswarm.gdp.Gdp02Library.FILE, java.lang.Object)} and {@link #ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, org.terraswarm.gdp.Gdp02Library.FILE, java.lang.Object)} instead
	 */
	@Deprecated 
	void ep_stat_print(ByValue c, Pointer defmsg, Gdp02Library.FILE fp, Object... varArgs1);
	/**
	 * print a status<br>
	 * Original signature : <code>void ep_stat_print(EP_STAT, const char*, FILE*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:43</i>
	 */
	void ep_stat_print(ByValue c, String defmsg, Gdp02Library.FILE fp, Object... varArgs1);
	/**
	 * Original signature : <code>void ep_stat_vprint(EP_STAT, const char*, FILE*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:45</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, org.terraswarm.gdp.Gdp02Library.FILE, java.lang.Object)} and {@link #ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, org.terraswarm.gdp.Gdp02Library.FILE, java.lang.Object)} instead
	 */
	@Deprecated 
	void ep_stat_vprint(ByValue c, Pointer defmsg, Gdp02Library.FILE fp, Object... av);
	/**
	 * Original signature : <code>void ep_stat_vprint(EP_STAT, const char*, FILE*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:45</i>
	 */
	void ep_stat_vprint(ByValue c, String defmsg, Gdp02Library.FILE fp, Object... av);
	/**
	 * print and abort (never returns)<br>
	 * Original signature : <code>void ep_stat_abort(EP_STAT)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:50</i>
	 */
	void ep_stat_abort(ByValue c);
	/**
	 * *  Initialization<br>
	 * Original signature : <code>EP_STAT ep_lib_init(uint32_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:4</i>
	 */
	ByValue ep_lib_init(int flags);
	/**
	 * the versions from ep_mem.h give you a bit more<br>
	 * Original signature : <code>void* ep_mem_malloc(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:9</i>
	 */
	Pointer ep_mem_malloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>void* ep_mem_zalloc(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:11</i>
	 */
	Pointer ep_mem_zalloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>char* ep_mem_strdup(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:13</i><br>
	 * @deprecated use the safer methods {@link #ep_mem_strdup(java.lang.String)} and {@link #ep_mem_strdup(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer ep_mem_strdup(Pointer charPtr1);
	/**
	 * Original signature : <code>char* ep_mem_strdup(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:13</i>
	 */
	Pointer ep_mem_strdup(String charPtr1);
	/**
	 * Original signature : <code>void ep_mem_free(void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:15</i>
	 */
	void ep_mem_free(Pointer voidPtr1);
	/**
	 * ideally this would check valid pointers for this architecture<br>
	 * search for parameter files<br>
	 * Original signature : <code>void ep_adm_readparams(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:21</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_readparams(java.lang.String)} and {@link #ep_adm_readparams(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void ep_adm_readparams(Pointer name);
	/**
	 * ideally this would check valid pointers for this architecture<br>
	 * search for parameter files<br>
	 * Original signature : <code>void ep_adm_readparams(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:21</i>
	 */
	void ep_adm_readparams(String name);
	/**
	 * get integer param value<br>
	 * Original signature : <code>int ep_adm_getintparam(const char*, int)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:27</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getintparam(java.lang.String, int)} and {@link #ep_adm_getintparam(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int ep_adm_getintparam(Pointer name, int def);
	/**
	 * get integer param value<br>
	 * Original signature : <code>int ep_adm_getintparam(const char*, int)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:27</i>
	 */
	int ep_adm_getintparam(String name, int def);
	/**
	 * get long param value<br>
	 * Original signature : <code>long ep_adm_getlongparam(const char*, long)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:33</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getlongparam(java.lang.String, com.sun.jna.NativeLong)} and {@link #ep_adm_getlongparam(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	NativeLong ep_adm_getlongparam(Pointer name, NativeLong def);
	/**
	 * get long param value<br>
	 * Original signature : <code>long ep_adm_getlongparam(const char*, long)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:33</i>
	 */
	NativeLong ep_adm_getlongparam(String name, NativeLong def);
	/**
	 * get boolean param value<br>
	 * Original signature : <code>bool ep_adm_getboolparam(const char*, bool)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:39</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getboolparam(java.lang.String, byte)} and {@link #ep_adm_getboolparam(com.sun.jna.Pointer, byte)} instead
	 */
	@Deprecated 
	byte ep_adm_getboolparam(Pointer name, byte def);
	/**
	 * get boolean param value<br>
	 * Original signature : <code>bool ep_adm_getboolparam(const char*, bool)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:39</i>
	 */
	byte ep_adm_getboolparam(String name, byte def);
	/**
	 * get string param value<br>
	 * Original signature : <code>char* ep_adm_getstrparam(const char*, const char*)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:45</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getstrparam(java.lang.String, java.lang.String)} and {@link #ep_adm_getstrparam(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer ep_adm_getstrparam(Pointer name, Pointer def);
	/**
	 * get string param value<br>
	 * Original signature : <code>char* ep_adm_getstrparam(const char*, const char*)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:45</i>
	 */
	Pointer ep_adm_getstrparam(String name, String def);
	/**
	 * open a static memory buffer<br>
	 * Original signature : <code>FILE* ep_fopensmem(void*, size_t, const char*)</code><br>
	 * @param buf buffer<br>
	 * @param bufsz size of buffer<br>
	 * <i>native declaration : src/gdp/ep/ep.h:52</i><br>
	 * @deprecated use the safer methods {@link #ep_fopensmem(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.lang.String)} and {@link #ep_fopensmem(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Gdp02Library.FILE ep_fopensmem(Pointer buf, NativeSizeT bufsz, Pointer mode);
	/**
	 * open a static memory buffer<br>
	 * Original signature : <code>FILE* ep_fopensmem(void*, size_t, const char*)</code><br>
	 * @param buf buffer<br>
	 * @param bufsz size of buffer<br>
	 * <i>native declaration : src/gdp/ep/ep.h:52</i>
	 */
	Gdp02Library.FILE ep_fopensmem(Pointer buf, NativeSizeT bufsz, String mode);
	/**
	 * unlocked version of fread<br>
	 * Original signature : <code>size_t ep_fread_unlocked(void*, size_t, size_t, FILE*)</code><br>
	 * @param buf buffer area<br>
	 * @param sz size of one item<br>
	 * @param n number of items<br>
	 * <i>native declaration : src/gdp/ep/ep.h:60</i>
	 */
	NativeSizeT ep_fread_unlocked(Pointer buf, NativeSizeT sz, NativeSizeT n, Gdp02Library.FILE fp);
	/**
	 * unlocked version of fwrite<br>
	 * Original signature : <code>size_t ep_fwrite_unlocked(void*, size_t, size_t, FILE*)</code><br>
	 * @param buf buffer area<br>
	 * @param sz size of one item<br>
	 * @param n number of items<br>
	 * <i>native declaration : src/gdp/ep/ep.h:68</i>
	 */
	NativeSizeT ep_fwrite_unlocked(Pointer buf, NativeSizeT sz, NativeSizeT n, Gdp02Library.FILE fp);
	/**
	 * return current time<br>
	 * Original signature : <code>EP_STAT ep_time_now(EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:12</i>
	 */
	ByValue ep_time_now(EP_TIME_SPEC tv);
	/**
	 * return current time plus an offset<br>
	 * Original signature : <code>EP_STAT ep_time_deltanow(EP_TIME_SPEC*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:17</i>
	 */
	ByValue ep_time_deltanow(EP_TIME_SPEC delta, EP_TIME_SPEC tv);
	/**
	 * add a delta to a time (delta may be negative)<br>
	 * Original signature : <code>void ep_time_add_delta(EP_TIME_SPEC*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:22</i>
	 */
	void ep_time_add_delta(EP_TIME_SPEC delta, EP_TIME_SPEC tv);
	/**
	 * determine if A occurred before B<br>
	 * Original signature : <code>bool ep_time_before(EP_TIME_SPEC*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:27</i>
	 */
	byte ep_time_before(EP_TIME_SPEC a, EP_TIME_SPEC b);
	/**
	 * create a time from a scalar number of nanoseconds<br>
	 * Original signature : <code>void ep_time_from_nsec(int64_t, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:32</i>
	 */
	void ep_time_from_nsec(long delta, EP_TIME_SPEC tv);
	/**
	 * return putative clock accuracy<br>
	 * Original signature : <code>float ep_time_accuracy()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:37</i>
	 */
	float ep_time_accuracy();
	/**
	 * set the clock accuracy (may not be available)<br>
	 * Original signature : <code>void ep_time_setaccuracy(float)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:42</i>
	 */
	void ep_time_setaccuracy(float acc);
	/**
	 * format a time string into a buffer<br>
	 * Original signature : <code>void ep_time_format(const EP_TIME_SPEC*, char*, size_t, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:47</i><br>
	 * @deprecated use the safer methods {@link #ep_time_format(org.terraswarm.gdp.EP_TIME_SPEC, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, byte)} and {@link #ep_time_format(org.terraswarm.gdp.EP_TIME_SPEC, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, byte)} instead
	 */
	@Deprecated 
	void ep_time_format(EP_TIME_SPEC tv, Pointer buf, NativeSizeT bz, byte human);
	/**
	 * format a time string into a buffer<br>
	 * Original signature : <code>void ep_time_format(const EP_TIME_SPEC*, char*, size_t, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:47</i>
	 */
	void ep_time_format(EP_TIME_SPEC tv, ByteBuffer buf, NativeSizeT bz, byte human);
	/**
	 * format a time string to a file<br>
	 * Original signature : <code>void ep_time_print(const EP_TIME_SPEC*, FILE*, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:52</i>
	 */
	void ep_time_print(EP_TIME_SPEC tv, Gdp02Library.FILE fp, byte human);
	/**
	 * parse a time string<br>
	 * Original signature : <code>EP_STAT ep_time_parse(const char*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:57</i><br>
	 * @deprecated use the safer methods {@link #ep_time_parse(java.lang.String, org.terraswarm.gdp.EP_TIME_SPEC)} and {@link #ep_time_parse(com.sun.jna.Pointer, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
	@Deprecated 
	ByValue ep_time_parse(Pointer timestr, EP_TIME_SPEC tv);
	/**
	 * parse a time string<br>
	 * Original signature : <code>EP_STAT ep_time_parse(const char*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:57</i>
	 */
	ByValue ep_time_parse(String timestr, EP_TIME_SPEC tv);
	/**
	 * sleep for the indicated number of nanoseconds<br>
	 * Original signature : <code>EP_STAT ep_time_nanosleep(int64_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:62</i>
	 */
	ByValue ep_time_nanosleep(long int64_t1);
	/**
	 * *  THREADS LOCKING SUPPORT<br>
	 * *<br>
	 *  These are mostly one-for-one replacements for pthreads.<br>
	 *  The main differences are:<br>
	 * *<br>
	 *  (a)	They can be compiled out if you don't have pthreads available.<br>
	 * *	By default they are compiled in, but "-DEP_OSCF_USE_PTHREADS=0"<br>
	 * *	will undo this.<br>
	 *  (b) The routines themselves have debugging output in the event of<br>
	 * *	errors.<br>
	 *  (c)	These definitions only cover locking.  The assumption is that<br>
	 * *	if you need threads then you'll do all the thread creation/<br>
	 * *	destruction/control using native pthreads primitives.  In fact,<br>
	 * *	these routines are probably only useful for libraries.<br>
	 *  (d) It is essential that the application call<br>
	 * *		ep_lib_init(EP_LIB_USEPTHREADS);<br>
	 * *	Otherwise these routines are all null.<br>
	 * *<br>
	 *  This could be made slightly more efficient by changing all calls<br>
	 *  to "ep_thr_XYZ" to (_EpThrUsePthreads ? _ep_thr_XYZ : 0).  It's<br>
	 *  not clear that it's worth the complexity, but it's easy to do in<br>
	 *  the future if it is.<br>
	 * *<br>
	 *  XXX	Should these return an EP_STAT instead of an int?<br>
	 * *	PRO:	matches other routines, allows for possible non-errno<br>
	 * *		values in the future.<br>
	 * *	CON:	makes the ep_thr_* routines not drop-in replacements<br>
	 * *		for pthreads_* routines.<br>
	 * *	NOTE:	There's not much to do if these routines fail (kind<br>
	 * *		of like malloc), so unfortunately the return values<br>
	 * *		are usually ignored.  Just live with it?<br>
	 * *<br>
	 *  XXX	I started implementing the mutex routines as recursive locks,<br>
	 * *	mostly so ep_funclist_invoke would work.  This is how the<br>
	 * *	stdio libraries deal with the problem.  Problem is, that<br>
	 * *	wouldn't fix the problem (because of local variables), so I<br>
	 * *	went for simplicity.<br>
	 * Original signature : <code>void ep_thr_yield()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:40</i>
	 */
	void ep_thr_yield();
	/**
	 * Original signature : <code>int ep_thr_mutex_init(EP_THR_MUTEX*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:43</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_init(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_init(Pointer mtx, int type);
	/**
	 * Original signature : <code>int ep_thr_mutex_init(EP_THR_MUTEX*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:43</i>
	 */
	int ep_thr_mutex_init(PointerByReference mtx, int type);
	/**
	 * Original signature : <code>int ep_thr_mutex_destroy(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:45</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_destroy(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_destroy(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:45</i>
	 */
	int ep_thr_mutex_destroy(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_lock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:47</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_lock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_lock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_lock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:47</i>
	 */
	int ep_thr_mutex_lock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_trylock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:49</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_trylock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_trylock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_trylock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:49</i>
	 */
	int ep_thr_mutex_trylock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_unlock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:51</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_unlock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_unlock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:51</i>
	 */
	int ep_thr_mutex_unlock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_check(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:53</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_check(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_mutex_check(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_check(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:53</i>
	 */
	int ep_thr_mutex_check(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_cond_init(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:56</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_cond_init(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_init(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:56</i>
	 */
	int ep_thr_cond_init(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_destroy(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:58</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_cond_destroy(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_destroy(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:58</i>
	 */
	int ep_thr_cond_destroy(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_signal(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:60</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_signal(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_cond_signal(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_signal(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:60</i>
	 */
	int ep_thr_cond_signal(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_wait(EP_THR_COND*, EP_THR_MUTEX*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:62</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_wait(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
	@Deprecated 
	int ep_thr_cond_wait(Pointer cv, Pointer mtx, EP_TIME_SPEC timeout);
	/**
	 * Original signature : <code>int ep_thr_cond_wait(EP_THR_COND*, EP_THR_MUTEX*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:62</i>
	 */
	int ep_thr_cond_wait(PointerByReference cv, PointerByReference mtx, EP_TIME_SPEC timeout);
	/**
	 * Original signature : <code>int ep_thr_cond_broadcast(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:64</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_broadcast(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_cond_broadcast(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_broadcast(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:64</i>
	 */
	int ep_thr_cond_broadcast(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_rwlock_init(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:67</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_init(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_init(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:67</i>
	 */
	int ep_thr_rwlock_init(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_destroy(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:69</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_destroy(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_destroy(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:69</i>
	 */
	int ep_thr_rwlock_destroy(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_rdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:71</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_rdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_rdlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_rdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:71</i>
	 */
	int ep_thr_rwlock_rdlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_tryrdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:73</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_tryrdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_tryrdlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_tryrdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:73</i>
	 */
	int ep_thr_rwlock_tryrdlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_wrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:75</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_wrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_wrlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_wrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:75</i>
	 */
	int ep_thr_rwlock_wrlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_trywrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:77</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_trywrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_trywrlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_trywrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:77</i>
	 */
	int ep_thr_rwlock_trywrlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_unlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:79</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ep_thr_rwlock_unlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_unlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:79</i>
	 */
	int ep_thr_rwlock_unlock(PointerByReference rwl);
	/**
	 * initialize a thread pool<br>
	 * Original signature : <code>void ep_thr_pool_init(int, int, uint32_t)</code><br>
	 * @param min_threads min number of threads<br>
	 * @param max_threads max number of threads<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:86</i>
	 */
	void ep_thr_pool_init(int min_threads, int max_threads, int flags);
	/**
	 * run a function in a worker thread from the pool<br>
	 * Original signature : <code>void ep_thr_pool_run(ep_thr_pool_run_func_callback*, void*)</code><br>
	 * @param func the function<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:92</i>
	 */
	void ep_thr_pool_run(Gdp02Library.ep_thr_pool_run_func_callback func, Pointer arg);
	/**
	 * Original signature : <code>gdp_buf_t* gdp_buf_new()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:2</i>
	 */
	PointerByReference gdp_buf_new();
	/**
	 * Original signature : <code>int gdp_buf_reset(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:4</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_reset(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gdp_buf_reset(Pointer b);
	/**
	 * Original signature : <code>int gdp_buf_reset(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:4</i>
	 */
	int gdp_buf_reset(PointerByReference b);
	/**
	 * Original signature : <code>void gdp_buf_free(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:6</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gdp_buf_free(Pointer b);
	/**
	 * Original signature : <code>void gdp_buf_free(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:6</i>
	 */
	void gdp_buf_free(PointerByReference b);
	/**
	 * Original signature : <code>void gdp_buf_setlock(gdp_buf_t*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:8</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_setlock(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gdp_buf_setlock(Pointer buf, Pointer m);
	/**
	 * Original signature : <code>void gdp_buf_setlock(gdp_buf_t*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:8</i>
	 */
	void gdp_buf_setlock(PointerByReference buf, PointerByReference m);
	/**
	 * Original signature : <code>size_t gdp_buf_getlength(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:10</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_getlength(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeSizeT gdp_buf_getlength(Pointer buf);
	/**
	 * Original signature : <code>size_t gdp_buf_getlength(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:10</i>
	 */
	NativeSizeT gdp_buf_getlength(PointerByReference buf);
	/**
	 * Original signature : <code>size_t gdp_buf_read(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:12</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_read(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	NativeSizeT gdp_buf_read(Pointer buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_read(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:12</i>
	 */
	NativeSizeT gdp_buf_read(PointerByReference buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_peek(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:14</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_peek(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	NativeSizeT gdp_buf_peek(Pointer buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_peek(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:14</i>
	 */
	NativeSizeT gdp_buf_peek(PointerByReference buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_drain(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:16</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_drain(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	int gdp_buf_drain(Pointer buf, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_drain(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:16</i>
	 */
	int gdp_buf_drain(PointerByReference buf, NativeSizeT sz);
	/**
	 * Original signature : <code>char* gdp_buf_getptr(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:18</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_getptr(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	Pointer gdp_buf_getptr(Pointer buf, NativeSizeT sz);
	/**
	 * Original signature : <code>char* gdp_buf_getptr(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:18</i>
	 */
	Pointer gdp_buf_getptr(PointerByReference buf, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_write(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:20</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_write(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
	@Deprecated 
	int gdp_buf_write(Pointer buf, Pointer in, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_write(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:20</i>
	 */
	int gdp_buf_write(PointerByReference buf, Pointer in, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_copy(gdp_buf_t*, gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:22</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_copy(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gdp_buf_copy(Pointer ibuf, Pointer obuf);
	/**
	 * Original signature : <code>int gdp_buf_copy(gdp_buf_t*, gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:22</i>
	 */
	int gdp_buf_copy(PointerByReference ibuf, PointerByReference obuf);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i><br>
	 * @deprecated use the safer methods {@link #gdp_buf_printf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gdp_buf_printf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int gdp_buf_printf(Pointer buf, Pointer fmt, Object... varArgs1);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i>
	 */
	int gdp_buf_printf(PointerByReference buf, String fmt, Object... varArgs1);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i>
	 */
	int gdp_buf_printf(PointerByReference buf, Pointer fmt, Object... varArgs1);
	/**
	 * Original signature : <code>void gdp_buf_dump(gdp_buf_t*, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:26</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_dump(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp02Library.FILE)} instead
	 */
	@Deprecated 
	void gdp_buf_dump(Pointer buf, Gdp02Library.FILE fp);
	/**
	 * Original signature : <code>void gdp_buf_dump(gdp_buf_t*, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:26</i>
	 */
	void gdp_buf_dump(PointerByReference buf, Gdp02Library.FILE fp);
	/**
	 * Original signature : <code>uint32_t gdp_buf_get_uint32(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:28</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_get_uint32(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gdp_buf_get_uint32(Pointer buf);
	/**
	 * Original signature : <code>uint32_t gdp_buf_get_uint32(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:28</i>
	 */
	int gdp_buf_get_uint32(PointerByReference buf);
	/**
	 * Original signature : <code>void gdp_buf_put_uint32(gdp_buf_t*, const uint32_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:30</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_put_uint32(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void gdp_buf_put_uint32(Pointer buf, int v);
	/**
	 * Original signature : <code>void gdp_buf_put_uint32(gdp_buf_t*, const uint32_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:30</i>
	 */
	void gdp_buf_put_uint32(PointerByReference buf, int v);
	/**
	 * Original signature : <code>uint64_t gdp_buf_get_uint48(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:32</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_get_uint48(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long gdp_buf_get_uint48(Pointer buf);
	/**
	 * Original signature : <code>uint64_t gdp_buf_get_uint48(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:32</i>
	 */
	long gdp_buf_get_uint48(PointerByReference buf);
	/**
	 * Original signature : <code>void gdp_buf_put_uint48(gdp_buf_t*, const uint64_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:34</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_put_uint48(com.sun.jna.ptr.PointerByReference, long)} instead
	 */
	@Deprecated 
	void gdp_buf_put_uint48(Pointer buf, long v);
	/**
	 * Original signature : <code>void gdp_buf_put_uint48(gdp_buf_t*, const uint64_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:34</i>
	 */
	void gdp_buf_put_uint48(PointerByReference buf, long v);
	/**
	 * Original signature : <code>uint64_t gdp_buf_get_uint64(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:36</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_get_uint64(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long gdp_buf_get_uint64(Pointer buf);
	/**
	 * Original signature : <code>uint64_t gdp_buf_get_uint64(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:36</i>
	 */
	long gdp_buf_get_uint64(PointerByReference buf);
	/**
	 * Original signature : <code>void gdp_buf_put_uint64(gdp_buf_t*, const uint64_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:38</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_put_uint64(com.sun.jna.ptr.PointerByReference, long)} instead
	 */
	@Deprecated 
	void gdp_buf_put_uint64(Pointer buf, long v);
	/**
	 * Original signature : <code>void gdp_buf_put_uint64(gdp_buf_t*, const uint64_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:38</i>
	 */
	void gdp_buf_put_uint64(PointerByReference buf, long v);
	/**
	 * Original signature : <code>void gdp_buf_get_timespec(gdp_buf_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:40</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_get_timespec(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
	@Deprecated 
	void gdp_buf_get_timespec(Pointer buf, EP_TIME_SPEC ts);
	/**
	 * Original signature : <code>void gdp_buf_get_timespec(gdp_buf_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:40</i>
	 */
	void gdp_buf_get_timespec(PointerByReference buf, EP_TIME_SPEC ts);
	/**
	 * Original signature : <code>void gdp_buf_put_timespec(gdp_buf_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:42</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_put_timespec(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
	@Deprecated 
	void gdp_buf_put_timespec(Pointer buf, EP_TIME_SPEC ts);
	/**
	 * Original signature : <code>void gdp_buf_put_timespec(gdp_buf_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:42</i>
	 */
	void gdp_buf_put_timespec(PointerByReference buf, EP_TIME_SPEC ts);
	/**
	 * Original signature : <code>void _gdp_stat_init()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:1</i>
	 */
	void _gdp_stat_init();
	/**
	 * flag bits for allocation<br>
	 * allocate from heap w/ flags<br>
	 * Original signature : <code>void* ep_mem_ialloc(size_t, void*, uint32_t, const char*, int)</code><br>
	 * @param nbytes bytes to alloc<br>
	 * @param curmem if reallocing<br>
	 * @param flags mod flags<br>
	 * @param file dbg: file name<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:19</i><br>
	 * @deprecated use the safer methods {@link #ep_mem_ialloc(com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer, int, java.lang.String, int)} and {@link #ep_mem_ialloc(com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer ep_mem_ialloc(NativeSizeT nbytes, Pointer curmem, int flags, Pointer file, int line);
	/**
	 * flag bits for allocation<br>
	 * allocate from heap w/ flags<br>
	 * Original signature : <code>void* ep_mem_ialloc(size_t, void*, uint32_t, const char*, int)</code><br>
	 * @param nbytes bytes to alloc<br>
	 * @param curmem if reallocing<br>
	 * @param flags mod flags<br>
	 * @param file dbg: file name<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:19</i>
	 */
	Pointer ep_mem_ialloc(NativeSizeT nbytes, Pointer curmem, int flags, String file, int line);
	/**
	 * dup string from heap w/ flags<br>
	 * Original signature : <code>char* ep_mem_istrdup(const char*, ssize_t, uint32_t, const char*, int)</code><br>
	 * @param s string to copy<br>
	 * @param slen max length of s<br>
	 * @param flags action modifiers<br>
	 * @param file dbg: file name<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:28</i><br>
	 * @deprecated use the safer methods {@link #ep_mem_istrdup(java.lang.String, com.sun.jna.NativeLong, int, java.lang.String, int)} and {@link #ep_mem_istrdup(com.sun.jna.Pointer, com.sun.jna.NativeLong, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer ep_mem_istrdup(Pointer s, NativeLong slen, int flags, Pointer file, int line);
	/**
	 * dup string from heap w/ flags<br>
	 * Original signature : <code>char* ep_mem_istrdup(const char*, ssize_t, uint32_t, const char*, int)</code><br>
	 * @param s string to copy<br>
	 * @param slen max length of s<br>
	 * @param flags action modifiers<br>
	 * @param file dbg: file name<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:28</i>
	 */
	Pointer ep_mem_istrdup(String s, NativeLong slen, int flags, String file, int line);
	/**
	 * for function pointers<br>
	 * Original signature : <code>void* ep_mem_malloc_f(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:35</i>
	 */
	Pointer ep_mem_malloc_f(NativeSizeT nbytes);
	/**
	 * Original signature : <code>void* ep_mem_zalloc_f(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:37</i>
	 */
	Pointer ep_mem_zalloc_f(NativeSizeT nbytes);
	/**
	 * Original signature : <code>void* ep_mem_ralloc_f(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:39</i>
	 */
	Pointer ep_mem_ralloc_f(NativeSizeT nbytes);
	/**
	 * trash memory<br>
	 * Original signature : <code>void ep_mem_trash(void*, size_t)</code><br>
	 * @param p ptr to memory<br>
	 * <i>native declaration : src/gdp/ep/ep_mem.h:45</i>
	 */
	void ep_mem_trash(Pointer p, NativeSizeT nbytes);
	/**
	 * event types<br>
	 * get event (caller must free!)<br>
	 * Original signature : <code>gdp_event_t* gdp_event_next(gdp_gcl_t*, EP_TIME_SPEC*)</code><br>
	 * @param gcl if set wait for this GCL only<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:49</i><br>
	 * @deprecated use the safer method {@link #gdp_event_next(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
	@Deprecated 
	PointerByReference gdp_event_next(Pointer gcl, EP_TIME_SPEC timeout);
	/**
	 * event types<br>
	 * get event (caller must free!)<br>
	 * Original signature : <code>gdp_event_t* gdp_event_next(gdp_gcl_t*, EP_TIME_SPEC*)</code><br>
	 * @param gcl if set wait for this GCL only<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:49</i>
	 */
	PointerByReference gdp_event_next(PointerByReference gcl, EP_TIME_SPEC timeout);
	/**
	 * free event from gdp_event_next<br>
	 * Original signature : <code>EP_STAT gdp_event_free(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:54</i><br>
	 * @deprecated use the safer method {@link #gdp_event_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_event_free(Pointer gev);
	/**
	 * free event from gdp_event_next<br>
	 * Original signature : <code>EP_STAT gdp_event_free(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:54</i>
	 */
	ByValue gdp_event_free(PointerByReference gev);
	/**
	 * get the type of the event<br>
	 * Original signature : <code>int gdp_event_gettype(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:59</i><br>
	 * @deprecated use the safer method {@link #gdp_event_gettype(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int gdp_event_gettype(Pointer gev);
	/**
	 * get the type of the event<br>
	 * Original signature : <code>int gdp_event_gettype(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:59</i>
	 */
	int gdp_event_gettype(PointerByReference gev);
	/**
	 * get status code<br>
	 * Original signature : <code>EP_STAT gdp_event_getstat(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:64</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getstat(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_event_getstat(Pointer gev);
	/**
	 * get status code<br>
	 * Original signature : <code>EP_STAT gdp_event_getstat(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:64</i>
	 */
	ByValue gdp_event_getstat(PointerByReference gev);
	/**
	 * get the GCL of the event<br>
	 * Original signature : <code>gdp_gcl_t* gdp_event_getgcl(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:69</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getgcl(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference gdp_event_getgcl(Pointer gev);
	/**
	 * get the GCL of the event<br>
	 * Original signature : <code>gdp_gcl_t* gdp_event_getgcl(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:69</i>
	 */
	PointerByReference gdp_event_getgcl(PointerByReference gev);
	/**
	 * get the datum of the event<br>
	 * Original signature : <code>void** gdp_event_getdatum(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:74</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getdatum(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference gdp_event_getdatum(Pointer gev);
	/**
	 * get the datum of the event<br>
	 * Original signature : <code>void** gdp_event_getdatum(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:74</i>
	 */
	PointerByReference gdp_event_getdatum(PointerByReference gev);
	/**
	 * get user data (callback only)<br>
	 * Original signature : <code>void* gdp_event_getudata(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:79</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getudata(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer gdp_event_getudata(Pointer gev);
	/**
	 * get user data (callback only)<br>
	 * Original signature : <code>void* gdp_event_getudata(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:79</i>
	 */
	Pointer gdp_event_getudata(PointerByReference gev);
	/**
	 * initialize the library<br>
	 * Original signature : <code>EP_STAT gdp_init(const char*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:88</i><br>
	 * @deprecated use the safer methods {@link #gdp_init(java.lang.String)} and {@link #gdp_init(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_init(Pointer gdpd_addr);
	/**
	 * initialize the library<br>
	 * Original signature : <code>EP_STAT gdp_init(const char*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:88</i>
	 */
	ByValue gdp_init(String gdpd_addr);
	/**
	 * run event loop (normally run from gdp_init; never returns)<br>
	 * Original signature : <code>void* gdp_run_accept_event_loop(void*)</code><br>
	 * @param voidPtr1 unused<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:94</i>
	 */
	Pointer gdp_run_accept_event_loop(Pointer voidPtr1);
	/**
	 * create a new GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_create(gdp_name_t, gdp_name_t, gdp_gclmd_t*, gdp_gcl_t**)</code><br>
	 * @param gdp_gclmd_tPtr1 pointer to metadata object<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:100</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_create(java.nio.ByteBuffer, java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gdp_gcl_create(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_create(Pointer gclname, Pointer logdname, Pointer gdp_gclmd_tPtr1, PointerByReference pgcl);
	/**
	 * create a new GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_create(gdp_name_t, gdp_name_t, gdp_gclmd_t*, gdp_gcl_t**)</code><br>
	 * @param gdp_gclmd_tPtr1 pointer to metadata object<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:100</i>
	 */
	ByValue gdp_gcl_create(ByteBuffer gclname, ByteBuffer logdname, PointerByReference gdp_gclmd_tPtr1, PointerByReference pgcl);
	/**
	 * create a new GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_create(gdp_name_t, gdp_name_t, gdp_gclmd_t*, gdp_gcl_t**)</code><br>
	 * @param gdp_gclmd_tPtr1 pointer to metadata object<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:100</i>
	 */
	ByValue gdp_gcl_create(Pointer gclname, Pointer logdname, PointerByReference gdp_gclmd_tPtr1, PointerByReference pgcl);
	/**
	 * open an existing GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_open(gdp_name_t, gdp_iomode_t, gdp_qos_req_t*, gdp_gcl_t**)</code><br>
	 * @param name GCL name to open<br>
	 * @param rw read/write (append)<br>
	 * @param qos QoS requirements (placeholder)<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:108</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_open(java.nio.ByteBuffer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gdp_gcl_open(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_open(Pointer name, int rw, Pointer qos, PointerByReference gcl);
	/**
	 * open an existing GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_open(gdp_name_t, gdp_iomode_t, gdp_qos_req_t*, gdp_gcl_t**)</code><br>
	 * @param name GCL name to open<br>
	 * @param rw read/write (append)<br>
	 * @param qos QoS requirements (placeholder)<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:108</i>
	 */
	ByValue gdp_gcl_open(ByteBuffer name, int rw, PointerByReference qos, PointerByReference gcl);
	/**
	 * open an existing GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_open(gdp_name_t, gdp_iomode_t, gdp_qos_req_t*, gdp_gcl_t**)</code><br>
	 * @param name GCL name to open<br>
	 * @param rw read/write (append)<br>
	 * @param qos QoS requirements (placeholder)<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:108</i>
	 */
	ByValue gdp_gcl_open(Pointer name, int rw, PointerByReference qos, PointerByReference gcl);
	/**
	 * close an open GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_close(gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:113</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_close(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_close(Pointer gcl);
	/**
	 * close an open GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_close(gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:113</i>
	 */
	ByValue gdp_gcl_close(PointerByReference gcl);
	/**
	 * append to a writable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_append(gdp_gcl_t*, void**)</code><br>
	 * @param gcl writable GCL handle<br>
	 * @param voidPtrPtr1 message to write<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:120</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_append(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_append(Pointer gcl, PointerByReference voidPtrPtr1);
	/**
	 * append to a writable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_append(gdp_gcl_t*, void**)</code><br>
	 * @param gcl writable GCL handle<br>
	 * @param voidPtrPtr1 message to write<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:120</i>
	 */
	ByValue gdp_gcl_append(PointerByReference gcl, PointerByReference voidPtrPtr1);
	/**
	 * async version<br>
	 * Original signature : <code>EP_STAT gdp_gcl_append_async(gdp_gcl_t*, void**, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl writable GCL handle<br>
	 * @param voidPtrPtr1 message to write<br>
	 * @param gdp_event_cbfunc_t1 callback function<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:128</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_append_async(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp02Library.gdp_event_cbfunc_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_append_async(Pointer gcl, PointerByReference voidPtrPtr1, Gdp02Library.gdp_event_cbfunc_t gdp_event_cbfunc_t1, Pointer udata);
	/**
	 * async version<br>
	 * Original signature : <code>EP_STAT gdp_gcl_append_async(gdp_gcl_t*, void**, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl writable GCL handle<br>
	 * @param voidPtrPtr1 message to write<br>
	 * @param gdp_event_cbfunc_t1 callback function<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:128</i>
	 */
	ByValue gdp_gcl_append_async(PointerByReference gcl, PointerByReference voidPtrPtr1, Gdp02Library.gdp_event_cbfunc_t gdp_event_cbfunc_t1, Pointer udata);
	/**
	 * read from a readable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_read(gdp_gcl_t*, gdp_recno_t, void**)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param recno GCL record number<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:135</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_read(com.sun.jna.ptr.PointerByReference, long, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_read(Pointer gcl, long recno, PointerByReference datum);
	/**
	 * read from a readable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_read(gdp_gcl_t*, gdp_recno_t, void**)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param recno GCL record number<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:135</i>
	 */
	ByValue gdp_gcl_read(PointerByReference gcl, long recno, PointerByReference datum);
	/**
	 * Original signature : <code>EP_STAT gdp_gcl_subscribe(gdp_gcl_t*, gdp_recno_t, int32_t, EP_TIME_SPEC*, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param numrecs number of records to retrieve<br>
	 * @param timeout timeout<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:145</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_subscribe(com.sun.jna.ptr.PointerByReference, long, int, org.terraswarm.gdp.EP_TIME_SPEC, org.terraswarm.gdp.Gdp02Library.gdp_event_cbfunc_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_subscribe(Pointer gcl, long start, int numrecs, EP_TIME_SPEC timeout, Gdp02Library.gdp_event_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * Original signature : <code>EP_STAT gdp_gcl_subscribe(gdp_gcl_t*, gdp_recno_t, int32_t, EP_TIME_SPEC*, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param numrecs number of records to retrieve<br>
	 * @param timeout timeout<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:145</i>
	 */
	ByValue gdp_gcl_subscribe(PointerByReference gcl, long start, int numrecs, EP_TIME_SPEC timeout, Gdp02Library.gdp_event_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * read multiple records (no subscriptions)<br>
	 * Original signature : <code>EP_STAT gdp_gcl_multiread(gdp_gcl_t*, gdp_recno_t, int32_t, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param numrecs number of records to retrieve<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:153</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_multiread(com.sun.jna.ptr.PointerByReference, long, int, org.terraswarm.gdp.Gdp02Library.gdp_event_cbfunc_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_multiread(Pointer gcl, long start, int numrecs, Gdp02Library.gdp_event_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * read multiple records (no subscriptions)<br>
	 * Original signature : <code>EP_STAT gdp_gcl_multiread(gdp_gcl_t*, gdp_recno_t, int32_t, gdp_event_cbfunc_t, void*)</code><br>
	 * @param gcl readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param numrecs number of records to retrieve<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:153</i>
	 */
	ByValue gdp_gcl_multiread(PointerByReference gcl, long start, int numrecs, Gdp02Library.gdp_event_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * read metadata<br>
	 * Original signature : <code>EP_STAT gdp_gcl_getmetadata(gdp_gcl_t*, gdp_gclmd_t**)</code><br>
	 * @param gcl GCL handle<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:159</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_getmetadata(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gcl_getmetadata(Pointer gcl, PointerByReference gmdp);
	/**
	 * read metadata<br>
	 * Original signature : <code>EP_STAT gdp_gcl_getmetadata(gdp_gcl_t*, gdp_gclmd_t**)</code><br>
	 * @param gcl GCL handle<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:159</i>
	 */
	ByValue gdp_gcl_getmetadata(PointerByReference gcl, PointerByReference gmdp);
	/**
	 * XXX: should this be in a more generic "getstat" function?<br>
	 * Original signature : <code>gdp_name_t* gdp_gcl_getname(const gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:164</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_getname(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer gdp_gcl_getname(Pointer gcl);
	/**
	 * XXX: should this be in a more generic "getstat" function?<br>
	 * Original signature : <code>gdp_name_t* gdp_gcl_getname(const gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:164</i>
	 */
	Pointer gdp_gcl_getname(PointerByReference gcl);
	/**
	 * check to see if a GDP object name is valid<br>
	 * Original signature : <code>bool gdp_name_is_valid(const gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:169</i><br>
	 * @deprecated use the safer methods {@link #gdp_name_is_valid(java.nio.ByteBuffer)} and {@link #gdp_name_is_valid(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	byte gdp_name_is_valid(Pointer gdp_name_t1);
	/**
	 * check to see if a GDP object name is valid<br>
	 * Original signature : <code>bool gdp_name_is_valid(const gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:169</i>
	 */
	byte gdp_name_is_valid(ByteBuffer gdp_name_t1);
	/**
	 * print a GCL (for debugging)<br>
	 * Original signature : <code>void gdp_gcl_print(const gdp_gcl_t*, FILE*)</code><br>
	 * @param gcl GCL handle to print<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:175</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_print(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp02Library.FILE)} instead
	 */
	@Deprecated 
	void gdp_gcl_print(Pointer gcl, Gdp02Library.FILE fp);
	/**
	 * print a GCL (for debugging)<br>
	 * Original signature : <code>void gdp_gcl_print(const gdp_gcl_t*, FILE*)</code><br>
	 * @param gcl GCL handle to print<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:175</i>
	 */
	void gdp_gcl_print(PointerByReference gcl, Gdp02Library.FILE fp);
	/**
	 * make a printable GDP object name from a binary version<br>
	 * Original signature : <code>char* gdp_printable_name(const gdp_name_t, gdp_pname_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:180</i><br>
	 * @deprecated use the safer methods {@link #gdp_printable_name(java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gdp_printable_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer gdp_printable_name(Pointer internal, Pointer external);
	/**
	 * make a printable GDP object name from a binary version<br>
	 * Original signature : <code>char* gdp_printable_name(const gdp_name_t, gdp_pname_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:180</i>
	 */
	Pointer gdp_printable_name(ByteBuffer internal, ByteBuffer external);
	/**
	 * print an internal name for human use<br>
	 * Original signature : <code>void gdp_print_name(const gdp_name_t, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:185</i><br>
	 * @deprecated use the safer methods {@link #gdp_print_name(java.nio.ByteBuffer, org.terraswarm.gdp.Gdp02Library.FILE)} and {@link #gdp_print_name(com.sun.jna.Pointer, org.terraswarm.gdp.Gdp02Library.FILE)} instead
	 */
	@Deprecated 
	void gdp_print_name(Pointer internal, Gdp02Library.FILE fp);
	/**
	 * print an internal name for human use<br>
	 * Original signature : <code>void gdp_print_name(const gdp_name_t, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:185</i>
	 */
	void gdp_print_name(ByteBuffer internal, Gdp02Library.FILE fp);
	/**
	 * make a binary GDP object name from a printable version<br>
	 * Original signature : <code>EP_STAT gdp_internal_name(const gdp_pname_t, gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:190</i><br>
	 * @deprecated use the safer methods {@link #gdp_internal_name(java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gdp_internal_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_internal_name(Pointer external, Pointer internal);
	/**
	 * make a binary GDP object name from a printable version<br>
	 * Original signature : <code>EP_STAT gdp_internal_name(const gdp_pname_t, gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:190</i>
	 */
	ByValue gdp_internal_name(ByteBuffer external, ByteBuffer internal);
	/**
	 * parse a (possibly human-friendly) GDP object name<br>
	 * Original signature : <code>EP_STAT gdp_parse_name(const char*, gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:195</i><br>
	 * @deprecated use the safer methods {@link #gdp_parse_name(java.lang.String, java.nio.ByteBuffer)} and {@link #gdp_parse_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_parse_name(Pointer ext, Pointer internal);
	/**
	 * parse a (possibly human-friendly) GDP object name<br>
	 * Original signature : <code>EP_STAT gdp_parse_name(const char*, gdp_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:195</i>
	 */
	ByValue gdp_parse_name(String ext, ByteBuffer internal);
	/**
	 * create a new metadata set<br>
	 * Original signature : <code>gdp_gclmd_t* gdp_gclmd_new()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:200</i>
	 */
	PointerByReference gdp_gclmd_new();
	/**
	 * free a metadata set<br>
	 * Original signature : <code>void gdp_gclmd_free(gdp_gclmd_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:205</i><br>
	 * @deprecated use the safer method {@link #gdp_gclmd_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void gdp_gclmd_free(Pointer gmd);
	/**
	 * free a metadata set<br>
	 * Original signature : <code>void gdp_gclmd_free(gdp_gclmd_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:205</i>
	 */
	void gdp_gclmd_free(PointerByReference gmd);
	/**
	 * add an entry to a metadata set<br>
	 * Original signature : <code>EP_STAT gdp_gclmd_add(gdp_gclmd_t*, gdp_gclmd_id_t, size_t, const void*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:210</i><br>
	 * @deprecated use the safer method {@link #gdp_gclmd_add(com.sun.jna.ptr.PointerByReference, int, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue gdp_gclmd_add(Pointer gmd, int id, NativeSizeT len, Pointer data);
	/**
	 * add an entry to a metadata set<br>
	 * Original signature : <code>EP_STAT gdp_gclmd_add(gdp_gclmd_t*, gdp_gclmd_id_t, size_t, const void*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:210</i>
	 */
	ByValue gdp_gclmd_add(PointerByReference gmd, int id, NativeSizeT len, Pointer data);
	/**
	 * get an entry from a metadata set<br>
	 * Original signature : <code>EP_STAT gdp_gclmd_get(gdp_gclmd_t*, int, gdp_gclmd_id_t*, size_t*, const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:215</i><br>
	 * @deprecated use the safer methods {@link #gdp_gclmd_get(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference, com.sun.jna.ptr.PointerByReference)} and {@link #gdp_gclmd_get(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	ByValue gdp_gclmd_get(Pointer gmd, int indx, IntByReference id,  NativeSizeT len, /* Updated by cxh in makefile*/ PointerByReference data);
	/**
	 * get an entry from a metadata set<br>
	 * Original signature : <code>EP_STAT gdp_gclmd_get(gdp_gclmd_t*, int, gdp_gclmd_id_t*, size_t*, const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:215</i>
	 */
	ByValue gdp_gclmd_get(PointerByReference gmd, int indx, IntBuffer id,  NativeSizeT len, /* Updated by cxh in makefile*/ PointerByReference data);
	/**
	 * get an entry from a metadata set<br>
	 * Original signature : <code>EP_STAT gdp_gclmd_get(gdp_gclmd_t*, int, gdp_gclmd_id_t*, size_t*, const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:215</i>
	 */
	ByValue gdp_gclmd_get(PointerByReference gmd, int indx, IntByReference id,  NativeSizeT len, /* Updated by cxh in makefile*/ PointerByReference data);
	/**
	 * print metadata set (for debugging)<br>
	 * Original signature : <code>void gdp_gclmd_print(gdp_gclmd_t*, FILE*, int)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:220</i><br>
	 * @deprecated use the safer method {@link #gdp_gclmd_print(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp02Library.FILE, int)} instead
	 */
	@Deprecated 
	void gdp_gclmd_print(Pointer gmd, Gdp02Library.FILE fp, int detail);
	/**
	 * print metadata set (for debugging)<br>
	 * Original signature : <code>void gdp_gclmd_print(gdp_gclmd_t*, FILE*, int)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:220</i>
	 */
	void gdp_gclmd_print(PointerByReference gmd, Gdp02Library.FILE fp, int detail);
	/**
	 * allocate a new message<br>
	 * Original signature : <code>void** gdp_datum_new()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:225</i>
	 */
	PointerByReference gdp_datum_new();
	/**
	 * free a message<br>
	 * Original signature : <code>void gdp_datum_free(void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:230</i>
	 */
	void gdp_datum_free(PointerByReference voidPtrPtr1);
	/**
	 * print out data record<br>
	 * Original signature : <code>void gdp_datum_print(const void**, FILE*, uint32_t)</code><br>
	 * @param datum message to print<br>
	 * @param fp file to print it to<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:237</i>
	 */
	void gdp_datum_print(PointerByReference datum, Gdp02Library.FILE fp, int flags);
	/**
	 * get the record number from a datum<br>
	 * Original signature : <code>gdp_recno_t gdp_datum_getrecno(const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:242</i>
	 */
	long gdp_datum_getrecno(PointerByReference datum);
	/**
	 * get the timestamp from a datum<br>
	 * Original signature : <code>void gdp_datum_getts(const void**, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:247</i>
	 */
	void gdp_datum_getts(PointerByReference datum, EP_TIME_SPEC ts);
	/**
	 * get the data length from a datum<br>
	 * Original signature : <code>size_t gdp_datum_getdlen(const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:252</i>
	 */
	NativeSizeT gdp_datum_getdlen(PointerByReference datum);
	/**
	 * get the data buffer from a datum<br>
	 * Original signature : <code>gdp_buf_t* gdp_datum_getbuf(const void**)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:257</i>
	 */
	PointerByReference gdp_datum_getbuf(PointerByReference datum);
	/**
	 * support functions<br>
	 * Original signature : <code>int ep_dbg_flaglevel(EP_DBG*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:20</i>
	 */
	int ep_dbg_flaglevel(EP_DBG f);
	/**
	 * initialization<br>
	 * Original signature : <code>void ep_dbg_init()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:25</i>
	 */
	void ep_dbg_init();
	/**
	 * setting/fetching debug output file<br>
	 * Original signature : <code>void ep_dbg_setfile(FILE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:30</i>
	 */
	void ep_dbg_setfile(Gdp02Library.FILE fp);
	/**
	 * Original signature : <code>FILE* ep_dbg_getfile()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:32</i>
	 */
	Gdp02Library.FILE ep_dbg_getfile();
	/**
	 * setting debug flags<br>
	 * Original signature : <code>void ep_dbg_set(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:37</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_set(java.lang.String)} and {@link #ep_dbg_set(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void ep_dbg_set(Pointer s);
	/**
	 * setting debug flags<br>
	 * Original signature : <code>void ep_dbg_set(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:37</i>
	 */
	void ep_dbg_set(String s);
	/**
	 * Original signature : <code>void ep_dbg_setto(const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:39</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_setto(java.lang.String, int)} and {@link #ep_dbg_setto(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	void ep_dbg_setto(Pointer pat, int lev);
	/**
	 * Original signature : <code>void ep_dbg_setto(const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:39</i>
	 */
	void ep_dbg_setto(String pat, int lev);
	/**
	 * printing debug output (uses stddbg)<br>
	 * Original signature : <code>void ep_dbg_printf(const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:44</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_printf(java.lang.String, java.lang.Object)} and {@link #ep_dbg_printf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	void ep_dbg_printf(Pointer fmt, Object... varArgs1);
	/**
	 * printing debug output (uses stddbg)<br>
	 * Original signature : <code>void ep_dbg_printf(const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:44</i>
	 */
	void ep_dbg_printf(String fmt, Object... varArgs1);
	/**
	 * crackarg parsing<br>
	 * Original signature : <code>EP_STAT epCavDebug(const char*, void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:49</i><br>
	 * @deprecated use the safer methods {@link #epCavDebug(java.lang.String, com.sun.jna.Pointer)} and {@link #epCavDebug(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	ByValue epCavDebug(Pointer vp, Pointer rp);
	/**
	 * crackarg parsing<br>
	 * Original signature : <code>EP_STAT epCavDebug(const char*, void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:49</i>
	 */
	ByValue epCavDebug(String vp, Pointer rp);
	public static class EP_THR_COND extends PointerType {
		public EP_THR_COND(Pointer address) {
			super(address);
		}
		public EP_THR_COND() {
			super();
		}
	};
	public static class EP_STAT_HANDLE extends PointerType {
		public EP_STAT_HANDLE(Pointer address) {
			super(address);
		}
		public EP_STAT_HANDLE() {
			super();
		}
	};
	public static class EP_THR_RWLOCK extends PointerType {
		public EP_THR_RWLOCK(Pointer address) {
			super(address);
		}
		public EP_THR_RWLOCK() {
			super();
		}
	};
	public static class gdp_gcl_t extends PointerType {
		public gdp_gcl_t(Pointer address) {
			super(address);
		}
		public gdp_gcl_t() {
			super();
		}
	};
	public static class EP_THR_MUTEX extends PointerType {
		public EP_THR_MUTEX(Pointer address) {
			super(address);
		}
		public EP_THR_MUTEX() {
			super();
		}
	};
	public static class gdp_gclmd_t extends PointerType {
		public gdp_gclmd_t(Pointer address) {
			super(address);
		}
		public gdp_gclmd_t() {
			super();
		}
	};
	public static class gdp_event_t extends PointerType {
		public gdp_event_t(Pointer address) {
			super(address);
		}
		public gdp_event_t() {
			super();
		}
	};
	public static class EP_STAT_HANDLER_FUNCP extends PointerType {
		public EP_STAT_HANDLER_FUNCP(Pointer address) {
			super(address);
		}
		public EP_STAT_HANDLER_FUNCP() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class gdp_buf_t extends PointerType {
		public gdp_buf_t(Pointer address) {
			super(address);
		}
		public gdp_buf_t() {
			super();
		}
	};
	public static class gdp_qos_req_t extends PointerType {
		public gdp_qos_req_t(Pointer address) {
			super(address);
		}
		public gdp_qos_req_t() {
			super();
		}
	};
}
