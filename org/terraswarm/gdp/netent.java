package org.terraswarm.gdp;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * Description of data base entry for a single network.  NOTE: here a<br>
 * poor assumption is made.  The network number is expected to fit<br>
 * into an unsigned long int variable.<br>
 * <i>native declaration : /usr/include/bits/netdb.h:10</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class netent extends Structure {
	/**
	 * Official name of network.<br>
	 * C type : char*
	 */
	public Pointer n_name;
	/**
	 * Alias list.<br>
	 * C type : char**
	 */
	public PointerByReference n_aliases;
	/** Net address type. */
	public int n_addrtype;
	/** Network number. */
	public int n_net;
	public netent() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("n_name", "n_aliases", "n_addrtype", "n_net");
	}
	/**
	 * @param n_name Official name of network.<br>
	 * C type : char*<br>
	 * @param n_aliases Alias list.<br>
	 * C type : char**<br>
	 * @param n_addrtype Net address type.<br>
	 * @param n_net Network number.
	 */
	public netent(Pointer n_name, PointerByReference n_aliases, int n_addrtype, int n_net) {
		super();
		this.n_name = n_name;
		this.n_aliases = n_aliases;
		this.n_addrtype = n_addrtype;
		this.n_net = n_net;
	}
	public netent(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends netent implements Structure.ByReference {
		
	};
	public static class ByValue extends netent implements Structure.ByValue {
		
	};
}
