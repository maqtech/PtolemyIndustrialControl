package org.terraswarm.gdp;
// // import com.ochafik.lang.jnaerator.runtime.CharByReference;
import org.ptolemy.fmi.NativeSizeT; //Use NativeSizeT intead of NativeSize
// // import com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference; // Commented out by makefile because NativeSizeTByReference is not in jna.
// import com.ochafik.lang.jnaerator.runtime.globals.GlobalInt;
// import com.ochafik.lang.jnaerator.runtime.globals.GlobalPointerType;
// import com.ochafik.lang.jnaerator.runtime.globals.GlobalStruct;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.WString;
import com.sun.jna.ptr.ByteByReference;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.ptr.ShortByReference;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
import org.terraswarm.gdp.addrinfo.ByReference;
/**
 * JNA Wrapper for library <b>gdp.1.0</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Gdp10Library extends Library {
	public static final String JNA_LIBRARY_NAME = "gdp.1.0";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Gdp10Library.JNA_LIBRARY_NAME);
	public static final Gdp10Library INSTANCE = (Gdp10Library)Native.loadLibrary(Gdp10Library.JNA_LIBRARY_NAME, Gdp10Library.class);
	/**
	 * <i>native declaration : src/gdp/gdp/gdp.h:25</i><br>
	 * enum values
	 */
	public static interface gdp_iomode_t {
		/**
		 * no mode specified<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:20</i>
		 */
		public static final int GDP_MODE_ANY = 0;
		/**
		 * read only<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:22</i>
		 */
		public static final int GDP_MODE_RO = 1;
		/**
		 * append only<br>
		 * <i>native declaration : src/gdp/gdp/gdp.h:24</i>
		 */
		public static final int GDP_MODE_AO = 2;
	};
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V7_ILP32_OFF32 = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TIMER_MAX = (int)52;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_CHARCLASS_NAME_MAX = (int)14;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int F_LOCK = (int)1;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LP64_OFF64_LDFLAGS = (int)29;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MONOTONIC_CLOCK = (int)74;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int F_TLOCK = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdFAST8 = (String)"";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CREATED = (int)201;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int F_TEST = (int)3;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_ONCE_SIG_init = (int)0x30B1BCBA;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_NPROCESSORS_ONLN = (int)58;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SPORADIC_SERVER = (int)81;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_SYSTEM = (int)11;
	/**
	 * define<br>
	 * Conversion Error : { 0x30B1BCBA, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x30B1BCBA, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SPIN_LOCKS = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SPAWN = (int)79;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_GETGR_R_SIZE_MAX = (int)70;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIx64 = (String)"q";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final long OFF_MIN = (long)(0x7fffffffffffffffL - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS_ACCOUNTING = (int)(-1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final char SCOPE_DELIMITER = (char)'%';
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = (int)11;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_SENDMAIL = (int)0x102;
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((4) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((4) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTACCEPTABLE = (int)406;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST16_MIN = (int)-32768;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((203) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((203) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((403) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((403) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((5) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((5) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_64BITPTR = (int)0;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_MAX_INPUT = (int)255;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LP64_OFF64_LDFLAGS = (int)9;
	/**
	 * define<br>
	 * Conversion Error : { 0x3CB0B1BB, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x3CB0B1BB, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_IOV_MAX = (int)56;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdLEAST16 = (String)"hd";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_BC_BASE_MAX = (int)9;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdPTR = (String)"ld";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XBS5_LPBIG_OFFBIG = (int)125;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS_TRACK = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LPBIG_OFFBIG_CFLAGS = (int)32;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxPTR = (String)"lx";
	/** <i>native declaration : src/gdp/ep/ep.h</i> */
	public static final int EP_LIB_USEPTHREADS = (int)0x00000001;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_BARRIERS = (int)66;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXFAST32 = (String)"X";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_RTSIG_MAX = (int)8;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdLEAST32 = (String)"d";
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_MODSHIFT = (int)10;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_ASYNCHRONOUS_IO = (int)(-1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INTPTR_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_CHILD_MAX = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SYNCHRONIZED_IO = (int)40;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SNBF = (int)0x0002;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRId8 = (String)"";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiFAST16 = (String)"hi";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_AIO_LISTIO_MAX = (int)42;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_SCOPE_PROCESS = (int)2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_DELAYTIMER_MAX = (int)45;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_ENH_I18N = (int)109;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TTY_NAME_MAX = (int)9;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_SETMAX = (int)255;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final long OFF_MAX = (long)0x7fffffffffffffffL;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V7_ILP32_OFFBIG = (int)(1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_DETBITS = (int)10;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int TRY_AGAIN = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuLEAST16 = (String)"hu";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = (int)13;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiFAST32 = (String)"i";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST16_MIN = (int)-32768;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_PRIO_NONE = (int)0;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_MEMORY = (int)6;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int L_ctermid = (int)1024;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_XCU_VERSION = (int)121;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIi8 = (String)"";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINTMAX_MAX = (long)-1L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_SPORADIC_SERVER = (int)92;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final String _PATH_NETWORKS = (String)"/etc/networks";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TIMERS = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIx16 = (String)"hx";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuLEAST32 = (String)"u";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXFAST16 = (String)"hX";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_CPUTIME = (int)84;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_FAIL = (int)4;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdLEAST8 = (String)"hhd";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_LINE_MAX = (int)2048;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_CLOCK_SELECTION = (int)67;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_CPUTIME = (int)(-1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_AIO_LISTIO_MAX = (int)2;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NO_DATA = (int)4;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIx32 = (String)"x";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MESSAGE_PASSING = (int)33;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_SCOPE_SYSTEM = (int)1;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT16_MIN = (int)-32768;
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((18) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((18) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_DESTRUCTOR_ITERATIONS = (int)85;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS_MESSAGE = (int)(-1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INTPTR_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_LEGACY = (int)110;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MOD_GENERIC = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SIGQUEUE_MAX = (int)51;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_USER_EVENT_MAX = (int)130;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int IOV_MAX = (int)1024;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LP64_OFF64_CFLAGS = (int)8;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdMAX = (String)"j";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIi16 = (String)"hi";
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDBOOL_H = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_OK = (int)(0);
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_USER = (int)0x001;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int __WORDSIZE = (int)32;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIo8 = (String)"";
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_FIRSTFIT_MUTEX_SIG_init = (int)0x32AAABA3;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT8_MAX = (int)255;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SYMLINK_MAX = (int)255;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_REALTIME_THREADS = (int)112;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIi32 = (String)"i";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXFAST64 = (String)"q";
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STRING_H = (int)1;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNd16 = (String)"hd";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNi16 = (String)"hi";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_FORBIDDEN = (int)403;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _V6_ILP32_OFFBIG = (int)(1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST16_MAX = (int)32767;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_ALL = (int)0x00000100;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_HOST_NAME_MAX = (int)255;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MEMORY_PROTECTION = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_PRIO_PROTECT = (int)88;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_SHM = (int)(1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SPAWN = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdLEAST8 = (String)"";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNi32 = (String)"i";
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_NORMAL = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = (int)6;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SEMAPHORES = (int)(-1);
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((11) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((11) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_FAMILY = (int)5;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_NGROUPS_MAX = (int)8;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_UNIX = (int)(1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int PTHREAD_DESTRUCTOR_ITERATIONS = (int)4;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = (int)5;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT_LEAST64_MAX = (long)-1L;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CANCEL_DISABLE = (int)0x00;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_VERSION = (int)116;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_ATTR_STACKSIZE = (int)200112;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuFAST32 = (String)"u";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_NUMERICSERV = (int)0x00001000;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_PIPE_BUF = (int)512;
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((12) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((12) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String __SCN_MAX_LENGTH_MODIFIER__ = (String)"j";
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((17) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((17) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_NODATA = (int)7;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNd64 = (String)"q";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SMOD = (int)0x2000;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT16_MAX = (int)32767;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_PRIO_PROTECT = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIu8 = (String)"";
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_INTTYPES_H = (int)1;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_AGAIN = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIi64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNd32 = (String)"d";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LP64_OFF64_LINTFLAGS = (int)31;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SAVED_IDS = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MAPPED_FILES = (int)47;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MONOTONIC_CLOCK = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_COLL_WEIGHTS_MAX = (int)13;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_RE_DUP_MAX = (int)255;
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((3) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((3) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = (int)35;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int PTHREAD_KEYS_MAX = (int)512;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIx8 = (String)"";
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_EPLIB = (int)0x100;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = (int)12;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_LP64_OFF64_LIBS = (int)10;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuFAST16 = (String)"hu";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_VERSION = (int)600;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_AIO_MAX = (int)1;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_PRIORITIZED_IO = (int)34;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_ATTR_STACKADDR = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS_CHECKPOINT = (int)(-1);
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((205) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((205) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_3_2 = (int)30200;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_3_1 = (int)30100;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_3_0 = (int)30000;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiFAST8 = (String)"hhi";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_RAW_SOCKETS = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SEM_NSEMS_MAX = (int)49;
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((502) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((502) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((505) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((505) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_RTSIG_MAX = (int)48;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_VALID = (int)203;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((413) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((413) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((8) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((8) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MEMLOCK = (int)30;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_NA = (int)9999;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_PRIORITY_SCHEDULING = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_FSYNC = (int)38;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuLEAST8 = (String)"";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXFAST8 = (String)"";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final String P_tmpdir = (String)"/var/tmp/";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MEMLOCK_RANGE = (int)31;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_RAW_SOCKETS = (int)119;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT16_MAX = (int)65535;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNx16 = (String)"hx";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SYMLOOP_MAX = (int)8;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int L_tmpnam = (int)1024;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_EXPR_NEST_MAX = (int)32;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SAVED_IDS = (int)7;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxFAST8 = (String)"hhx";
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((9) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((9) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_LEGACY = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS = (int)(-1);
	/** <i>native declaration : /usr/include/pthread.h</i> */
// 	public static final Pointer PTHREAD_CANCELED = (Pointer)1;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiPTR = (String)"li";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT64_MAX = (long)9223372036854775807L;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_REALTIME = (int)(-1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_ERROR = (int)(5);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_UPE = (int)25;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTIMPL = (int)501;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_NONAME = (int)8;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int __ILP32_OFFBIG = (int)(1);
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_ERRORCHECK = (int)1;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((406) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((406) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIu16 = (String)"hu";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XBS5_ILP32_OFF32 = (int)122;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFFBIG_CFLAGS = (int)24;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxLEAST8 = (String)"hhx";
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final String PRIgdp_rid = (String)"u";
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((201) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((201) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((13) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((13) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoFAST8 = (String)"";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_LINK_MAX = (int)8;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_PROXYNOTSUP = (int)505;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SOFF = (int)0x1000;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_ASYNCHRONOUS_IO = (int)28;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST8_MIN = (int)-128;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SIGQUEUE_MAX = (int)32;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_EXPLICIT_SCHED = (int)2;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_EQUIV_CLASS_MAX = (int)2;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((200) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((200) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SMBF = (int)0x0080;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_ATEXIT_MAX = (int)107;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((2) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((2) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int BUFSIZ = (int)1024;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_SYS_MAX = (int)129;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SHELL = (int)200112;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String __PRI_8_LENGTH_MODIFIER__ = (String)"";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_VERSION = (int)8;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final String _PATH_HEQUIV = (String)"/etc/hosts.equiv";
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiFAST16 = (String)"hi";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SWR = (int)0x0008;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFFBIG_LIBS = (int)26;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_HOST_NAME_MAX = (int)72;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_RWLOCK_SIG_init = (int)0x2DA8B3B4;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_NOTFOUND = (int)404;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiFAST32 = (String)"i";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_XCU_VERSION = (int)4;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_LINE_MAX = (int)15;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_ERRORCHECK_MUTEX_SIG_init = (int)0x32AAABA1;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDLIB_H = (int)1;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_STREAM_MAX = (int)8;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_MAXSERV = (int)32;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_UNISTD_H = (int)1;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x32AAABA7, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_AIO_PRIO_DELTA_MAX = (int)44;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CANCEL_DEFERRED = (int)0x02;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((402) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((402) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int SCHED_FIFO = (int)4;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT64_MIN = (long)(-9223372036854775807L - 1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIu32 = (String)"u";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_REGEXP = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_PROCESS_SHARED = (int)90;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_SW_DEV = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_PAGE_SIZE = (int)29;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_DARWIN_USER_DIR = (int)65536;
	/**
	 * define<br>
	 * Conversion Error : { 0x32AAABA1, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x32AAABA1, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int STDOUT_FILENO = (int)1;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _XOPEN_NAME_MAX = (int)255;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_ADVISORY_INFO = (int)65;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _XOPEN_PATH_MAX = (int)1024;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_BC_SCALE_MAX = (int)99;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT_FAST64_MIN = (long)(-9223372036854775807L - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TIMERS = (int)41;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuLEAST8 = (String)"hhu";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST8_MAX = (int)127;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int F_ULOCK = (int)0;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_CHILD_MAX = (int)25;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int WCHAR_MIN = (int)(0x7fffffff - 1);
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_ABORT = (int)(7);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIX16 = (String)"hX";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = (int)3;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxFAST8 = (String)"";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TRACE_LOG = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxMAX = (String)"j";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIu64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V6_LPBIG_OFFBIG = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoPTR = (String)"lo";
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((7) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((7) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((1) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((1) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int FOPEN_MAX = (int)20;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/stdlib.h</i> */
	public static final int RAND_MAX = (int)0x7fffffff;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((412) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((412) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int __ILP32_OFF32 = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIX32 = (String)"X";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXLEAST8 = (String)"";
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_UCB = (int)0x103;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_UNIX = (int)115;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SLBF = (int)0x0001;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuPTR = (String)"lu";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADGATEWAY = (int)502;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CHANGED = (int)204;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADREQ = (int)400;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_MUTEX_NORMAL = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_CHAR_TERM = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_CRYPT = (int)(1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_V4MAPPED = (int)0x00000800;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_FORT_DEV = (int)21;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_CRYPT = (int)108;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoLEAST8 = (String)"hho";
	/** <i>native declaration : /usr/include/time.h</i> */
	public static final int CLOCKS_PER_SEC = (int)1000000;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS_LOCATE = (int)62;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SRD = (int)0x0004;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_SHM = (int)113;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_V6_ILP32_OFF32 = (int)103;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuFAST16 = (String)"hu";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NETDB_SUCCESS = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_LOGIN_NAME_MAX = (int)73;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SEM_VALUE_MAX = (int)32767;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SRW = (int)0x0010;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT_FAST64_MAX = (long)9223372036854775807L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_NAME_MAX = (int)128;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String __PRI_MAX_LENGTH_MODIFIER__ = (String)"j";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT_LEAST64_MAX = (long)9223372036854775807L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_SAFE_FUNCTIONS = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SEMAPHORES = (int)37;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_NA = (int)99999;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NETDB_INTERNAL = (int)-1;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFF32_LDFLAGS = (int)21;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_SUCCESS = (int)200;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = (int)27;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int WCHAR_MAX = (int)0x7fffffff;
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((501) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((501) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdMAX = (String)"j";
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CANCEL_ASYNCHRONOUS = (int)0x00;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_BC_BASE_MAX = (int)99;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_PROCESS_SHARED = (int)200112;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_2_0 = (int)20000;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_2_1 = (int)20100;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_2_2 = (int)20200;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int _IOLBF = (int)1;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuLEAST64 = (String)"q";
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((2) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((2) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIX64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_V6_LPBIG_OFFBIG = (int)106;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SNPT = (int)0x0800;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_GWTIMEOUT = (int)504;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NO_ADDRESS = (int)4;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_CLK_TCK = (int)3;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_SERVICE = (int)9;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST16_MAX = (int)32767;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_EVENT_DATA = (int)1;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TYPED_MEMORY_OBJECTS = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_READER_WRITER_LOCKS = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SHARED_MEMORY_OBJECTS = (int)39;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((202) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((202) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_EXPR_NEST_MAX = (int)14;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final String _PATH_PROTOCOLS = (String)"/etc/protocols";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIX8 = (String)"";
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_MODULES = (int)((1 << 8) - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_LOG = (int)100;
	/**
	 * define<br>
	 * Conversion Error : { 0x32AAABA2, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x32AAABA2, { 0 } }
	 */
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_PROCESS_SHARED = (int)1;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SS_REPL_MAX = (int)4;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MOD_ERRNO = (int)0x0FE;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_MODBITS = (int)8;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LP64_OFF64_LIBS = (int)30;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final String _PATH_SERVICES = (String)"/etc/services";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT32_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SYNCHRONIZED_IO = (int)(-1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_NOFQDN = (int)0x00000001;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoFAST64 = (String)"q";
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_SEVERE = (int)(6);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT_FAST8_MAX = (int)255;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE = (int)97;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int __LPBIG_OFFBIG = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_OPEN_MAX = (int)5;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxPTR = (String)"lx";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoFAST32 = (String)"o";
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((503) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((503) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_BADHINTS = (int)12;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_STDINT_H = (int)1;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final int GDP_GCL_PNAME_LEN = (int)43;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int __SCHED_PARAM_SIZE__ = (int)4;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_BC_DIM_MAX = (int)10;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXLEAST16 = (String)"hX";
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_INHERIT_SCHED = (int)1;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SERR = (int)0x0040;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNx64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_PASS_MAX = (int)131;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoFAST16 = (String)"ho";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_TOOLARGE = (int)413;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _V6_ILP32_OFF32 = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_REALTIME = (int)111;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_ENH_I18N = (int)(1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT8_MIN = (int)-128;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXLEAST32 = (String)"X";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V6_ILP32_OFF32 = (int)(-1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NO_RECOVERY = (int)3;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoLEAST32 = (String)"o";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXLEAST64 = (String)"q";
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_SEVBITS = (int)3;
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_NEOPHILIC = (int)0x101;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFF32_CFLAGS = (int)20;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_WITHSCOPEID = (int)0x00000020;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_SAFE_FUNCTIONS = (int)91;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_TEXTMAX = (int)2048;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNx32 = (String)"x";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_DGRAM = (int)0x00000010;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SHELL = (int)78;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_REALTIME_THREADS = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoPTR = (String)"lo";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SEOF = (int)0x0020;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_NGROUPS_MAX = (int)4;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INT_LEAST64_MIN = (long)(-9223372036854775807L - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V6_LP64_OFF64 = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_V6_ILP32_OFFBIG = (int)104;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoLEAST16 = (String)"ho";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_FORT_RUN = (int)22;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_BC_STRING_MAX = (int)12;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_UNAUTH = (int)401;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_NUMERICSERV = (int)0x00000008;
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_RECURSIVE = (int)2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TRACE_EVENT_FILTER = (int)(-1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int SIG_ATOMIC_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SYMLOOP_MAX = (int)120;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CREATE_JOINABLE = (int)1;
	/** <i>native declaration : /usr/include/_types.h</i> */
	public static final int __DARWIN_WCHAR_MIN = (int)(0x7fffffff - 1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_CANONNAME = (int)0x00000002;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MESSAGE_PASSING = (int)(-1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_MQ_OPEN_MAX = (int)8;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_DELETED = (int)202;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XBS5_LP64_OFF64 = (int)124;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_THREAD_DESTRUCTOR_ITERATIONS = (int)4;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXMAX = (String)"j";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdLEAST16 = (String)"hd";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST32_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_IPV6 = (int)118;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TZNAME_MAX = (int)6;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_PRIORITIZED_IO = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_CHOWN_RESTRICTED = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS = (int)59;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuLEAST32 = (String)"u";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxLEAST32 = (String)"x";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_CONTENT = (int)205;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int STDERR_FILENO = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdLEAST32 = (String)"d";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_LOCALEDEF = (int)200112;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT8_MAX = (int)127;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_THREAD_KEYS_MAX = (int)128;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuLEAST16 = (String)"hu";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuMAX = (String)"j";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TYPED_MEMORY_OBJECTS = (int)102;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuFAST32 = (String)"u";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxLEAST16 = (String)"hx";
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_REGSHIFT = (int)(10 + 8);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_ADDRFAMILY = (int)1;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNo64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_PRIORITY_SCHEDULING = (int)35;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_DETAIL = (int)((1 << 10) - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_JOB_CONTROL = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_PRIO_INHERIT = (int)(-1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_PASSIVE = (int)0x00000001;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_NUMERICHOST = (int)0x00000004;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_JOB_CONTROL = (int)6;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_MAX_CANON = (int)255;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _XOPEN_IOV_MAX = (int)16;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST8_MAX = (int)127;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XOPEN_STREAMS = (int)114;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String __PRI_64_LENGTH_MODIFIER__ = (String)"q";
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int HOST_NOT_FOUND = (int)1;
	/**
	 * define<br>
	 * Conversion Error : ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((204) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((0) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((204) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((0) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_RECURSIVE_MUTEX_SIG_init = (int)0x32AAABA2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LP64_OFF64_CFLAGS = (int)28;
	/** <i>native declaration : /usr/include/_types.h</i> */
	public static final int _FORTIFY_SOURCE = (int)2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_FILE_LOCKING = (int)69;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int SIG_ATOMIC_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT_FAST64_MAX = (long)-1L;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_DELAYTIMER_MAX = (int)32;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int PTRDIFF_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_FAST32_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_CHAR_TERM = (int)20;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoFAST32 = (String)"o";
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_INTERNAL = (int)500;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNo16 = (String)"ho";
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((504) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((504) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((404) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((404) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_C_DEV = (int)19;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST32_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TRACE_USER_EVENT_MAX = (int)32;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TIMER_MAX = (int)32;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_FORT_DEV = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_KEYS_MAX = (int)86;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREADS = (int)96;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNo32 = (String)"o";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_PRIO_INHERIT = (int)87;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MQ_OPEN_MAX = (int)46;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFFBIG_LIBS = (int)7;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((10) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((10) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_REALTIME_SIGNALS = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_SPORADIC_SERVER = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_DARWIN_USER_TEMP_DIR = (int)65537;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XBS5_ILP32_OFF32 = (int)(-1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_OPEN_MAX = (int)20;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _V6_LPBIG_OFFBIG = (int)(-1);
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_BADOPT = (int)402;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int PASS_MAX = (int)128;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiLEAST32 = (String)"i";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_THREADS_MAX = (int)94;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_REGEXP = (int)77;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_SVCUNAVAIL = (int)503;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MEMLOCK_RANGE = (int)(-1);
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((400) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((400) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MEMLOCK = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MEMORY_PROTECTION = (int)32;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiLEAST16 = (String)"hi";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT_FAST16_MAX = (int)65535;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_ADVISORY_INFO = (int)(-1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_LOGIN_NAME_MAX = (int)9;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoFAST16 = (String)"ho";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SOPT = (int)0x0400;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_NUMERICHOST = (int)0x00000002;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_MODULE = (int)1;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoLEAST16 = (String)"ho";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TRACE_SYS_MAX = (int)8;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int PTRDIFF_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_ARG_MAX = (int)4096;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT32_MAX = (long)4294967295L;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CREATE_DETACHED = (int)2;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST8_MIN = (int)-128;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int STDIN_FILENO = (int)0;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SSTR = (int)0x0200;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_NO_TRUNC = (int)200112;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_MAX = (int)15;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoLEAST32 = (String)"o";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxFAST32 = (String)"x";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS_MESSAGE = (int)63;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_FORT_RUN = (int)200112;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_REALTIME_SIGNALS = (int)36;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT_LEAST32_MAX = (int)2147483647;
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_PRECONFAILED = (int)412;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_MUTEX_SIG_init = (int)0x32AAABA7;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x3CB0B1BB, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_UPE = (int)200112;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_THREAD_THREADS_MAX = (int)64;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_MAX_REGISTRIES = (int)((1 << 11) - 1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxFAST16 = (String)"hx";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SIGN = (int)0x8000;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_RE_DUP_MAX = (int)16;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFF32_LINTFLAGS = (int)23;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_4_0 = (int)40000;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_CPUTIME = (int)68;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_4_3 = (int)40300;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_4_1 = (int)40100;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __IPHONE_4_2 = (int)40200;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TIMEOUTS = (int)(-1);
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_UNSUPMEDIA = (int)415;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdFAST32 = (String)"d";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_EVENT_FILTER = (int)98;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_NMAX = (int)1;
	/** <i>native declaration : /usr/include/stdlib.h</i> */
	public static final int EXIT_SUCCESS = (int)0;
	/** <i>native declaration : src/gdp/gdp/gdp.h</i> */
	public static final String PRIgdp_recno = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdFAST16 = (String)"hd";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INTMAX_MIN = (long)(-9223372036854775807L - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XBS5_LPBIG_OFFBIG = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxLEAST8 = (String)"";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SS_REPL_MAX = (int)126;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int __CTERMID_DEFINED = (int)1;
	/**
	 * define<br>
	 * Conversion Error : ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((15) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((7) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((15) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFFBIG_LDFLAGS = (int)25;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SALC = (int)0x4000;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((415) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((415) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int FILENAME_MAX = (int)1024;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_GETPW_R_SIZE_MAX = (int)71;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_REGBITS = (int)11;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_PRIO_INHERIT = (int)1;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_COLL_WEIGHTS_MAX = (int)2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_V6_LP64_OFF64 = (int)105;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final String _PATH_HOSTS = (String)"/etc/hosts";
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_PROCESS_PRIVATE = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuPTR = (String)"lu";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdFAST32 = (String)"d";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdFAST8 = (String)"hhd";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TIMEOUTS = (int)95;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XBS5_LP64_OFF64 = (int)(-1);
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_3 = (int)1030;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINTPTR_MAX = (long)4294967295L;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_2 = (int)1020;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_1 = (int)1010;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_0 = (int)1000;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_7 = (int)1070;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_6 = (int)1060;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_5 = (int)1050;
	/** <i>native declaration : /usr/include/Availability.h</i> */
	public static final int __MAC_10_4 = (int)1040;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_ADDRCONFIG = (int)0x00000400;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIo16 = (String)"ho";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int TMP_MAX = (int)308915776;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int PTHREAD_STACK_MIN = (int)8192;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V7_LPBIG_OFFBIG = (int)(-1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT_LEAST16_MAX = (int)65535;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT64_MAX = (long)-1L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_PBS_LOCATE = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdFAST16 = (String)"hd";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int __SAPP = (int)0x0100;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNdFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNi8 = (String)"hhi";
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((4) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((4) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_MASK = (int)(0x00000001 | 0x00000002 | 0x00000004 | 0x00001000 | 0x00000400);
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_LANGMAX = (int)14;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNoFAST8 = (String)"hho";
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h</i><br>
	 * = { 0x2DA8B3B4, { 0 } }
	 */
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_MUTEX_DEFAULT = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_STREAM_MAX = (int)26;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIo64 = (String)"q";
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_PRIO_PROTECT = (int)2;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_CANCEL_ENABLE = (int)0x01;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFF32_LIBS = (int)4;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_DEFAULT = (int)(0x00000200 | 0x00000400);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = (int)14;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TRACE_INHERIT = (int)(-1);
	/** <i>native declaration : src/gdp/gdp/gdp_stat.h</i> */
	public static final int GDP_COAP_METHNOTALLOWED = (int)405;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS_CHECKPOINT = (int)61;
	/** <i>native declaration : /usr/include/stdbool.h</i> */
	public static final int __bool_true_false_are_defined = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_thr.h</i> */
	public static final int EP_THR_MUTEX_DEFAULT = (int)1;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_OVERFLOW = (int)14;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int NULL = (int)0;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_DARWIN_USER_CACHE_DIR = (int)65538;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_BC_SCALE_MAX = (int)11;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_READER_WRITER_LOCKS = (int)76;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int EP_STAT_SEV_WARN = (int)(4);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNd8 = (String)"hhd";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TTY_NAME_MAX = (int)101;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SHARED_MEMORY_OBJECTS = (int)(-1);
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((19) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((19) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_AIO_MAX = (int)43;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SEM_NSEMS_MAX = (int)256;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNuFAST8 = (String)"hhu";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _V6_LP64_OFF64 = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SEM_VALUE_MAX = (int)50;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_BADFLAGS = (int)3;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIo32 = (String)"o";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_CLOCK_SELECTION = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_NAME_MAX = (int)14;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_STACK_MIN = (int)93;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_ATTR_STACKSIZE = (int)83;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT_LEAST32_MAX = (long)4294967295L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_IPV6 = (int)200112;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNi64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_C_DEV = (int)200112;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRId64 = (String)"q";
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_USE_PTHREADS = (int)1;
	/**
	 * define<br>
	 * Conversion Error : { 0x32AAABA7, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x32AAABA7, { 0 } }
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((500) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((500) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_MSGMAX = (int)32767;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_SOCKTYPE = (int)10;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiLEAST8 = (String)"";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_LOCALEDEF = (int)23;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_EVENT_NAME_MAX = (int)127;
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_MUTEX_RECURSIVE = (int)2;
	/** <i>native declaration : /usr/include/_types.h</i> */
	public static final int __DARWIN_WCHAR_MAX = (int)0x7fffffff;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int SCHED_RR = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiPTR = (String)"li";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String __SCN_64_LENGTH_MODIFIER__ = (String)"q";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_RE_DUP_MAX = (int)255;
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int AI_V4MAPPED_CFG = (int)0x00000200;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxLEAST32 = (String)"x";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRId32 = (String)"d";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int EOF = (int)(-1);
	/** <i>native declaration : /usr/include/pthread.h</i> */
	public static final int PTHREAD_MUTEX_ERRORCHECK = (int)1;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int WINT_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_PAGESIZE = (int)29;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long SIZE_MAX = (long)4294967295L;
	/** <i>native declaration : /usr/include/stdlib.h</i> */
	public static final int EXIT_FAILURE = (int)1;
	/** <i>native declaration : src/gdp/ep/ep_time.h</i> */
	public static final long EP_TIME_NOTIME = (long)(-9223372036854775807L - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = (int)33;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_ATTR_STACKADDR = (int)82;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX2_C_BIND = (int)200112;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int NL_ARGMAX = (int)9;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxLEAST16 = (String)"hx";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_PATH_MAX = (int)256;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XBS5_ILP32_OFFBIG = (int)(1);
	/**
	 * define<br>
	 * Conversion Error : ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((1) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/ep/ep_statcodes.h:0</i><br>
	 * ((((6) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x100) & ((1UL << 11) - 1)) << (10 + 8)) | (((0) & ((1UL << 8) - 1)) << 10) | ((1) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_MAXHOST = (int)1025;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRId16 = (String)"hd";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIuFAST8 = (String)"";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_FSYNC = (int)200112;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_BC_STRING_MAX = (int)1000;
	/** <i>native declaration : src/gdp/ep/ep.h</i> */
	public static final Pointer EP_GEN_DEADBEEF = new Pointer(0xDEADBEEF); // Fixed by cxh in makefile.
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_NPROCESSORS_CONF = (int)57;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_C_BIND = (int)18;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIXPTR = (String)"lX";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_SW_DEV = (int)24;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIxLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNx8 = (String)"hhx";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TZNAME_MAX = (int)27;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_SPORADIC_SERVER = (int)(-1);
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int NI_NAMEREQD = (int)0x00000004;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREADS = (int)200112;
	/** <i>native declaration : src/gdp/ep/ep_conf.h</i> */
	public static final int EP_OSCF_HAS_SYS_TYPES_H = (int)1;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((6) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((6) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int __LP64_OFF64 = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNu64 = (String)"q";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNu32 = (String)"u";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_MAPPED_FILES = (int)200112;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long INTMAX_MAX = (long)9223372036854775807L;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int WINT_MIN = (int)(-2147483647 - 1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_CPUTIME = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_MQ_PRIO_MAX = (int)75;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((401) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((401) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxFAST16 = (String)"hx";
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int UINT_LEAST8_MAX = (int)255;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TRACE_EVENT_NAME_MAX = (int)30;
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final long UINT_FAST32_MAX = (long)4294967295L;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_BARRIERS = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiLEAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _XOPEN_STREAMS = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNu16 = (String)"hu";
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((14) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((14) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/netdb.h</i> */
	public static final int EAI_PROTOCOL = (int)13;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_VERSION = (int)17;
	/** <i>native declaration : src/gdp/ep/ep_stat.h</i> */
	public static final int _EP_STAT_SEVSHIFT = (int)((10 + 8) + 11);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxFAST32 = (String)"x";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_LPBIG_OFFBIG_LIBS = (int)34;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_THREAD_PRIORITY_SCHEDULING = (int)(-1);
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_TRACE = (int)(-1);
	/** <i>native declaration : /usr/include/stdint.h</i> */
	public static final int INT32_MAX = (int)2147483647;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_TRACE_NAME_MAX = (int)8;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNu8 = (String)"hhu";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V6_ILP32_OFFBIG = (int)(1);
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int _PTHREAD_COND_SIG_init = (int)0x3CB0B1BB;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_ARG_MAX = (int)1;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS_TRACK = (int)64;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((16) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((16) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNiLEAST8 = (String)"hhi";
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int _IONBF = (int)2;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiLEAST16 = (String)"hi";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIdPTR = (String)"ld";
	/** <i>native declaration : src/gdp/ep/ep_registry.h</i> */
	public static final int EP_REGISTRY_GENERIC = (int)0x000;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNo8 = (String)"hho";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _POSIX_V7_LP64_OFF64 = (int)(-1);
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String SCNxFAST64 = (String)"q";
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_2_PBS_ACCOUNTING = (int)60;
	/**
	 * define<br>
	 * Conversion Error : { 0x2DA8B3B4, { 0 } }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/pthread.h:0</i><br>
	 * { 0x2DA8B3B4, { 0 } }
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_XBS5_ILP32_OFFBIG = (int)123;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_TRACE_INHERIT = (int)99;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_POSIX_V6_ILP32_OFF32_CFLAGS = (int)2;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_THREAD_PRIORITY_SCHEDULING = (int)89;
	/** <i>native declaration : /usr/include/pthread_impl.h</i> */
	public static final int SCHED_OTHER = (int)1;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_MQ_PRIO_MAX = (int)32;
	/**
	 * define<br>
	 * Conversion Error : ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((405) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((5) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((405) & ((1UL << 10) - 1)))
	 */
	/**
	 * define<br>
	 * Conversion Error : ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((3) & ((1UL << 10) - 1)))<br>
	 * SKIPPED:<br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:0</i><br>
	 * ((((4) & ((1UL << 3) - 1)) << ((10 + 8) + 11)) | (((0x103) & ((1UL << 11) - 1)) << (10 + 8)) | (((1) & ((1UL << 8) - 1)) << 10) | ((3) & ((1UL << 10) - 1)))
	 */
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _CS_XBS5_ILP32_OFF32_LIBS = (int)22;
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIoLEAST8 = (String)"";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiLEAST32 = (String)"i";
	/** <i>native declaration : /usr/include/inttypes.h</i> */
	public static final String PRIiFAST8 = (String)"";
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX_SSIZE_MAX = (int)32767;
	/** <i>native declaration : /usr/include/stdio.h</i> */
	public static final int _IOFBF = (int)0;
	/** <i>native declaration : /usr/include/limits.h</i> */
	public static final int _POSIX2_BC_DIM_MAX = (int)2048;
	/** <i>native declaration : /usr/include/unistd.h</i> */
	public static final int _SC_SPIN_LOCKS = (int)80;
	/** <i>native declaration : /usr/include/stdlib.h:167</i> */
	public interface atexit_arg1_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : /usr/include/stdlib.h:168</i> */
	public interface bsearch_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2);
	};
	/** <i>native declaration : /usr/include/stdlib.h:169</i> */
	public interface qsort_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2);
	};
	/** <i>native declaration : /usr/include/stdlib.h:79</i> */
	public interface heapsort_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2);
	};
	/** <i>native declaration : /usr/include/stdlib.h:80</i> */
	public interface mergesort_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2);
	};
	/** <i>native declaration : /usr/include/stdlib.h:81</i> */
	public interface psort_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2);
	};
	/** <i>native declaration : /usr/include/stdlib.h:82</i> */
	public interface psort_r_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2, Pointer voidPtr3);
	};
	/** <i>native declaration : /usr/include/stdlib.h:83</i> */
	public interface qsort_r_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer voidPtr2, Pointer voidPtr3);
	};
	/** <i>native declaration : /usr/include/stdio.h:258</i> */
	public interface funopen_arg1_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer charPtr1, int int1);
	};
	/** <i>native declaration : /usr/include/stdio.h:259</i> */
	public interface funopen_arg2_callback extends Callback {
		int apply(Pointer voidPtr1, Pointer charPtr1, int int1);
	};
	/** <i>native declaration : /usr/include/stdio.h:260</i> */
	public interface funopen_arg3_callback extends Callback {
		long apply(Pointer voidPtr1, long fpos_t1, int int1);
	};
	/** <i>native declaration : /usr/include/stdio.h:261</i> */
	public interface funopen_arg4_callback extends Callback {
		int apply(Pointer voidPtr1);
	};
	/**
	 * status handling function<br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:3</i>
	 */
	public interface EP_STAT2 extends Callback {
		Gdp10Library.EP_STAT_callback apply(Pointer EP_STAT_HANDLER_FUNCP);
	};
	/** <i>native declaration : src/gdp/ep/ep_stat.h:51</i> */
	public interface EP_STAT_callback extends Callback {
		/**
		 * @param estat status code<br>
		 * @param defmsg default message
		 */
		int apply(org.terraswarm.gdp.EP_STAT.ByValue estat, Pointer defmsg, Object... av);
	};
	/** <i>native declaration : /usr/include/pthread.h:227</i> */
	public interface pthread_atfork_arg1_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : /usr/include/pthread.h:228</i> */
	public interface pthread_atfork_arg2_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : /usr/include/pthread.h:229</i> */
	public interface pthread_atfork_arg3_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : /usr/include/pthread.h:230</i> */
	public interface pthread_create_arg1_callback extends Callback {
		Pointer apply(Pointer voidPtr1);
	};
	/** <i>native declaration : /usr/include/pthread.h:231</i> */
	public interface pthread_key_create_arg1_callback extends Callback {
		void apply(Pointer voidPtr1);
	};
	/** <i>native declaration : /usr/include/pthread.h:232</i> */
	public interface pthread_once_arg1_callback extends Callback {
		void apply();
	};
	/** <i>native declaration : /usr/include/pthread.h:233</i> */
	public interface pthread_create_suspended_np_arg1_callback extends Callback {
		Pointer apply(Pointer voidPtr1);
	};
	/** <i>native declaration : src/gdp/gdp/gdp.h:131</i> */
	public interface gdp_gcl_sub_cbfunc_t extends Callback {
		/**
		 * @param gclh the GCL triggering the call<br>
		 * @param datum the message triggering the call
		 */
		void apply(Pointer gclh, gdp_datum datum, Pointer cbarg);
	};
	/**
	 * Original signature : <code>void _exit(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:14</i>
	 */
	void _exit(int int1);
	/**
	 * Original signature : <code>int access(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:16</i><br>
	 * @deprecated use the safer methods {@link #access(java.lang.String, int)} and {@link #access(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int access(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int access(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:16</i>
	 */
	int access(String charPtr1, int int1);
	/**
	 * Original signature : <code>int alarm(unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:18</i>
	 */
	int alarm(int int1);
	/**
	 * Original signature : <code>int chdir(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:20</i><br>
	 * @deprecated use the safer methods {@link #chdir(java.lang.String)} and {@link #chdir(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int chdir(Pointer charPtr1);
	/**
	 * Original signature : <code>int chdir(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:20</i>
	 */
	int chdir(String charPtr1);
	/**
	 * Original signature : <code>int chown(const char*, uid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:22</i><br>
	 * @deprecated use the safer methods {@link #chown(java.lang.String, int, int)} and {@link #chown(com.sun.jna.Pointer, int, int)} instead
	 */
// 	@Deprecated 
	int chown(Pointer charPtr1, int uid_t1, int gid_t1);
	/**
	 * Original signature : <code>int chown(const char*, uid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:22</i>
	 */
	int chown(String charPtr1, int uid_t1, int gid_t1);
	/**
	 * Original signature : <code>int close(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:24</i>
	 */
	int close(int int1);
	/**
	 * Original signature : <code>int dup(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:26</i>
	 */
	int dup(int int1);
	/**
	 * Original signature : <code>int dup2(int, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:28</i>
	 */
	int dup2(int int1, int int2);
	/**
	 * Original signature : <code>int execl(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:30</i><br>
	 * @deprecated use the safer methods {@link #execl(java.lang.String, java.lang.String, java.lang.Object)} and {@link #execl(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int execl(Pointer charPtr1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execl(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:30</i>
	 */
	int execl(String charPtr1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execle(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:32</i><br>
	 * @deprecated use the safer methods {@link #execle(java.lang.String, java.lang.String, java.lang.Object)} and {@link #execle(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int execle(Pointer charPtr1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execle(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:32</i>
	 */
	int execle(String charPtr1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execlp(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:34</i><br>
	 * @deprecated use the safer methods {@link #execlp(java.lang.String, java.lang.String, java.lang.Object)} and {@link #execlp(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int execlp(Pointer charPtr1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execlp(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:34</i>
	 */
	int execlp(String charPtr1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int execv(const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:36</i><br>
	 * @deprecated use the safer methods {@link #execv(java.lang.String, java.lang.String[])} and {@link #execv(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int execv(Pointer charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int execv(const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:36</i>
	 */
	int execv(String charPtr1, String charPtrPtr1[]);
	/**
	 * Original signature : <code>int execve(const char*, const char**, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:38</i><br>
	 * @deprecated use the safer methods {@link #execve(java.lang.String, java.lang.String[], java.lang.String[])} and {@link #execve(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int execve(Pointer charPtr1, PointerByReference charPtrPtr1, PointerByReference charPtrPtr2);
	/**
	 * Original signature : <code>int execve(const char*, const char**, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:38</i>
	 */
	int execve(String charPtr1, String charPtrPtr1[], String charPtrPtr2[]);
	/**
	 * Original signature : <code>int execvp(const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:40</i><br>
	 * @deprecated use the safer methods {@link #execvp(java.lang.String, java.lang.String[])} and {@link #execvp(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int execvp(Pointer charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int execvp(const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:40</i>
	 */
	int execvp(String charPtr1, String charPtrPtr1[]);
	/**
	 * Original signature : <code>pid_t fork()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:42</i>
	 */
	int fork();
	/**
	 * Original signature : <code>long fpathconf(int, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:44</i>
	 */
	NativeLong fpathconf(int int1, int int2);
	/**
	 * Original signature : <code>char* getcwd(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:46</i><br>
	 * @deprecated use the safer methods {@link #getcwd(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #getcwd(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	Pointer getcwd(Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>char* getcwd(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:46</i>
	 */
	Pointer getcwd(ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>gid_t getegid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:48</i>
	 */
	int getegid();
	/**
	 * Original signature : <code>uid_t geteuid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:50</i>
	 */
	int geteuid();
	/**
	 * Original signature : <code>gid_t getgid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:52</i>
	 */
	int getgid();
	/**
	 * Original signature : <code>int getgroups(int, gid_t[])</code><br>
	 * <i>native declaration : /usr/include/unistd.h:54</i><br>
	 * @deprecated use the safer methods {@link #getgroups(int, java.nio.IntBuffer)} and {@link #getgroups(int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int getgroups(int int1, IntByReference gid_tArr1);
	/**
	 * Original signature : <code>int getgroups(int, gid_t[])</code><br>
	 * <i>native declaration : /usr/include/unistd.h:54</i>
	 */
	int getgroups(int int1, IntBuffer gid_tArr1);
	/**
	 * Original signature : <code>char* getlogin()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:56</i>
	 */
	Pointer getlogin();
	/**
	 * Original signature : <code>pid_t getpgrp()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:58</i>
	 */
	int getpgrp();
	/**
	 * Original signature : <code>pid_t getpid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:60</i>
	 */
	int getpid();
	/**
	 * Original signature : <code>pid_t getppid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:62</i>
	 */
	int getppid();
	/**
	 * Original signature : <code>uid_t getuid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:64</i>
	 */
	int getuid();
	/**
	 * Original signature : <code>int isatty(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:66</i>
	 */
	int isatty(int int1);
	/**
	 * Original signature : <code>int link(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:68</i><br>
	 * @deprecated use the safer methods {@link #link(java.lang.String, java.lang.String)} and {@link #link(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int link(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int link(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:68</i>
	 */
	int link(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>off_t lseek(int, off_t, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:70</i>
	 */
	long lseek(int int1, long off_t1, int int2);
	/**
	 * Original signature : <code>long pathconf(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:72</i><br>
	 * @deprecated use the safer methods {@link #pathconf(java.lang.String, int)} and {@link #pathconf(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	NativeLong pathconf(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>long pathconf(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:72</i>
	 */
	NativeLong pathconf(String charPtr1, int int1);
	/**
	 * Original signature : <code>int pause()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:74</i>
	 */
	int pause();
	/**
	 * Original signature : <code>int pipe(int[2])</code><br>
	 * <i>native declaration : /usr/include/unistd.h:76</i><br>
	 * @deprecated use the safer methods {@link #pipe(java.nio.IntBuffer)} and {@link #pipe(com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pipe(IntByReference intArr1);
	/**
	 * Original signature : <code>int pipe(int[2])</code><br>
	 * <i>native declaration : /usr/include/unistd.h:76</i>
	 */
	int pipe(IntBuffer intArr1);
	/**
	 * Original signature : <code>ssize_t read(int, void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:78</i>
	 */
	NativeLong read(int int1, Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int rmdir(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:80</i><br>
	 * @deprecated use the safer methods {@link #rmdir(java.lang.String)} and {@link #rmdir(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int rmdir(Pointer charPtr1);
	/**
	 * Original signature : <code>int rmdir(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:80</i>
	 */
	int rmdir(String charPtr1);
	/**
	 * Original signature : <code>int setgid(gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:82</i>
	 */
	int setgid(int gid_t1);
	/**
	 * Original signature : <code>int setpgid(pid_t, pid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:84</i>
	 */
	int setpgid(int pid_t1, int pid_t2);
	/**
	 * Original signature : <code>pid_t setsid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:86</i>
	 */
	int setsid();
	/**
	 * Original signature : <code>int setuid(uid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:88</i>
	 */
	int setuid(int uid_t1);
	/**
	 * Original signature : <code>int sleep(unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:90</i>
	 */
	int sleep(int int1);
	/**
	 * Original signature : <code>long sysconf(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:92</i>
	 */
	NativeLong sysconf(int int1);
	/**
	 * Original signature : <code>pid_t tcgetpgrp(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:94</i>
	 */
	int tcgetpgrp(int int1);
	/**
	 * Original signature : <code>int tcsetpgrp(int, pid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:96</i>
	 */
	int tcsetpgrp(int int1, int pid_t1);
	/**
	 * Original signature : <code>char* ttyname(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:98</i>
	 */
	Pointer ttyname(int int1);
	/**
	 * Original signature : <code>int ttyname_r(int, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:100</i><br>
	 * @deprecated use the safer methods {@link #ttyname_r(int, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #ttyname_r(int, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int ttyname_r(int int1, Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int ttyname_r(int, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:100</i>
	 */
	int ttyname_r(int int1, ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int unlink(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:102</i><br>
	 * @deprecated use the safer methods {@link #unlink(java.lang.String)} and {@link #unlink(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int unlink(Pointer charPtr1);
	/**
	 * Original signature : <code>int unlink(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:102</i>
	 */
	int unlink(String charPtr1);
	/**
	 * Original signature : <code>ssize_t write(int, const void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:104</i>
	 */
	NativeLong write(int int1, Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>size_t confstr(int, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:108</i><br>
	 * @deprecated use the safer methods {@link #confstr(int, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #confstr(int, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	NativeSizeT confstr(int int1, Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>size_t confstr(int, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:108</i>
	 */
	NativeSizeT confstr(int int1, ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int getopt(int, const char*[], const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:110</i><br>
	 * @deprecated use the safer methods {@link #getopt(int, java.lang.String[], java.lang.String)} and {@link #getopt(int, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int getopt(int int1, PointerByReference charPtrArr1, Pointer charPtr1);
	/**
	 * Original signature : <code>int getopt(int, const char*[], const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:110</i>
	 */
	int getopt(int int1, String charPtrArr1[], String charPtr1);
	/**
	 * Removed in Issue 6<br>
	 * Original signature : <code>void* brk(const void*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:121</i>
	 */
	Pointer brk(Pointer voidPtr1);
	/**
	 * Original signature : <code>int chroot(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:123</i><br>
	 * @deprecated use the safer methods {@link #chroot(java.lang.String)} and {@link #chroot(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int chroot(Pointer charPtr1);
	/**
	 * Original signature : <code>int chroot(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:123</i>
	 */
	int chroot(String charPtr1);
	/**
	 * Original signature : <code>char* crypt(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:125</i><br>
	 * @deprecated use the safer methods {@link #crypt(java.lang.String, java.lang.String)} and {@link #crypt(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer crypt(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>char* crypt(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:125</i>
	 */
	Pointer crypt(String charPtr1, String charPtr2);
	/**
	 * Multiply defined in stdio.h and unistd.h by SUS<br>
	 * Original signature : <code>char* ctermid(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:130</i><br>
	 * @deprecated use the safer methods {@link #ctermid(java.nio.ByteBuffer)} and {@link #ctermid(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer ctermid(Pointer charPtr1);
	/**
	 * Multiply defined in stdio.h and unistd.h by SUS<br>
	 * Original signature : <code>char* ctermid(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:130</i>
	 */
	Pointer ctermid(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>void encrypt(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:132</i><br>
	 * @deprecated use the safer methods {@link #encrypt(java.nio.ByteBuffer, int)} and {@link #encrypt(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	void encrypt(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>void encrypt(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:132</i>
	 */
	void encrypt(ByteBuffer charPtr1, int int1);
	/**
	 * Original signature : <code>int fchdir(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:134</i>
	 */
	int fchdir(int int1);
	/**
	 * Original signature : <code>long gethostid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:136</i>
	 */
	NativeLong gethostid();
	/**
	 * Original signature : <code>pid_t getpgid(pid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:138</i>
	 */
	int getpgid(int pid_t1);
	/**
	 * Original signature : <code>pid_t getsid(pid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:140</i>
	 */
	int getsid(int pid_t1);
	/**
	 * Removed in Issue 6<br>
	 * Original signature : <code>int getdtablesize()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:145</i>
	 */
	int getdtablesize();
	/**
	 * Original signature : <code>int getpagesize()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:147</i>
	 */
	int getpagesize();
	/**
	 * Original signature : <code>char* getpass(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:149</i><br>
	 * @deprecated use the safer methods {@link #getpass(java.lang.String)} and {@link #getpass(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer getpass(Pointer charPtr1);
	/**
	 * Original signature : <code>char* getpass(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:149</i>
	 */
	Pointer getpass(String charPtr1);
	/**
	 * Removed in Issue 7<br>
	 * obsoleted by getcwd()<br>
	 * Original signature : <code>char* getwd(char*)</code><br>
	 * @param charPtr1 obsoleted by getcwd()<br>
	 * <i>native declaration : /usr/include/unistd.h:156</i><br>
	 * @deprecated use the safer methods {@link #getwd(java.nio.ByteBuffer)} and {@link #getwd(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer getwd(Pointer charPtr1);
	/**
	 * Removed in Issue 7<br>
	 * obsoleted by getcwd()<br>
	 * Original signature : <code>char* getwd(char*)</code><br>
	 * @param charPtr1 obsoleted by getcwd()<br>
	 * <i>native declaration : /usr/include/unistd.h:156</i>
	 */
	Pointer getwd(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int lchown(const char*, uid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:158</i><br>
	 * @deprecated use the safer methods {@link #lchown(java.lang.String, int, int)} and {@link #lchown(com.sun.jna.Pointer, int, int)} instead
	 */
// 	@Deprecated 
	int lchown(Pointer charPtr1, int uid_t1, int gid_t1);
	/**
	 * Original signature : <code>int lchown(const char*, uid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:158</i>
	 */
	int lchown(String charPtr1, int uid_t1, int gid_t1);
	/**
	 * Original signature : <code>int lockf(int, int, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:160</i>
	 */
	int lockf(int int1, int int2, long off_t1);
	/**
	 * Original signature : <code>int nice(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:162</i>
	 */
	int nice(int int1);
	/**
	 * Original signature : <code>ssize_t pread(int, void*, size_t, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:164</i>
	 */
	NativeLong pread(int int1, Pointer voidPtr1, NativeSizeT size_t1, long off_t1);
	/**
	 * Original signature : <code>ssize_t pwrite(int, const void*, size_t, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:166</i>
	 */
	NativeLong pwrite(int int1, Pointer voidPtr1, NativeSizeT size_t1, long off_t1);
	/**
	 * Note that Issue 5 changed the argument as intprt_t,<br>
	 * but we keep it as int for binary compatability.<br>
	 * Original signature : <code>void* sbrk(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:172</i>
	 */
	Pointer sbrk(int int1);
	/**
	 * Original signature : <code>pid_t setpgrp()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:174</i>
	 */
	int setpgrp();
	/**
	 * Original signature : <code>int setregid(gid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:176</i>
	 */
	int setregid(int gid_t1, int gid_t2);
	/**
	 * Original signature : <code>int setreuid(uid_t, uid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:178</i>
	 */
	int setreuid(int uid_t1, int uid_t2);
	/**
	 * Original signature : <code>void swab(const void*, void*, ssize_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:180</i>
	 */
	void swab(Pointer voidPtr1, Pointer voidPtr2, NativeLong ssize_t1);
	/**
	 * Original signature : <code>void sync()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:182</i>
	 */
	void sync();
	/**
	 * Original signature : <code>int truncate(const char*, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:184</i><br>
	 * @deprecated use the safer methods {@link #truncate(java.lang.String, long)} and {@link #truncate(com.sun.jna.Pointer, long)} instead
	 */
// 	@Deprecated 
	int truncate(Pointer charPtr1, long off_t1);
	/**
	 * Original signature : <code>int truncate(const char*, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:184</i>
	 */
	int truncate(String charPtr1, long off_t1);
	/**
	 * Original signature : <code>useconds_t ualarm(useconds_t, useconds_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:186</i>
	 */
	int ualarm(int useconds_t1, int useconds_t2);
	/**
	 * Original signature : <code>int usleep(useconds_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:188</i>
	 */
	int usleep(int useconds_t1);
	/**
	 * Original signature : <code>pid_t vfork()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:190</i>
	 */
	int vfork();
	/**
	 * End XSI<br>
	 * Original signature : <code>int fsync(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:195</i>
	 */
	int fsync(int int1);
	/**
	 * Original signature : <code>int ftruncate(int, off_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:197</i>
	 */
	int ftruncate(int int1, long off_t1);
	/**
	 * Original signature : <code>int getlogin_r(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:199</i><br>
	 * @deprecated use the safer methods {@link #getlogin_r(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #getlogin_r(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int getlogin_r(Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int getlogin_r(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:199</i>
	 */
	int getlogin_r(ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int fchown(int, uid_t, gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:203</i>
	 */
	int fchown(int int1, int uid_t1, int gid_t1);
	/**
	 * Original signature : <code>int gethostname(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:205</i><br>
	 * @deprecated use the safer methods {@link #gethostname(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #gethostname(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int gethostname(Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int gethostname(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:205</i>
	 */
	int gethostname(ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>ssize_t readlink(const char*, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:207</i><br>
	 * @deprecated use the safer methods {@link #readlink(java.lang.String, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #readlink(com.sun.jna.Pointer, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	NativeLong readlink(Pointer charPtr1, Pointer charPtr2, NativeSizeT size_t1);
	/**
	 * Original signature : <code>ssize_t readlink(const char*, char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:207</i>
	 */
	NativeLong readlink(String charPtr1, ByteBuffer charPtr2, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int setegid(gid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:209</i>
	 */
	int setegid(int gid_t1);
	/**
	 * Original signature : <code>int seteuid(uid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:211</i>
	 */
	int seteuid(int uid_t1);
	/**
	 * Original signature : <code>int symlink(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:213</i><br>
	 * @deprecated use the safer methods {@link #symlink(java.lang.String, java.lang.String)} and {@link #symlink(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int symlink(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int symlink(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:213</i>
	 */
	int symlink(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>void _Exit(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:5</i>
	 */
	void _Exit(int int1);
	/**
	 * Original signature : <code>int accessx_np(accessx_descriptor*, size_t, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:7</i><br>
	 * @deprecated use the safer methods {@link #accessx_np(org.terraswarm.gdp.Gdp10Library.accessx_descriptor, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.nio.IntBuffer)} and {@link #accessx_np(org.terraswarm.gdp.Gdp10Library.accessx_descriptor, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int accessx_np(Gdp10Library.accessx_descriptor accessx_descriptorPtr1, NativeSizeT size_t1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int accessx_np(accessx_descriptor*, size_t, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:7</i>
	 */
	int accessx_np(Gdp10Library.accessx_descriptor accessx_descriptorPtr1, NativeSizeT size_t1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int acct(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:9</i><br>
	 * @deprecated use the safer methods {@link #acct(java.lang.String)} and {@link #acct(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int acct(Pointer charPtr1);
	/**
	 * Original signature : <code>int acct(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:9</i>
	 */
	int acct(String charPtr1);
	/**
	 * Original signature : <code>int add_profil(char*, size_t, unsigned long, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:11</i><br>
	 * @deprecated use the safer methods {@link #add_profil(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong, int)} and {@link #add_profil(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong, int)} instead
	 */
// 	@Deprecated 
	int add_profil(Pointer charPtr1, NativeSizeT size_t1, NativeLong u1, int int1);
	/**
	 * Original signature : <code>int add_profil(char*, size_t, unsigned long, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:11</i>
	 */
	int add_profil(ByteBuffer charPtr1, NativeSizeT size_t1, NativeLong u1, int int1);
	/**
	 * Original signature : <code>void endusershell()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:13</i>
	 */
	void endusershell();
	/**
	 * Original signature : <code>int execvP(const char*, const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:15</i><br>
	 * @deprecated use the safer methods {@link #execvP(java.lang.String, java.lang.String, java.lang.String[])} and {@link #execvP(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int execvP(Pointer charPtr1, Pointer charPtr2, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int execvP(const char*, const char*, const char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:15</i>
	 */
	int execvP(String charPtr1, String charPtr2, String charPtrPtr1[]);
	/**
	 * Original signature : <code>char* fflagstostr(unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:17</i>
	 */
	Pointer fflagstostr(NativeLong u1);
	/**
	 * Original signature : <code>int getdomainname(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:19</i><br>
	 * @deprecated use the safer methods {@link #getdomainname(java.nio.ByteBuffer, int)} and {@link #getdomainname(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int getdomainname(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int getdomainname(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:19</i>
	 */
	int getdomainname(ByteBuffer charPtr1, int int1);
	/**
	 * Original signature : <code>int getgrouplist(const char*, int, int*, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:21</i><br>
	 * @deprecated use the safer methods {@link #getgrouplist(java.lang.String, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #getgrouplist(com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int getgrouplist(Pointer charPtr1, int int1, IntByReference intPtr1, IntByReference intPtr2);
	/**
	 * Original signature : <code>int getgrouplist(const char*, int, int*, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:21</i>
	 */
	int getgrouplist(String charPtr1, int int1, IntBuffer intPtr1, IntBuffer intPtr2);
	/**
	 * Original signature : <code>int gethostuuid(uuid_t, timespec*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:23</i><br>
	 * @deprecated use the safer methods {@link #gethostuuid(java.nio.ByteBuffer, org.terraswarm.gdp.Gdp10Library.timespec)} and {@link #gethostuuid(com.sun.jna.Pointer, org.terraswarm.gdp.Gdp10Library.timespec)} instead
	 */
// 	@Deprecated 
	int gethostuuid(Pointer uuid_t1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Original signature : <code>int gethostuuid(uuid_t, timespec*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:23</i>
	 */
	int gethostuuid(ByteBuffer uuid_t1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Original signature : <code>mode_t getmode(const void*, mode_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:25</i>
	 */
	short getmode(Pointer voidPtr1, short mode_t1);
	/**
	 * Original signature : <code>int getpeereid(int, uid_t*, gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:27</i><br>
	 * @deprecated use the safer methods {@link #getpeereid(int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #getpeereid(int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int getpeereid(int int1, IntByReference uid_tPtr1, IntByReference gid_tPtr1);
	/**
	 * Original signature : <code>int getpeereid(int, uid_t*, gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:27</i>
	 */
	int getpeereid(int int1, IntBuffer uid_tPtr1, IntBuffer gid_tPtr1);
	/**
	 * Original signature : <code>int getsgroups_np(int*, uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:29</i><br>
	 * @deprecated use the safer methods {@link #getsgroups_np(java.nio.IntBuffer, java.nio.ByteBuffer)} and {@link #getsgroups_np(com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int getsgroups_np(IntByReference intPtr1, Pointer uuid_t1);
	/**
	 * Original signature : <code>int getsgroups_np(int*, uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:29</i>
	 */
	int getsgroups_np(IntBuffer intPtr1, ByteBuffer uuid_t1);
	/**
	 * Original signature : <code>char* getusershell()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:31</i>
	 */
	Pointer getusershell();
	/**
	 * Original signature : <code>int getwgroups_np(int*, uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:33</i><br>
	 * @deprecated use the safer methods {@link #getwgroups_np(java.nio.IntBuffer, java.nio.ByteBuffer)} and {@link #getwgroups_np(com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int getwgroups_np(IntByReference intPtr1, Pointer uuid_t1);
	/**
	 * Original signature : <code>int getwgroups_np(int*, uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:33</i>
	 */
	int getwgroups_np(IntBuffer intPtr1, ByteBuffer uuid_t1);
	/**
	 * Original signature : <code>int initgroups(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:35</i><br>
	 * @deprecated use the safer methods {@link #initgroups(java.lang.String, int)} and {@link #initgroups(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int initgroups(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int initgroups(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:35</i>
	 */
	int initgroups(String charPtr1, int int1);
	/**
	 * Original signature : <code>int iruserok(unsigned long, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:37</i><br>
	 * @deprecated use the safer methods {@link #iruserok(com.sun.jna.NativeLong, int, java.lang.String, java.lang.String)} and {@link #iruserok(com.sun.jna.NativeLong, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int iruserok(NativeLong u1, int int1, Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int iruserok(unsigned long, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:37</i>
	 */
	int iruserok(NativeLong u1, int int1, String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int iruserok_sa(const void*, int, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:39</i><br>
	 * @deprecated use the safer methods {@link #iruserok_sa(com.sun.jna.Pointer, int, int, java.lang.String, java.lang.String)} and {@link #iruserok_sa(com.sun.jna.Pointer, int, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int iruserok_sa(Pointer voidPtr1, int int1, int int2, Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int iruserok_sa(const void*, int, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:39</i>
	 */
	int iruserok_sa(Pointer voidPtr1, int int1, int int2, String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int issetugid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:41</i>
	 */
	int issetugid();
	/**
	 * Original signature : <code>char* mkdtemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:43</i><br>
	 * @deprecated use the safer methods {@link #mkdtemp(java.nio.ByteBuffer)} and {@link #mkdtemp(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer mkdtemp(Pointer charPtr1);
	/**
	 * Original signature : <code>char* mkdtemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:43</i>
	 */
	Pointer mkdtemp(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int mknod(const char*, mode_t, dev_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:45</i><br>
	 * @deprecated use the safer methods {@link #mknod(java.lang.String, short, int)} and {@link #mknod(com.sun.jna.Pointer, short, int)} instead
	 */
// 	@Deprecated 
	int mknod(Pointer charPtr1, short mode_t1, int dev_t1);
	/**
	 * Original signature : <code>int mknod(const char*, mode_t, dev_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:45</i>
	 */
	int mknod(String charPtr1, short mode_t1, int dev_t1);
	/**
	 * Original signature : <code>int mkstemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:47</i><br>
	 * @deprecated use the safer methods {@link #mkstemp(java.nio.ByteBuffer)} and {@link #mkstemp(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int mkstemp(Pointer charPtr1);
	/**
	 * Original signature : <code>int mkstemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:47</i>
	 */
	int mkstemp(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int mkstemps(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:49</i><br>
	 * @deprecated use the safer methods {@link #mkstemps(java.nio.ByteBuffer, int)} and {@link #mkstemps(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int mkstemps(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int mkstemps(char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:49</i>
	 */
	int mkstemps(ByteBuffer charPtr1, int int1);
	/**
	 * Original signature : <code>char* mktemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:51</i><br>
	 * @deprecated use the safer methods {@link #mktemp(java.nio.ByteBuffer)} and {@link #mktemp(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer mktemp(Pointer charPtr1);
	/**
	 * Original signature : <code>char* mktemp(char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:51</i>
	 */
	Pointer mktemp(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int nfssvc(int, void*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:53</i>
	 */
	int nfssvc(int int1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int profil(char*, size_t, unsigned long, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:55</i><br>
	 * @deprecated use the safer methods {@link #profil(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong, int)} and {@link #profil(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong, int)} instead
	 */
// 	@Deprecated 
	int profil(Pointer charPtr1, NativeSizeT size_t1, NativeLong u1, int int1);
	/**
	 * Original signature : <code>int profil(char*, size_t, unsigned long, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:55</i>
	 */
	int profil(ByteBuffer charPtr1, NativeSizeT size_t1, NativeLong u1, int int1);
	/**
	 * Original signature : <code>int pthread_setugid_np()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:57</i>
	 */
	int pthread_setugid_np();
	/**
	 * Original signature : <code>int pthread_getugid_np(uid_t*, gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:59</i><br>
	 * @deprecated use the safer methods {@link #pthread_getugid_np(java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #pthread_getugid_np(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_getugid_np(IntByReference uid_tPtr1, IntByReference gid_tPtr1);
	/**
	 * Original signature : <code>int pthread_getugid_np(uid_t*, gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:59</i>
	 */
	int pthread_getugid_np(IntBuffer uid_tPtr1, IntBuffer gid_tPtr1);
	/**
	 * Original signature : <code>int rcmd(char**, int, const char*, const char*, const char*, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:61</i><br>
	 * @deprecated use the safer methods {@link #rcmd(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.String, java.lang.String, java.nio.IntBuffer)} and {@link #rcmd(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int rcmd(PointerByReference charPtrPtr1, int int1, Pointer charPtr1, Pointer charPtr2, Pointer charPtr3, IntByReference intPtr1);
	/**
	 * Original signature : <code>int rcmd(char**, int, const char*, const char*, const char*, int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:61</i>
	 */
	int rcmd(PointerByReference charPtrPtr1, int int1, String charPtr1, String charPtr2, String charPtr3, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int rcmd_af(char**, int, const char*, const char*, const char*, int*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:63</i><br>
	 * @deprecated use the safer methods {@link #rcmd_af(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.String, java.lang.String, java.nio.IntBuffer, int)} and {@link #rcmd_af(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, int)} instead
	 */
// 	@Deprecated 
	int rcmd_af(PointerByReference charPtrPtr1, int int1, Pointer charPtr1, Pointer charPtr2, Pointer charPtr3, IntByReference intPtr1, int int2);
	/**
	 * Original signature : <code>int rcmd_af(char**, int, const char*, const char*, const char*, int*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:63</i>
	 */
	int rcmd_af(PointerByReference charPtrPtr1, int int1, String charPtr1, String charPtr2, String charPtr3, IntBuffer intPtr1, int int2);
	/**
	 * Original signature : <code>int reboot(int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:65</i>
	 */
	int reboot(int int1);
	/**
	 * Original signature : <code>int revoke(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:67</i><br>
	 * @deprecated use the safer methods {@link #revoke(java.lang.String)} and {@link #revoke(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int revoke(Pointer charPtr1);
	/**
	 * Original signature : <code>int revoke(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:67</i>
	 */
	int revoke(String charPtr1);
	/**
	 * Original signature : <code>int rresvport(int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:69</i><br>
	 * @deprecated use the safer methods {@link #rresvport(java.nio.IntBuffer)} and {@link #rresvport(com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int rresvport(IntByReference intPtr1);
	/**
	 * Original signature : <code>int rresvport(int*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:69</i>
	 */
	int rresvport(IntBuffer intPtr1);
	/**
	 * Original signature : <code>int rresvport_af(int*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:71</i><br>
	 * @deprecated use the safer methods {@link #rresvport_af(java.nio.IntBuffer, int)} and {@link #rresvport_af(com.sun.jna.ptr.IntByReference, int)} instead
	 */
// 	@Deprecated 
	int rresvport_af(IntByReference intPtr1, int int1);
	/**
	 * Original signature : <code>int rresvport_af(int*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:71</i>
	 */
	int rresvport_af(IntBuffer intPtr1, int int1);
	/**
	 * Original signature : <code>int ruserok(const char*, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:73</i><br>
	 * @deprecated use the safer methods {@link #ruserok(java.lang.String, int, java.lang.String, java.lang.String)} and {@link #ruserok(com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int ruserok(Pointer charPtr1, int int1, Pointer charPtr2, Pointer charPtr3);
	/**
	 * Original signature : <code>int ruserok(const char*, int, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:73</i>
	 */
	int ruserok(String charPtr1, int int1, String charPtr2, String charPtr3);
	/**
	 * Original signature : <code>int setdomainname(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:75</i><br>
	 * @deprecated use the safer methods {@link #setdomainname(java.lang.String, int)} and {@link #setdomainname(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int setdomainname(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int setdomainname(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:75</i>
	 */
	int setdomainname(String charPtr1, int int1);
	/**
	 * Original signature : <code>int setgroups(int, const gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:77</i><br>
	 * @deprecated use the safer methods {@link #setgroups(int, java.nio.IntBuffer)} and {@link #setgroups(int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int setgroups(int int1, IntByReference gid_tPtr1);
	/**
	 * Original signature : <code>int setgroups(int, const gid_t*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:77</i>
	 */
	int setgroups(int int1, IntBuffer gid_tPtr1);
	/**
	 * Original signature : <code>void sethostid(long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:79</i>
	 */
	void sethostid(NativeLong l1);
	/**
	 * Original signature : <code>int sethostname(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:81</i><br>
	 * @deprecated use the safer methods {@link #sethostname(java.lang.String, int)} and {@link #sethostname(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int sethostname(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>int sethostname(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:81</i>
	 */
	int sethostname(String charPtr1, int int1);
	/**
	 * Original signature : <code>void setkey(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:83</i><br>
	 * @deprecated use the safer methods {@link #setkey(java.lang.String)} and {@link #setkey(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void setkey(Pointer charPtr1);
	/**
	 * Original signature : <code>void setkey(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:83</i>
	 */
	void setkey(String charPtr1);
	/**
	 * Original signature : <code>int setlogin(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:85</i><br>
	 * @deprecated use the safer methods {@link #setlogin(java.lang.String)} and {@link #setlogin(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int setlogin(Pointer charPtr1);
	/**
	 * Original signature : <code>int setlogin(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:85</i>
	 */
	int setlogin(String charPtr1);
	/**
	 * Original signature : <code>void* setmode(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:87</i><br>
	 * @deprecated use the safer methods {@link #setmode(java.lang.String)} and {@link #setmode(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer setmode(Pointer charPtr1);
	/**
	 * Original signature : <code>void* setmode(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:87</i>
	 */
	Pointer setmode(String charPtr1);
	/**
	 * Original signature : <code>int setrgid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:89</i>
	 */
	int setrgid();
	/**
	 * Original signature : <code>int setruid()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:91</i>
	 */
	int setruid();
	/**
	 * Original signature : <code>int setsgroups_np(int, const uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:93</i><br>
	 * @deprecated use the safer methods {@link #setsgroups_np(int, java.nio.ByteBuffer)} and {@link #setsgroups_np(int, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int setsgroups_np(int int1, Pointer uuid_t1);
	/**
	 * Original signature : <code>int setsgroups_np(int, const uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:93</i>
	 */
	int setsgroups_np(int int1, ByteBuffer uuid_t1);
	/**
	 * Original signature : <code>void setusershell()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:95</i>
	 */
	void setusershell();
	/**
	 * Original signature : <code>int setwgroups_np(int, const uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:97</i><br>
	 * @deprecated use the safer methods {@link #setwgroups_np(int, java.nio.ByteBuffer)} and {@link #setwgroups_np(int, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int setwgroups_np(int int1, Pointer uuid_t1);
	/**
	 * Original signature : <code>int setwgroups_np(int, const uuid_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:97</i>
	 */
	int setwgroups_np(int int1, ByteBuffer uuid_t1);
	/**
	 * Original signature : <code>int strtofflags(char**, unsigned long*, unsigned long*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:99</i>
	 */
	int strtofflags(PointerByReference charPtrPtr1, NativeLongByReference uPtr1, NativeLongByReference uPtr2);
	/**
	 * Original signature : <code>int swapon(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:101</i><br>
	 * @deprecated use the safer methods {@link #swapon(java.lang.String)} and {@link #swapon(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int swapon(Pointer charPtr1);
	/**
	 * Original signature : <code>int swapon(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:101</i>
	 */
	int swapon(String charPtr1);
	/**
	 * Original signature : <code>int syscall(int, null)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:103</i>
	 */
	int syscall(int int1, Object... varArgs1);
	/**
	 * Original signature : <code>int ttyslot()</code><br>
	 * <i>native declaration : /usr/include/unistd.h:105</i>
	 */
	int ttyslot();
	/**
	 * Original signature : <code>int undelete(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:107</i><br>
	 * @deprecated use the safer methods {@link #undelete(java.lang.String)} and {@link #undelete(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int undelete(Pointer charPtr1);
	/**
	 * Original signature : <code>int undelete(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:107</i>
	 */
	int undelete(String charPtr1);
	/**
	 * Original signature : <code>int unwhiteout(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:109</i><br>
	 * @deprecated use the safer methods {@link #unwhiteout(java.lang.String)} and {@link #unwhiteout(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int unwhiteout(Pointer charPtr1);
	/**
	 * Original signature : <code>int unwhiteout(const char*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:109</i>
	 */
	int unwhiteout(String charPtr1);
	/**
	 * Original signature : <code>void* valloc(size_t)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:111</i>
	 */
	Pointer valloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>int getsubopt(char**, const char**, char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:114</i><br>
	 * @deprecated use the safer methods {@link #getsubopt(com.sun.jna.ptr.PointerByReference, java.lang.String[], com.sun.jna.ptr.PointerByReference)} and {@link #getsubopt(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int getsubopt(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2, PointerByReference charPtrPtr3);
	/**
	 * Original signature : <code>int getsubopt(char**, const char**, char**)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:114</i>
	 */
	int getsubopt(PointerByReference charPtrPtr1, String charPtrPtr2[], PointerByReference charPtrPtr3);
	/**
	 * HFS & HFS Plus semantics system calls go here<br>
	 * Original signature : <code>int fgetattrlist(int, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:119</i>
	 */
	int fgetattrlist(int int1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int fsetattrlist(int, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:121</i>
	 */
	int fsetattrlist(int int1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int getattrlist(const char*, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:123</i><br>
	 * @deprecated use the safer methods {@link #getattrlist(java.lang.String, com.sun.jna.Pointer, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong)} and {@link #getattrlist(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong)} instead
	 */
// 	@Deprecated 
	int getattrlist(Pointer charPtr1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int getattrlist(const char*, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:123</i>
	 */
	int getattrlist(String charPtr1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int setattrlist(const char*, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:125</i><br>
	 * @deprecated use the safer methods {@link #setattrlist(java.lang.String, com.sun.jna.Pointer, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong)} and {@link #setattrlist(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.NativeLong)} instead
	 */
// 	@Deprecated 
	int setattrlist(Pointer charPtr1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int setattrlist(const char*, void*, void*, size_t, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:125</i>
	 */
	int setattrlist(String charPtr1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLong u1);
	/**
	 * Original signature : <code>int exchangedata(const char*, const char*, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:127</i><br>
	 * @deprecated use the safer methods {@link #exchangedata(java.lang.String, java.lang.String, com.sun.jna.NativeLong)} and {@link #exchangedata(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
// 	@Deprecated 
	int exchangedata(Pointer charPtr1, Pointer charPtr2, NativeLong u1);
	/**
	 * Original signature : <code>int exchangedata(const char*, const char*, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:127</i>
	 */
	int exchangedata(String charPtr1, String charPtr2, NativeLong u1);
	/**
	 * Original signature : <code>int getdirentriesattr(int, void*, void*, size_t, unsigned long*, unsigned long*, unsigned long*, unsigned long)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:129</i>
	 */
	int getdirentriesattr(int int1, Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeLongByReference uPtr1, NativeLongByReference uPtr2, NativeLongByReference uPtr3, NativeLong u1);
	/**
	 * Original signature : <code>int searchfs(const char*, fssearchblock*, unsigned long*, unsigned int, unsigned int, searchstate*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:133</i><br>
	 * @deprecated use the safer methods {@link #searchfs(java.lang.String, org.terraswarm.gdp.Gdp10Library.fssearchblock, com.sun.jna.ptr.NativeLongByReference, int, int, org.terraswarm.gdp.Gdp10Library.searchstate)} and {@link #searchfs(com.sun.jna.Pointer, org.terraswarm.gdp.Gdp10Library.fssearchblock, com.sun.jna.ptr.NativeLongByReference, int, int, org.terraswarm.gdp.Gdp10Library.searchstate)} instead
	 */
// 	@Deprecated 
	int searchfs(Pointer charPtr1, Gdp10Library.fssearchblock fssearchblockPtr1, NativeLongByReference uPtr1, int int1, int int2, Gdp10Library.searchstate searchstatePtr1);
	/**
	 * Original signature : <code>int searchfs(const char*, fssearchblock*, unsigned long*, unsigned int, unsigned int, searchstate*)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:133</i>
	 */
	int searchfs(String charPtr1, Gdp10Library.fssearchblock fssearchblockPtr1, NativeLongByReference uPtr1, int int1, int int2, Gdp10Library.searchstate searchstatePtr1);
	/**
	 * Original signature : <code>int fsctl(const char*, unsigned long, void*, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:135</i><br>
	 * @deprecated use the safer methods {@link #fsctl(java.lang.String, com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} and {@link #fsctl(com.sun.jna.Pointer, com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int fsctl(Pointer charPtr1, NativeLong u1, Pointer voidPtr1, int int1);
	/**
	 * Original signature : <code>int fsctl(const char*, unsigned long, void*, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:135</i>
	 */
	int fsctl(String charPtr1, NativeLong u1, Pointer voidPtr1, int int1);
	/**
	 * Original signature : <code>int ffsctl(int, unsigned long, void*, unsigned int)</code><br>
	 * <i>native declaration : /usr/include/unistd.h:137</i>
	 */
	int ffsctl(int int1, NativeLong u1, Pointer voidPtr1, int int2);
	/**
	 * built-in for gcc<br>
	 * Original signature : <code>void* alloca(size_t)</code><br>
	 * @param size_t1 built-in for gcc<br>
	 * <i>native declaration : /usr/include/alloca.h:6</i>
	 */
	Pointer alloca(NativeSizeT size_t1);
	/**
	 * Original signature : <code>void abort()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:16</i>
	 */
	void abort();
	/**
	 * Original signature : <code>int abs(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:18</i>
	 */
	int abs(int int1);
	/**
	 * Original signature : <code>int atexit(atexit_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:20</i>
	 */
	int atexit(Gdp10Library.atexit_arg1_callback arg1);
	/**
	 * Original signature : <code>double atof(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:22</i><br>
	 * @deprecated use the safer methods {@link #atof(java.lang.String)} and {@link #atof(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	double atof(Pointer charPtr1);
	/**
	 * Original signature : <code>double atof(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:22</i>
	 */
	double atof(String charPtr1);
	/**
	 * Original signature : <code>int atoi(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:24</i><br>
	 * @deprecated use the safer methods {@link #atoi(java.lang.String)} and {@link #atoi(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int atoi(Pointer charPtr1);
	/**
	 * Original signature : <code>int atoi(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:24</i>
	 */
	int atoi(String charPtr1);
	/**
	 * Original signature : <code>long atol(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:26</i><br>
	 * @deprecated use the safer methods {@link #atol(java.lang.String)} and {@link #atol(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	NativeLong atol(Pointer charPtr1);
	/**
	 * Original signature : <code>long atol(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:26</i>
	 */
	NativeLong atol(String charPtr1);
	/**
	 * Original signature : <code>long long atoll(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:28</i><br>
	 * @deprecated use the safer methods {@link #atoll(java.lang.String)} and {@link #atoll(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	long atoll(Pointer charPtr1);
	/**
	 * Original signature : <code>long long atoll(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:28</i>
	 */
	long atoll(String charPtr1);
	/**
	 * Original signature : <code>void* bsearch(const void*, const void*, size_t, size_t, bsearch_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:30</i>
	 */
	Pointer bsearch(Pointer voidPtr1, Pointer voidPtr2, NativeSizeT size_t1, NativeSizeT size_t2, Gdp10Library.bsearch_arg1_callback arg1);
	/**
	 * Original signature : <code>void* calloc(size_t, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:32</i>
	 */
	Pointer calloc(NativeSizeT size_t1, NativeSizeT size_t2);
	/**
	 * Original signature : <code>div_t div(int, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:34</i>
	 */
	org.terraswarm.gdp.div_t.ByValue div(int int1, int int2);
	/**
	 * Original signature : <code>void exit(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:36</i>
	 */
	void exit(int int1);
	/**
	 * Original signature : <code>void free(void*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:38</i>
	 */
	void free(Pointer voidPtr1);
	/**
	 * Original signature : <code>char* getenv(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:40</i><br>
	 * @deprecated use the safer methods {@link #getenv(java.lang.String)} and {@link #getenv(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer getenv(Pointer charPtr1);
	/**
	 * Original signature : <code>char* getenv(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:40</i>
	 */
	Pointer getenv(String charPtr1);
	/**
	 * Original signature : <code>long labs(long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:42</i>
	 */
	NativeLong labs(NativeLong l1);
	/**
	 * Original signature : <code>ldiv_t ldiv(long, long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:44</i>
	 */
	org.terraswarm.gdp.ldiv_t.ByValue ldiv(NativeLong l1, NativeLong l2);
	/**
	 * Original signature : <code>long long llabs(long long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:46</i>
	 */
	long llabs(long l1);
	/**
	 * Original signature : <code>lldiv_t lldiv(long long, long long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:48</i>
	 */
	org.terraswarm.gdp.lldiv_t.ByValue lldiv(long l1, long l2);
	/**
	 * Original signature : <code>void* malloc(size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:50</i>
	 */
	Pointer malloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>int mblen(const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:52</i><br>
	 * @deprecated use the safer methods {@link #mblen(java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #mblen(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int mblen(Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int mblen(const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:52</i>
	 */
	int mblen(String charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>size_t mbstowcs(wchar_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:54</i><br>
// 	 * @deprecated use the safer methods {@link #mbstowcs(java.nio.CharBuffer, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #mbstowcs(com.ochafik.lang.jnaerator.runtime.CharByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
// 	NativeSizeT mbstowcs(CharByReference wchar_tPtr1, Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>size_t mbstowcs(wchar_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:54</i>
	 */
	NativeSizeT mbstowcs(CharBuffer wchar_tPtr1, String charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int mbtowc(wchar_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:56</i><br>
// 	 * @deprecated use the safer methods {@link #mbtowc(java.nio.CharBuffer, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #mbtowc(com.ochafik.lang.jnaerator.runtime.CharByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
// 	int mbtowc(CharByReference wchar_tPtr1, Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int mbtowc(wchar_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:56</i>
	 */
	int mbtowc(CharBuffer wchar_tPtr1, String charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int posix_memalign(void**, size_t, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:58</i>
	 */
	int posix_memalign(PointerByReference voidPtrPtr1, NativeSizeT size_t1, NativeSizeT size_t2);
	/**
	 * Original signature : <code>void qsort(void*, size_t, size_t, qsort_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:60</i>
	 */
	void qsort(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Gdp10Library.qsort_arg1_callback arg1);
	/**
	 * Original signature : <code>int rand()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:62</i>
	 */
	int rand();
	/**
	 * Original signature : <code>void* realloc(void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:64</i>
	 */
	Pointer realloc(Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>void srand(unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:66</i>
	 */
	void srand(int u1);
	/**
	 * Original signature : <code>double strtod(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:68</i><br>
	 * @deprecated use the safer methods {@link #strtod(java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #strtod(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	double strtod(Pointer charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>double strtod(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:68</i>
	 */
	double strtod(String charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>float strtof(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:70</i><br>
	 * @deprecated use the safer methods {@link #strtof(java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #strtof(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	float strtof(Pointer charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>float strtof(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:70</i>
	 */
	float strtof(String charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>long strtol(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:72</i><br>
	 * @deprecated use the safer methods {@link #strtol(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtol(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	NativeLong strtol(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long strtol(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:72</i>
	 */
	NativeLong strtol(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long double strtold(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:74</i><br>
	 * @deprecated use the safer methods {@link #strtold(java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #strtold(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	double strtold(Pointer charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>long double strtold(const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:74</i>
	 */
	double strtold(String charPtr1, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>long long strtoll(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:76</i><br>
	 * @deprecated use the safer methods {@link #strtoll(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoll(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtoll(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtoll(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:76</i>
	 */
	long strtoll(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long strtoul(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:78</i><br>
	 * @deprecated use the safer methods {@link #strtoul(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoul(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	NativeLong strtoul(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long strtoul(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:78</i>
	 */
	NativeLong strtoul(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtoull(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:80</i><br>
	 * @deprecated use the safer methods {@link #strtoull(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoull(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtoull(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtoull(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:80</i>
	 */
	long strtoull(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>int system(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:82</i><br>
	 * @deprecated use the safer methods {@link #system(java.lang.String)} and {@link #system(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int system(Pointer charPtr1);
	/**
	 * Original signature : <code>int system(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:82</i>
	 */
	int system(String charPtr1);
	/**
	 * Original signature : <code>size_t wcstombs(char*, const wchar_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:84</i><br>
// 	 * @deprecated use the safer methods {@link #wcstombs(java.nio.ByteBuffer, com.sun.jna.WString, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #wcstombs(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.CharByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
// 	NativeSizeT wcstombs(Pointer charPtr1, CharByReference wchar_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>size_t wcstombs(char*, const wchar_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:84</i>
	 */
	NativeSizeT wcstombs(ByteBuffer charPtr1, WString wchar_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int wctomb(char*, wchar_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:86</i><br>
	 * @deprecated use the safer methods {@link #wctomb(java.nio.ByteBuffer, char)} and {@link #wctomb(com.sun.jna.Pointer, char)} instead
	 */
// 	@Deprecated 
	int wctomb(Pointer charPtr1, char wchar_t1);
	/**
	 * Original signature : <code>int wctomb(char*, wchar_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:86</i>
	 */
	int wctomb(ByteBuffer charPtr1, char wchar_t1);
	/**
	 * Original signature : <code>long a64l(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:90</i><br>
	 * @deprecated use the safer methods {@link #a64l(java.lang.String)} and {@link #a64l(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	NativeLong a64l(Pointer charPtr1);
	/**
	 * Original signature : <code>long a64l(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:90</i>
	 */
	NativeLong a64l(String charPtr1);
	/**
	 * Original signature : <code>double drand48()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:92</i>
	 */
	double drand48();
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* ecvt(double, int, int*, int*)</code><br>
	 * @param intPtr2 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:98</i><br>
	 * @deprecated use the safer methods {@link #ecvt(double, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #ecvt(double, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	Pointer ecvt(double double1, int int1, IntByReference intPtr1, IntByReference intPtr2);
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* ecvt(double, int, int*, int*)</code><br>
	 * @param intPtr2 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:98</i>
	 */
	Pointer ecvt(double double1, int int1, IntBuffer intPtr1, IntBuffer intPtr2);
	/**
	 * Original signature : <code>double erand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:100</i><br>
	 * @deprecated use the safer methods {@link #erand48(java.nio.ShortBuffer)} and {@link #erand48(com.sun.jna.ptr.ShortByReference)} instead
	 */
// 	@Deprecated 
	double erand48(ShortByReference uArr1);
	/**
	 * Original signature : <code>double erand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:100</i>
	 */
	double erand48(ShortBuffer uArr1);
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* fcvt(double, int, int*, int*)</code><br>
	 * @param intPtr2 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:106</i><br>
	 * @deprecated use the safer methods {@link #fcvt(double, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #fcvt(double, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	Pointer fcvt(double double1, int int1, IntByReference intPtr1, IntByReference intPtr2);
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* fcvt(double, int, int*, int*)</code><br>
	 * @param intPtr2 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:106</i>
	 */
	Pointer fcvt(double double1, int int1, IntBuffer intPtr1, IntBuffer intPtr2);
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* gcvt(double, int, char*)</code><br>
	 * @param charPtr1 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:112</i><br>
	 * @deprecated use the safer methods {@link #gcvt(double, int, java.nio.ByteBuffer)} and {@link #gcvt(double, int, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer gcvt(double double1, int int1, Pointer charPtr1);
	/**
	 * LEGACY<br>
	 * Original signature : <code>char* gcvt(double, int, char*)</code><br>
	 * @param charPtr1 LEGACY<br>
	 * <i>native declaration : /usr/include/stdlib.h:112</i>
	 */
	Pointer gcvt(double double1, int int1, ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int grantpt(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:116</i>
	 */
	int grantpt(int int1);
	/**
	 * no  __DARWIN_ALIAS needed<br>
	 * Original signature : <code>char* initstate(unsigned, char*, size_t)</code><br>
	 * @param size_t1 no  __DARWIN_ALIAS needed<br>
	 * <i>native declaration : /usr/include/stdlib.h:122</i><br>
	 * @deprecated use the safer methods {@link #initstate(int, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #initstate(int, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	Pointer initstate(int u1, Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * no  __DARWIN_ALIAS needed<br>
	 * Original signature : <code>char* initstate(unsigned, char*, size_t)</code><br>
	 * @param size_t1 no  __DARWIN_ALIAS needed<br>
	 * <i>native declaration : /usr/include/stdlib.h:122</i>
	 */
	Pointer initstate(int u1, ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>long jrand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:124</i><br>
	 * @deprecated use the safer methods {@link #jrand48(java.nio.ShortBuffer)} and {@link #jrand48(com.sun.jna.ptr.ShortByReference)} instead
	 */
// 	@Deprecated 
	NativeLong jrand48(ShortByReference uArr1);
	/**
	 * Original signature : <code>long jrand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:124</i>
	 */
	NativeLong jrand48(ShortBuffer uArr1);
	/**
	 * Original signature : <code>char* l64a(long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:126</i>
	 */
	Pointer l64a(NativeLong l1);
	/**
	 * Original signature : <code>void lcong48(unsigned short[7])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:128</i><br>
	 * @deprecated use the safer methods {@link #lcong48(java.nio.ShortBuffer)} and {@link #lcong48(com.sun.jna.ptr.ShortByReference)} instead
	 */
// 	@Deprecated 
	void lcong48(ShortByReference uArr1);
	/**
	 * Original signature : <code>void lcong48(unsigned short[7])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:128</i>
	 */
	void lcong48(ShortBuffer uArr1);
	/**
	 * Original signature : <code>long lrand48()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:130</i>
	 */
	NativeLong lrand48();
	/**
	 * Original signature : <code>long mrand48()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:136</i>
	 */
	NativeLong mrand48();
	/**
	 * Original signature : <code>long nrand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:138</i><br>
	 * @deprecated use the safer methods {@link #nrand48(java.nio.ShortBuffer)} and {@link #nrand48(com.sun.jna.ptr.ShortByReference)} instead
	 */
// 	@Deprecated 
	NativeLong nrand48(ShortByReference uArr1);
	/**
	 * Original signature : <code>long nrand48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:138</i>
	 */
	NativeLong nrand48(ShortBuffer uArr1);
	/**
	 * Original signature : <code>int posix_openpt(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:140</i>
	 */
	int posix_openpt(int int1);
	/**
	 * Original signature : <code>char* ptsname(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:142</i>
	 */
	Pointer ptsname(int int1);
	/**
	 * Original signature : <code>int putenv(char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:144</i><br>
	 * @deprecated use the safer methods {@link #putenv(java.nio.ByteBuffer)} and {@link #putenv(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int putenv(Pointer charPtr1);
	/**
	 * Original signature : <code>int putenv(char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:144</i>
	 */
	int putenv(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>long random()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:146</i>
	 */
	NativeLong random();
	/**
	 * Original signature : <code>int rand_r(unsigned*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:148</i><br>
	 * @deprecated use the safer methods {@link #rand_r(java.nio.IntBuffer)} and {@link #rand_r(com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int rand_r(IntByReference uPtr1);
	/**
	 * Original signature : <code>int rand_r(unsigned*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:148</i>
	 */
	int rand_r(IntBuffer uPtr1);
	/**
	 * Original signature : <code>char* realpath(const char*, char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:150</i><br>
	 * @deprecated use the safer methods {@link #realpath(java.lang.String, java.nio.ByteBuffer)} and {@link #realpath(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer realpath(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>char* realpath(const char*, char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:150</i>
	 */
	Pointer realpath(String charPtr1, ByteBuffer charPtr2);
	/**
	 * Original signature : <code>short* seed48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:152</i><br>
	 * @deprecated use the safer methods {@link #seed48(java.nio.ShortBuffer)} and {@link #seed48(com.sun.jna.ptr.ShortByReference)} instead
	 */
// 	@Deprecated 
	ShortByReference seed48(ShortByReference uArr1);
	/**
	 * Original signature : <code>short* seed48(unsigned short[3])</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:152</i>
	 */
	ShortByReference seed48(ShortBuffer uArr1);
	/**
	 * Original signature : <code>int setenv(const char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:154</i><br>
	 * @deprecated use the safer methods {@link #setenv(java.lang.String, java.lang.String, int)} and {@link #setenv(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int setenv(Pointer charPtr1, Pointer charPtr2, int int1);
	/**
	 * Original signature : <code>int setenv(const char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:154</i>
	 */
	int setenv(String charPtr1, String charPtr2, int int1);
	/**
	 * Original signature : <code>char* setstate(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:158</i><br>
	 * @deprecated use the safer methods {@link #setstate(java.lang.String)} and {@link #setstate(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer setstate(Pointer charPtr1);
	/**
	 * Original signature : <code>char* setstate(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:158</i>
	 */
	Pointer setstate(String charPtr1);
	/**
	 * Original signature : <code>void srand48(long)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:160</i>
	 */
	void srand48(NativeLong l1);
	/**
	 * Original signature : <code>void srandom(unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:162</i>
	 */
	void srandom(int u1);
	/**
	 * Original signature : <code>int unlockpt(int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:164</i>
	 */
	int unlockpt(int int1);
	/**
	 * Original signature : <code>int unsetenv(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:166</i><br>
	 * @deprecated use the safer methods {@link #unsetenv(java.lang.String)} and {@link #unsetenv(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int unsetenv(Pointer charPtr1);
	/**
	 * Original signature : <code>int unsetenv(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:166</i>
	 */
	int unsetenv(String charPtr1);
	/**
	 * Original signature : <code>u_int32_t arc4random()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:1</i>
	 */
	int arc4random();
	/**
	 * dat<br>
	 * Original signature : <code>void arc4random_addrandom(unsigned char*, int)</code><br>
	 * @param charPtr1 datlen<br>
	 * <i>native declaration : /usr/include/stdlib.h:7</i><br>
	 * @deprecated use the safer methods {@link #arc4random_addrandom(java.nio.ByteBuffer, int)} and {@link #arc4random_addrandom(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	void arc4random_addrandom(Pointer charPtr1, int int1);
	/**
	 * dat<br>
	 * Original signature : <code>void arc4random_addrandom(unsigned char*, int)</code><br>
	 * @param charPtr1 datlen<br>
	 * <i>native declaration : /usr/include/stdlib.h:7</i>
	 */
	void arc4random_addrandom(ByteBuffer charPtr1, int int1);
	/**
	 * buf<br>
	 * Original signature : <code>void arc4random_buf(void*, size_t)</code><br>
	 * @param voidPtr1 nbytes<br>
	 * <i>native declaration : /usr/include/stdlib.h:13</i>
	 */
	void arc4random_buf(Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>void arc4random_stir()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:15</i>
	 */
	void arc4random_stir();
	/**
	 * Original signature : <code>u_int32_t arc4random_uniform(u_int32_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:17</i>
	 */
	int arc4random_uniform(int u_int32_t1);
	/**
	 * Original signature : <code>char* cgetcap(char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:19</i><br>
	 * @deprecated use the safer methods {@link #cgetcap(java.nio.ByteBuffer, java.lang.String, int)} and {@link #cgetcap(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	Pointer cgetcap(Pointer charPtr1, Pointer charPtr2, int int1);
	/**
	 * Original signature : <code>char* cgetcap(char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:19</i>
	 */
	Pointer cgetcap(ByteBuffer charPtr1, String charPtr2, int int1);
	/**
	 * Original signature : <code>int cgetclose()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:21</i>
	 */
	int cgetclose();
	/**
	 * Original signature : <code>int cgetent(char**, char**, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:23</i><br>
	 * @deprecated use the safer methods {@link #cgetent(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cgetent(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int cgetent(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2, Pointer charPtr1);
	/**
	 * Original signature : <code>int cgetent(char**, char**, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:23</i>
	 */
	int cgetent(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2, String charPtr1);
	/**
	 * Original signature : <code>int cgetfirst(char**, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:25</i>
	 */
	int cgetfirst(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2);
	/**
	 * Original signature : <code>int cgetmatch(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:27</i><br>
	 * @deprecated use the safer methods {@link #cgetmatch(java.lang.String, java.lang.String)} and {@link #cgetmatch(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int cgetmatch(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int cgetmatch(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:27</i>
	 */
	int cgetmatch(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int cgetnext(char**, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:29</i>
	 */
	int cgetnext(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2);
	/**
	 * Original signature : <code>int cgetnum(char*, const char*, long*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:31</i><br>
	 * @deprecated use the safer methods {@link #cgetnum(java.nio.ByteBuffer, java.lang.String, com.sun.jna.ptr.NativeLongByReference)} and {@link #cgetnum(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
// 	@Deprecated 
	int cgetnum(Pointer charPtr1, Pointer charPtr2, NativeLongByReference lPtr1);
	/**
	 * Original signature : <code>int cgetnum(char*, const char*, long*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:31</i>
	 */
	int cgetnum(ByteBuffer charPtr1, String charPtr2, NativeLongByReference lPtr1);
	/**
	 * Original signature : <code>int cgetset(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:33</i><br>
	 * @deprecated use the safer methods {@link #cgetset(java.lang.String)} and {@link #cgetset(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int cgetset(Pointer charPtr1);
	/**
	 * Original signature : <code>int cgetset(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:33</i>
	 */
	int cgetset(String charPtr1);
	/**
	 * Original signature : <code>int cgetstr(char*, const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:35</i><br>
	 * @deprecated use the safer methods {@link #cgetstr(java.nio.ByteBuffer, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #cgetstr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int cgetstr(Pointer charPtr1, Pointer charPtr2, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int cgetstr(char*, const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:35</i>
	 */
	int cgetstr(ByteBuffer charPtr1, String charPtr2, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int cgetustr(char*, const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:37</i><br>
	 * @deprecated use the safer methods {@link #cgetustr(java.nio.ByteBuffer, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #cgetustr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int cgetustr(Pointer charPtr1, Pointer charPtr2, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int cgetustr(char*, const char*, char**)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:37</i>
	 */
	int cgetustr(ByteBuffer charPtr1, String charPtr2, PointerByReference charPtrPtr1);
	/**
	 * Original signature : <code>int daemon(int, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:39</i>
	 */
	int daemon(int int1, int int2);
	/**
	 * Original signature : <code>char* devname()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:41</i>
	 */
	Pointer devname();
	/**
	 * Original signature : <code>char* devname_r(char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:43</i><br>
	 * @deprecated use the safer methods {@link #devname_r(java.nio.ByteBuffer, int)} and {@link #devname_r(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	Pointer devname_r(Pointer buf, int len);
	/**
	 * Original signature : <code>char* devname_r(char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:43</i>
	 */
	Pointer devname_r(ByteBuffer buf, int len);
	/**
	 * Original signature : <code>char* getbsize(int*, long*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:45</i><br>
	 * @deprecated use the safer methods {@link #getbsize(java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #getbsize(com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
// 	@Deprecated 
	Pointer getbsize(IntByReference intPtr1, NativeLongByReference lPtr1);
	/**
	 * Original signature : <code>char* getbsize(int*, long*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:45</i>
	 */
	Pointer getbsize(IntBuffer intPtr1, NativeLongByReference lPtr1);
	/**
	 * Original signature : <code>int getloadavg(double[], int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:47</i><br>
	 * @deprecated use the safer methods {@link #getloadavg(java.nio.DoubleBuffer, int)} and {@link #getloadavg(com.sun.jna.ptr.DoubleByReference, int)} instead
	 */
// 	@Deprecated 
	int getloadavg(DoubleByReference doubleArr1, int int1);
	/**
	 * Original signature : <code>int getloadavg(double[], int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:47</i>
	 */
	int getloadavg(DoubleBuffer doubleArr1, int int1);
	/**
	 * Original signature : <code>char* getprogname()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:49</i>
	 */
	String getprogname();
	/**
	 * Original signature : <code>int heapsort(void*, size_t, size_t, heapsort_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:51</i>
	 */
	int heapsort(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Gdp10Library.heapsort_arg1_callback arg1);
	/**
	 * Original signature : <code>int mergesort(void*, size_t, size_t, mergesort_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:53</i>
	 */
	int mergesort(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Gdp10Library.mergesort_arg1_callback arg1);
	/**
	 * Original signature : <code>void psort(void*, size_t, size_t, psort_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:55</i>
	 */
	void psort(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Gdp10Library.psort_arg1_callback arg1);
	/**
	 * Original signature : <code>void psort_r(void*, size_t, size_t, void*, psort_r_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:57</i>
	 */
	void psort_r(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Pointer voidPtr2, Gdp10Library.psort_r_arg1_callback arg1);
	/**
	 * Original signature : <code>void qsort_r(void*, size_t, size_t, void*, qsort_r_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:59</i>
	 */
	void qsort_r(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, Pointer voidPtr2, Gdp10Library.qsort_r_arg1_callback arg1);
	/**
	 * Original signature : <code>int radixsort(const unsigned char**, int, const unsigned char*, unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:61</i><br>
	 * @deprecated use the safer methods {@link #radixsort(com.sun.jna.ptr.PointerByReference, int, byte[], int)} and {@link #radixsort(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int radixsort(PointerByReference charPtrPtr1, int int1, Pointer charPtr1, int u1);
	/**
	 * Original signature : <code>int radixsort(const unsigned char**, int, const unsigned char*, unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:61</i>
	 */
	int radixsort(PointerByReference charPtrPtr1, int int1, byte charPtr1[], int u1);
	/**
	 * Original signature : <code>void setprogname(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:63</i><br>
	 * @deprecated use the safer methods {@link #setprogname(java.lang.String)} and {@link #setprogname(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void setprogname(Pointer charPtr1);
	/**
	 * Original signature : <code>void setprogname(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:63</i>
	 */
	void setprogname(String charPtr1);
	/**
	 * Original signature : <code>int sradixsort(const unsigned char**, int, const unsigned char*, unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:65</i><br>
	 * @deprecated use the safer methods {@link #sradixsort(com.sun.jna.ptr.PointerByReference, int, byte[], int)} and {@link #sradixsort(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int sradixsort(PointerByReference charPtrPtr1, int int1, Pointer charPtr1, int u1);
	/**
	 * Original signature : <code>int sradixsort(const unsigned char**, int, const unsigned char*, unsigned)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:65</i>
	 */
	int sradixsort(PointerByReference charPtrPtr1, int int1, byte charPtr1[], int u1);
	/**
	 * Original signature : <code>void sranddev()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:67</i>
	 */
	void sranddev();
	/**
	 * Original signature : <code>void srandomdev()</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:69</i>
	 */
	void srandomdev();
	/**
	 * Original signature : <code>void* reallocf(void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:71</i>
	 */
	Pointer reallocf(Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>long long strtoq(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:73</i><br>
	 * @deprecated use the safer methods {@link #strtoq(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoq(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtoq(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtoq(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:73</i>
	 */
	long strtoq(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtouq(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:75</i><br>
	 * @deprecated use the safer methods {@link #strtouq(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtouq(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtouq(Pointer charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>long long strtouq(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/stdlib.h:75</i>
	 */
	long strtouq(String charPtr1, PointerByReference charPtrPtr1, int int1);
	/**
	 * Original signature : <code>void clearerr(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:66</i>
	 */
	void clearerr(FILE FILEPtr1);
	/**
	 * Original signature : <code>int fclose(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:68</i>
	 */
	int fclose(FILE FILEPtr1);
	/**
	 * Original signature : <code>int feof(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:70</i>
	 */
	int feof(FILE FILEPtr1);
	/**
	 * Original signature : <code>int ferror(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:72</i>
	 */
	int ferror(FILE FILEPtr1);
	/**
	 * Original signature : <code>int fflush(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:74</i>
	 */
	int fflush(FILE FILEPtr1);
	/**
	 * Original signature : <code>int fgetc(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:76</i>
	 */
	int fgetc(FILE FILEPtr1);
	/**
	 * Original signature : <code>int fgetpos(FILE*, fpos_t*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:78</i><br>
	 * @deprecated use the safer methods {@link #fgetpos(org.terraswarm.gdp.FILE, java.nio.LongBuffer)} and {@link #fgetpos(org.terraswarm.gdp.FILE, com.sun.jna.ptr.LongByReference)} instead
	 */
// 	@Deprecated 
	int fgetpos(FILE FILEPtr1, LongByReference fpos_tPtr1);
	/**
	 * Original signature : <code>int fgetpos(FILE*, fpos_t*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:78</i>
	 */
	int fgetpos(FILE FILEPtr1, LongBuffer fpos_tPtr1);
	/**
	 * Original signature : <code>char* fgets(char*, int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:80</i><br>
	 * @deprecated use the safer methods {@link #fgets(java.nio.ByteBuffer, int, org.terraswarm.gdp.FILE)} and {@link #fgets(com.sun.jna.Pointer, int, org.terraswarm.gdp.FILE)} instead
	 */
// 	@Deprecated 
	Pointer fgets(Pointer charPtr1, int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>char* fgets(char*, int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:80</i>
	 */
	Pointer fgets(ByteBuffer charPtr1, int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>FILE* fopen(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:82</i><br>
	 * @deprecated use the safer methods {@link #fopen(java.lang.String, java.lang.String)} and {@link #fopen(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	FILE fopen(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>FILE* fopen(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:82</i>
	 */
	FILE fopen(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int fprintf(FILE*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:84</i><br>
	 * @deprecated use the safer methods {@link #fprintf(org.terraswarm.gdp.FILE, java.lang.String, java.lang.Object)} and {@link #fprintf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int fprintf(FILE FILEPtr1, Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int fprintf(FILE*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:84</i>
	 */
	int fprintf(FILE FILEPtr1, String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int fputc(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:86</i>
	 */
	int fputc(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>int fputs(const char*, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:88</i><br>
	 * @deprecated use the safer methods {@link #fputs(java.lang.String, org.terraswarm.gdp.FILE)} and {@link #fputs(com.sun.jna.Pointer, org.terraswarm.gdp.FILE)} instead
	 */
// 	@Deprecated 
	int fputs(Pointer charPtr1, FILE FILEPtr1);
	/**
	 * Original signature : <code>int fputs(const char*, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:88</i>
	 */
	int fputs(String charPtr1, FILE FILEPtr1);
	/**
	 * Original signature : <code>size_t fread(void*, size_t, size_t, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:90</i>
	 */
	NativeSizeT fread(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, FILE FILEPtr1);
	/**
	 * Original signature : <code>FILE* freopen(const char*, const char*, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:92</i><br>
	 * @deprecated use the safer methods {@link #freopen(java.lang.String, java.lang.String, org.terraswarm.gdp.FILE)} and {@link #freopen(com.sun.jna.Pointer, com.sun.jna.Pointer, org.terraswarm.gdp.FILE)} instead
	 */
// 	@Deprecated 
	FILE freopen(Pointer charPtr1, Pointer charPtr2, FILE FILEPtr1);
	/**
	 * Original signature : <code>FILE* freopen(const char*, const char*, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:92</i>
	 */
	FILE freopen(String charPtr1, String charPtr2, FILE FILEPtr1);
	/**
	 * Original signature : <code>int fscanf(FILE*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:94</i><br>
	 * @deprecated use the safer methods {@link #fscanf(org.terraswarm.gdp.FILE, java.lang.String, java.lang.Object)} and {@link #fscanf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int fscanf(FILE FILEPtr1, Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int fscanf(FILE*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:94</i>
	 */
	int fscanf(FILE FILEPtr1, String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int fseek(FILE*, long, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:96</i>
	 */
	int fseek(FILE FILEPtr1, NativeLong l1, int int1);
	/**
	 * Original signature : <code>int fsetpos(FILE*, const fpos_t*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:98</i><br>
	 * @deprecated use the safer methods {@link #fsetpos(org.terraswarm.gdp.FILE, java.nio.LongBuffer)} and {@link #fsetpos(org.terraswarm.gdp.FILE, com.sun.jna.ptr.LongByReference)} instead
	 */
// 	@Deprecated 
	int fsetpos(FILE FILEPtr1, LongByReference fpos_tPtr1);
	/**
	 * Original signature : <code>int fsetpos(FILE*, const fpos_t*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:98</i>
	 */
	int fsetpos(FILE FILEPtr1, LongBuffer fpos_tPtr1);
	/**
	 * Original signature : <code>long ftell(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:100</i>
	 */
	NativeLong ftell(FILE FILEPtr1);
	/**
	 * Original signature : <code>size_t fwrite(const void*, size_t, size_t, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:102</i>
	 */
	NativeSizeT fwrite(Pointer voidPtr1, NativeSizeT size_t1, NativeSizeT size_t2, FILE FILEPtr1);
	/**
	 * Original signature : <code>int getc(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:104</i>
	 */
	int getc(FILE FILEPtr1);
	/**
	 * Original signature : <code>int getchar()</code><br>
	 * <i>native declaration : /usr/include/stdio.h:106</i>
	 */
	int getchar();
	/**
	 * Original signature : <code>char* gets(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:108</i><br>
	 * @deprecated use the safer methods {@link #gets(java.nio.ByteBuffer)} and {@link #gets(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer gets(Pointer charPtr1);
	/**
	 * Original signature : <code>char* gets(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:108</i>
	 */
	Pointer gets(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>void perror(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:110</i><br>
	 * @deprecated use the safer methods {@link #perror(java.lang.String)} and {@link #perror(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void perror(Pointer charPtr1);
	/**
	 * Original signature : <code>void perror(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:110</i>
	 */
	void perror(String charPtr1);
	/**
	 * Original signature : <code>int printf(const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:112</i><br>
	 * @deprecated use the safer methods {@link #printf(java.lang.String, java.lang.Object)} and {@link #printf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int printf(Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int printf(const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:112</i>
	 */
	int printf(String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int putc(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:114</i>
	 */
	int putc(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>int putchar(int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:116</i>
	 */
	int putchar(int int1);
	/**
	 * Original signature : <code>int puts(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:118</i><br>
	 * @deprecated use the safer methods {@link #puts(java.lang.String)} and {@link #puts(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int puts(Pointer charPtr1);
	/**
	 * Original signature : <code>int puts(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:118</i>
	 */
	int puts(String charPtr1);
	/**
	 * Original signature : <code>int remove(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:120</i><br>
	 * @deprecated use the safer methods {@link #remove(java.lang.String)} and {@link #remove(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int remove(Pointer charPtr1);
	/**
	 * Original signature : <code>int remove(const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:120</i>
	 */
	int remove(String charPtr1);
	/**
	 * Original signature : <code>int rename(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:122</i><br>
	 * @deprecated use the safer methods {@link #rename(java.lang.String, java.lang.String)} and {@link #rename(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int rename(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>int rename(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:122</i>
	 */
	int rename(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>void rewind(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:124</i>
	 */
	void rewind(FILE FILEPtr1);
	/**
	 * Original signature : <code>int scanf(const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:126</i><br>
	 * @deprecated use the safer methods {@link #scanf(java.lang.String, java.lang.Object)} and {@link #scanf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int scanf(Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int scanf(const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:126</i>
	 */
	int scanf(String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>void setbuf(FILE*, char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:128</i><br>
	 * @deprecated use the safer methods {@link #setbuf(org.terraswarm.gdp.FILE, java.nio.ByteBuffer)} and {@link #setbuf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void setbuf(FILE FILEPtr1, Pointer charPtr1);
	/**
	 * Original signature : <code>void setbuf(FILE*, char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:128</i>
	 */
	void setbuf(FILE FILEPtr1, ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int setvbuf(FILE*, char*, int, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:130</i><br>
	 * @deprecated use the safer methods {@link #setvbuf(org.terraswarm.gdp.FILE, java.nio.ByteBuffer, int, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #setvbuf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, int, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int setvbuf(FILE FILEPtr1, Pointer charPtr1, int int1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int setvbuf(FILE*, char*, int, size_t)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:130</i>
	 */
	int setvbuf(FILE FILEPtr1, ByteBuffer charPtr1, int int1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int sprintf(char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:132</i><br>
	 * @deprecated use the safer methods {@link #sprintf(java.nio.ByteBuffer, java.lang.String, java.lang.Object)} and {@link #sprintf(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int sprintf(Pointer charPtr1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int sprintf(char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:132</i>
	 */
	int sprintf(ByteBuffer charPtr1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int sscanf(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:134</i><br>
	 * @deprecated use the safer methods {@link #sscanf(java.lang.String, java.lang.String, java.lang.Object)} and {@link #sscanf(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int sscanf(Pointer charPtr1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int sscanf(const char*, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:134</i>
	 */
	int sscanf(String charPtr1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>FILE* tmpfile()</code><br>
	 * <i>native declaration : /usr/include/stdio.h:136</i>
	 */
	FILE tmpfile();
	/**
	 * Original signature : <code>char* tmpnam(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:138</i><br>
	 * @deprecated use the safer methods {@link #tmpnam(java.nio.ByteBuffer)} and {@link #tmpnam(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer tmpnam(Pointer charPtr1);
	/**
	 * Original signature : <code>char* tmpnam(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:138</i>
	 */
	Pointer tmpnam(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>int ungetc(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:140</i>
	 */
	int ungetc(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>int vfprintf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:142</i><br>
	 * @deprecated use the safer methods {@link #vfprintf(org.terraswarm.gdp.FILE, java.lang.String, java.lang.Object)} and {@link #vfprintf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vfprintf(FILE FILEPtr1, Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vfprintf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:142</i>
	 */
	int vfprintf(FILE FILEPtr1, String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vprintf(const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:144</i><br>
	 * @deprecated use the safer methods {@link #vprintf(java.lang.String, java.lang.Object)} and {@link #vprintf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vprintf(Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vprintf(const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:144</i>
	 */
	int vprintf(String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vsprintf(char*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:146</i><br>
	 * @deprecated use the safer methods {@link #vsprintf(java.nio.ByteBuffer, java.lang.String, java.lang.Object)} and {@link #vsprintf(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vsprintf(Pointer charPtr1, Pointer charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>int vsprintf(char*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:146</i>
	 */
	int vsprintf(ByteBuffer charPtr1, String charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>FILE* fdopen(int, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:150</i><br>
	 * @deprecated use the safer methods {@link #fdopen(int, java.lang.String)} and {@link #fdopen(int, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	FILE fdopen(int int1, Pointer charPtr1);
	/**
	 * Original signature : <code>FILE* fdopen(int, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:150</i>
	 */
	FILE fdopen(int int1, String charPtr1);
	/**
	 * Original signature : <code>int fileno(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:152</i>
	 */
	int fileno(FILE FILEPtr1);
	/**
	 * Original signature : <code>int pclose(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:156</i>
	 */
	int pclose(FILE FILEPtr1);
	/**
	 * Original signature : <code>FILE* popen(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:158</i><br>
	 * @deprecated use the safer methods {@link #popen(java.lang.String, java.lang.String)} and {@link #popen(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	FILE popen(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>FILE* popen(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:158</i>
	 */
	FILE popen(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int __srget(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:162</i>
	 */
	int __srget(FILE FILEPtr1);
	/**
	 * Original signature : <code>int __svfscanf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:164</i><br>
	 * @deprecated use the safer methods {@link #__svfscanf(org.terraswarm.gdp.FILE, java.lang.String, java.lang.Object)} and {@link #__svfscanf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int __svfscanf(FILE FILEPtr1, Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int __svfscanf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:164</i>
	 */
	int __svfscanf(FILE FILEPtr1, String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int __swbuf(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:166</i>
	 */
	int __swbuf(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>void flockfile(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:181</i>
	 */
	void flockfile(FILE FILEPtr1);
	/**
	 * Original signature : <code>int ftrylockfile(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:183</i>
	 */
	int ftrylockfile(FILE FILEPtr1);
	/**
	 * Original signature : <code>void funlockfile(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:185</i>
	 */
	void funlockfile(FILE FILEPtr1);
	/**
	 * Original signature : <code>int getc_unlocked(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:187</i>
	 */
	int getc_unlocked(FILE FILEPtr1);
	/**
	 * Original signature : <code>int getchar_unlocked()</code><br>
	 * <i>native declaration : /usr/include/stdio.h:189</i>
	 */
	int getchar_unlocked();
	/**
	 * Original signature : <code>int putc_unlocked(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:191</i>
	 */
	int putc_unlocked(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>int putchar_unlocked(int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:193</i>
	 */
	int putchar_unlocked(int int1);
	/**
	 * Removed in Issue 6<br>
	 * Original signature : <code>int getw(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:198</i>
	 */
	int getw(FILE FILEPtr1);
	/**
	 * Original signature : <code>int putw(int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:200</i>
	 */
	int putw(int int1, FILE FILEPtr1);
	/**
	 * Original signature : <code>char* tempnam(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:202</i><br>
	 * @deprecated use the safer methods {@link #tempnam(java.lang.String, java.lang.String)} and {@link #tempnam(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer tempnam(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>char* tempnam(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:202</i>
	 */
	Pointer tempnam(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int fseeko(FILE*, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:206</i>
	 */
	int fseeko(FILE FILEPtr1, int int1);
	/**
	 * Original signature : <code>off_t ftello(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:208</i>
	 */
	long ftello(FILE FILEPtr1);
	/**
	 * Original signature : <code>int snprintf(char*, size_t, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:212</i><br>
	 * @deprecated use the safer methods {@link #snprintf(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.lang.String, java.lang.Object)} and {@link #snprintf(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int snprintf(Pointer charPtr1, NativeSizeT size_t1, Pointer charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int snprintf(char*, size_t, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:212</i>
	 */
	int snprintf(ByteBuffer charPtr1, NativeSizeT size_t1, String charPtr2, Object... varArgs1);
	/**
	 * Original signature : <code>int vfscanf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:214</i><br>
	 * @deprecated use the safer methods {@link #vfscanf(org.terraswarm.gdp.FILE, java.lang.String, java.lang.Object)} and {@link #vfscanf(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vfscanf(FILE FILEPtr1, Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vfscanf(FILE*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:214</i>
	 */
	int vfscanf(FILE FILEPtr1, String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vscanf(const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:216</i><br>
	 * @deprecated use the safer methods {@link #vscanf(java.lang.String, java.lang.Object)} and {@link #vscanf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vscanf(Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vscanf(const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:216</i>
	 */
	int vscanf(String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vsnprintf(char*, size_t, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:218</i><br>
	 * @deprecated use the safer methods {@link #vsnprintf(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.lang.String, java.lang.Object)} and {@link #vsnprintf(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vsnprintf(Pointer charPtr1, NativeSizeT size_t1, Pointer charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>int vsnprintf(char*, size_t, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:218</i>
	 */
	int vsnprintf(ByteBuffer charPtr1, NativeSizeT size_t1, String charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>int vsscanf(const char*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:220</i><br>
	 * @deprecated use the safer methods {@link #vsscanf(java.lang.String, java.lang.String, java.lang.Object)} and {@link #vsscanf(com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vsscanf(Pointer charPtr1, Pointer charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>int vsscanf(const char*, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:220</i>
	 */
	int vsscanf(String charPtr1, String charPtr2, Object... va_list1);
	/**
	 * Original signature : <code>int dprintf(int, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:224</i><br>
	 * @deprecated use the safer methods {@link #dprintf(int, java.lang.String, java.lang.Object)} and {@link #dprintf(int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int dprintf(int int1, Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int dprintf(int, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:224</i>
	 */
	int dprintf(int int1, String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int vdprintf(int, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:226</i><br>
	 * @deprecated use the safer methods {@link #vdprintf(int, java.lang.String, java.lang.Object)} and {@link #vdprintf(int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vdprintf(int int1, Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vdprintf(int, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:226</i>
	 */
	int vdprintf(int int1, String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>ssize_t getdelim(char**, size_t*, int, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:228</i>
	 */
// 	NativeLong getdelim(PointerByReference charPtrPtr1, NativeSizeTByReference size_tPtr1, int int1, FILE FILEPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>ssize_t getline(char**, size_t*, FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:230</i>
	 */
// 	NativeLong getline(PointerByReference charPtrPtr1, NativeSizeTByReference size_tPtr1, FILE FILEPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int asprintf(char**, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:236</i><br>
	 * @deprecated use the safer methods {@link #asprintf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #asprintf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int asprintf(PointerByReference charPtrPtr1, Pointer charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>int asprintf(char**, const char*, null)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:236</i>
	 */
	int asprintf(PointerByReference charPtrPtr1, String charPtr1, Object... varArgs1);
	/**
	 * Original signature : <code>char* ctermid_r(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:238</i><br>
	 * @deprecated use the safer methods {@link #ctermid_r(java.nio.ByteBuffer)} and {@link #ctermid_r(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer ctermid_r(Pointer charPtr1);
	/**
	 * Original signature : <code>char* ctermid_r(char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:238</i>
	 */
	Pointer ctermid_r(ByteBuffer charPtr1);
	/**
	 * Original signature : <code>char* fgetln(FILE*, size_t*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:240</i>
	 */
// 	Pointer fgetln(FILE FILEPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>char* fmtcheck(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:242</i><br>
	 * @deprecated use the safer methods {@link #fmtcheck(java.lang.String, java.lang.String)} and {@link #fmtcheck(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	String fmtcheck(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>char* fmtcheck(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:242</i>
	 */
	String fmtcheck(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>int fpurge(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:244</i>
	 */
	int fpurge(FILE FILEPtr1);
	/**
	 * Original signature : <code>void setbuffer(FILE*, char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:246</i><br>
	 * @deprecated use the safer methods {@link #setbuffer(org.terraswarm.gdp.FILE, java.nio.ByteBuffer, int)} and {@link #setbuffer(org.terraswarm.gdp.FILE, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	void setbuffer(FILE FILEPtr1, Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>void setbuffer(FILE*, char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:246</i>
	 */
	void setbuffer(FILE FILEPtr1, ByteBuffer charPtr1, int int1);
	/**
	 * Original signature : <code>int setlinebuf(FILE*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:248</i>
	 */
	int setlinebuf(FILE FILEPtr1);
	/**
	 * Original signature : <code>int vasprintf(char**, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:250</i><br>
	 * @deprecated use the safer methods {@link #vasprintf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #vasprintf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int vasprintf(PointerByReference charPtrPtr1, Pointer charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>int vasprintf(char**, const char*, va_list)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:250</i>
	 */
	int vasprintf(PointerByReference charPtrPtr1, String charPtr1, Object... va_list1);
	/**
	 * Original signature : <code>FILE* zopen(const char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:252</i><br>
	 * @deprecated use the safer methods {@link #zopen(java.lang.String, java.lang.String, int)} and {@link #zopen(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	FILE zopen(Pointer charPtr1, Pointer charPtr2, int int1);
	/**
	 * Original signature : <code>FILE* zopen(const char*, const char*, int)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:252</i>
	 */
	FILE zopen(String charPtr1, String charPtr2, int int1);
	/**
	 * Stdio function-access interface.<br>
	 * Original signature : <code>FILE* funopen(const void*, funopen_arg1_callback*, funopen_arg2_callback*, funopen_arg3_callback*, funopen_arg4_callback*)</code><br>
	 * <i>native declaration : /usr/include/stdio.h:257</i>
	 */
	FILE funopen(Pointer voidPtr1, Gdp10Library.funopen_arg1_callback arg1, Gdp10Library.funopen_arg2_callback arg2, Gdp10Library.funopen_arg3_callback arg3, Gdp10Library.funopen_arg4_callback arg4);
	/**
	 * called if the assertion failed<br>
	 * Original signature : <code>void ep_assert_failure(const char*, const char*, const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:4</i><br>
	 * @deprecated use the safer methods {@link #ep_assert_failure(java.lang.String, java.lang.String, java.lang.String, int)} and {@link #ep_assert_failure(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	void ep_assert_failure(Pointer expr, Pointer type, Pointer file, int line);
	/**
	 * called if the assertion failed<br>
	 * Original signature : <code>void ep_assert_failure(const char*, const char*, const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:4</i>
	 */
	void ep_assert_failure(String expr, String type, String file, int line);
	/**
	 * called if ep_assert_failure was rude enough to return<br>
	 * Original signature : <code>void ep_assert_abort(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:9</i><br>
	 * @deprecated use the safer methods {@link #ep_assert_abort(java.lang.String)} and {@link #ep_assert_abort(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void ep_assert_abort(Pointer msg);
	/**
	 * called if ep_assert_failure was rude enough to return<br>
	 * Original signature : <code>void ep_assert_abort(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_assert.h:9</i>
	 */
	void ep_assert_abort(String msg);
	/**
	 * functions<br>
	 * Original signature : <code>EP_STAT ep_stat_from_errno(int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:4</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_from_errno(int uerrno);
	/**
	 * register stat code to string mappings<br>
	 * Original signature : <code>void ep_stat_reg_strings(ep_stat_to_string*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:14</i>
	 */
	void ep_stat_reg_strings(ep_stat_to_string ep_stat_to_stringPtr1);
	/**
	 * return string representation of status<br>
	 * Original signature : <code>char* ep_stat_tostr(EP_STAT, char*, size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:19</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	Pointer ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue estat, Pointer buf, NativeSizeT bsize);
	/**
	 * return string representation of status<br>
	 * Original signature : <code>char* ep_stat_tostr(EP_STAT, char*, size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:19</i>
	 */
	Pointer ep_stat_tostr(org.terraswarm.gdp.EP_STAT.ByValue estat, ByteBuffer buf, NativeSizeT bsize);
	/**
	 * return string representation of severity (in natural language)<br>
	 * Original signature : <code>char* ep_stat_sev_tostr(int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:24</i>
	 */
	String ep_stat_sev_tostr(int sev);
	/**
	 * register/deregister a status handler<br>
	 * Original signature : <code>EP_STAT_HANDLE* ep_stat_register(EP_STAT, EP_STAT, EP_STAT_HANDLER_FUNCP)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:29</i>
	 */
	PointerByReference ep_stat_register(org.terraswarm.gdp.EP_STAT.ByValue estat, org.terraswarm.gdp.EP_STAT.ByValue mask, Gdp10Library.EP_STAT_HANDLER_FUNCP f);
	/**
	 * Original signature : <code>EP_STAT ep_stat_unregister(EP_STAT_HANDLE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:31</i><br>
	 * @deprecated use the safer method {@link #ep_stat_unregister(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_unregister(Pointer h);
	/**
	 * Original signature : <code>EP_STAT ep_stat_unregister(EP_STAT_HANDLE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:31</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_unregister(PointerByReference h);
	/**
	 * post a status<br>
	 * Original signature : <code>EP_STAT ep_stat_post(EP_STAT, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:36</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, java.lang.Object)} and {@link #ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue c, Pointer defmsg, Object... varArgs1);
	/**
	 * post a status<br>
	 * Original signature : <code>EP_STAT ep_stat_post(EP_STAT, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:36</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_post(org.terraswarm.gdp.EP_STAT.ByValue c, String defmsg, Object... varArgs1);
	/**
	 * Original signature : <code>EP_STAT ep_stat_vpost(EP_STAT, const char*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:38</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, java.lang.Object)} and {@link #ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue c, Pointer defmsg, Object... av);
	/**
	 * Original signature : <code>EP_STAT ep_stat_vpost(EP_STAT, const char*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:38</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_stat_vpost(org.terraswarm.gdp.EP_STAT.ByValue c, String defmsg, Object... av);
	/**
	 * print a status<br>
	 * Original signature : <code>void ep_stat_print(EP_STAT, const char*, FILE*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:43</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, org.terraswarm.gdp.FILE, java.lang.Object)} and {@link #ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, org.terraswarm.gdp.FILE, java.lang.Object)} instead
	 */
// 	@Deprecated 
	void ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue c, Pointer defmsg, FILE fp, Object... varArgs1);
	/**
	 * print a status<br>
	 * Original signature : <code>void ep_stat_print(EP_STAT, const char*, FILE*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:43</i>
	 */
	void ep_stat_print(org.terraswarm.gdp.EP_STAT.ByValue c, String defmsg, FILE fp, Object... varArgs1);
	/**
	 * Original signature : <code>void ep_stat_vprint(EP_STAT, const char*, FILE*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:45</i><br>
	 * @deprecated use the safer methods {@link #ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue, java.lang.String, org.terraswarm.gdp.FILE, java.lang.Object)} and {@link #ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue, com.sun.jna.Pointer, org.terraswarm.gdp.FILE, java.lang.Object)} instead
	 */
// 	@Deprecated 
	void ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue c, Pointer defmsg, FILE fp, Object... av);
	/**
	 * Original signature : <code>void ep_stat_vprint(EP_STAT, const char*, FILE*, va_list)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:45</i>
	 */
	void ep_stat_vprint(org.terraswarm.gdp.EP_STAT.ByValue c, String defmsg, FILE fp, Object... av);
	/**
	 * print and abort (never returns)<br>
	 * Original signature : <code>void ep_stat_abort(EP_STAT)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_stat.h:50</i>
	 */
	void ep_stat_abort(org.terraswarm.gdp.EP_STAT.ByValue c);
	/**
	 * *  Initialization<br>
	 * Original signature : <code>EP_STAT ep_lib_init(uint32_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:4</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_lib_init(int flags);
	/**
	 * the versions from ep_mem.h give you a bit more<br>
	 * Original signature : <code>void* ep_mem_malloc(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:9</i>
	 */
	Pointer ep_mem_malloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>void* ep_mem_zalloc(size_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:11</i>
	 */
	Pointer ep_mem_zalloc(NativeSizeT size_t1);
	/**
	 * Original signature : <code>char* ep_mem_strdup(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:13</i><br>
	 * @deprecated use the safer methods {@link #ep_mem_strdup(java.lang.String)} and {@link #ep_mem_strdup(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer ep_mem_strdup(Pointer charPtr1);
	/**
	 * Original signature : <code>char* ep_mem_strdup(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:13</i>
	 */
	Pointer ep_mem_strdup(String charPtr1);
	/**
	 * Original signature : <code>void ep_mem_free(void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep.h:15</i>
	 */
	void ep_mem_free(Pointer voidPtr1);
	/**
	 * ideally this would check valid pointers for this architecture<br>
	 * get integer param value<br>
	 * Original signature : <code>int ep_adm_getintparam(const char*, int)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:22</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getintparam(java.lang.String, int)} and {@link #ep_adm_getintparam(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int ep_adm_getintparam(Pointer name, int def);
	/**
	 * ideally this would check valid pointers for this architecture<br>
	 * get integer param value<br>
	 * Original signature : <code>int ep_adm_getintparam(const char*, int)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:22</i>
	 */
	int ep_adm_getintparam(String name, int def);
	/**
	 * get long param value<br>
	 * Original signature : <code>long ep_adm_getlongparam(const char*, long)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:28</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getlongparam(java.lang.String, com.sun.jna.NativeLong)} and {@link #ep_adm_getlongparam(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
// 	@Deprecated 
	NativeLong ep_adm_getlongparam(Pointer name, NativeLong def);
	/**
	 * get long param value<br>
	 * Original signature : <code>long ep_adm_getlongparam(const char*, long)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:28</i>
	 */
	NativeLong ep_adm_getlongparam(String name, NativeLong def);
	/**
	 * get boolean param value<br>
	 * Original signature : <code>bool ep_adm_getboolparam(const char*, bool)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:34</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getboolparam(java.lang.String, byte)} and {@link #ep_adm_getboolparam(com.sun.jna.Pointer, byte)} instead
	 */
// 	@Deprecated 
	byte ep_adm_getboolparam(Pointer name, byte def);
	/**
	 * get boolean param value<br>
	 * Original signature : <code>bool ep_adm_getboolparam(const char*, bool)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:34</i>
	 */
	byte ep_adm_getboolparam(String name, byte def);
	/**
	 * get string param value<br>
	 * Original signature : <code>char* ep_adm_getstrparam(const char*, const char*)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:40</i><br>
	 * @deprecated use the safer methods {@link #ep_adm_getstrparam(java.lang.String, java.lang.String)} and {@link #ep_adm_getstrparam(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer ep_adm_getstrparam(Pointer name, Pointer def);
	/**
	 * get string param value<br>
	 * Original signature : <code>char* ep_adm_getstrparam(const char*, const char*)</code><br>
	 * @param name name of param<br>
	 * <i>native declaration : src/gdp/ep/ep.h:40</i>
	 */
	Pointer ep_adm_getstrparam(String name, String def);
	/**
	 * open a static memory buffer<br>
	 * Original signature : <code>FILE* ep_fopensmem(void*, size_t, const char*)</code><br>
	 * @param buf buffer<br>
	 * @param bufsz size of buffer<br>
	 * <i>native declaration : src/gdp/ep/ep.h:47</i><br>
	 * @deprecated use the safer methods {@link #ep_fopensmem(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.lang.String)} and {@link #ep_fopensmem(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	FILE ep_fopensmem(Pointer buf, NativeSizeT bufsz, Pointer mode);
	/**
	 * open a static memory buffer<br>
	 * Original signature : <code>FILE* ep_fopensmem(void*, size_t, const char*)</code><br>
	 * @param buf buffer<br>
	 * @param bufsz size of buffer<br>
	 * <i>native declaration : src/gdp/ep/ep.h:47</i>
	 */
	FILE ep_fopensmem(Pointer buf, NativeSizeT bufsz, String mode);
	/**
	 * unlocked version of fread<br>
	 * Original signature : <code>size_t ep_fread_unlocked(void*, size_t, size_t, FILE*)</code><br>
	 * @param buf buffer area<br>
	 * @param sz size of one item<br>
	 * @param n number of items<br>
	 * <i>native declaration : src/gdp/ep/ep.h:55</i>
	 */
	NativeSizeT ep_fread_unlocked(Pointer buf, NativeSizeT sz, NativeSizeT n, FILE fp);
	/**
	 * unlocked version of fwrite<br>
	 * Original signature : <code>size_t ep_fwrite_unlocked(void*, size_t, size_t, FILE*)</code><br>
	 * @param buf buffer area<br>
	 * @param sz size of one item<br>
	 * @param n number of items<br>
	 * <i>native declaration : src/gdp/ep/ep.h:63</i>
	 */
	NativeSizeT ep_fwrite_unlocked(Pointer buf, NativeSizeT sz, NativeSizeT n, FILE fp);
	/**
	 * Original signature : <code>char* asctime(tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:20</i>
	 */
// 	Pointer asctime(tm tmPtr1);
	/**
	 * Original signature : <code>clock_t clock()</code><br>
	 * <i>native declaration : /usr/include/time.h:22</i>
	 */
	NativeLong clock();
	/**
	 * Original signature : <code>char* ctime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:24</i><br>
	 * @deprecated use the safer methods {@link #ctime([])} and {@link #ctime()} instead
	 */
// 	@Deprecated 
// 	Pointer ctime( time_tPtr1);
	/**
	 * Original signature : <code>char* ctime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:24</i>
	 */
// 	Pointer ctime( time_tPtr1[]);
	/**
	 * Original signature : <code>double difftime(time_t, time_t)</code><br>
	 * <i>native declaration : /usr/include/time.h:26</i>
	 */
// 	double difftime( time_t1,  time_t2);
	/**
	 * Original signature : <code>tm* getdate(const char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:28</i><br>
	 * @deprecated use the safer methods {@link #getdate(java.lang.String)} and {@link #getdate(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	tm getdate(Pointer charPtr1);
	/**
	 * Original signature : <code>tm* getdate(const char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:28</i>
	 */
	tm getdate(String charPtr1);
	/**
	 * Original signature : <code>tm* gmtime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:30</i><br>
	 * @deprecated use the safer methods {@link #gmtime([])} and {@link #gmtime()} instead
	 */
// 	@Deprecated 
// 	tm gmtime( time_tPtr1);
	/**
	 * Original signature : <code>tm* gmtime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:30</i>
	 */
// 	tm gmtime( time_tPtr1[]);
	/**
	 * Original signature : <code>tm* localtime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:32</i><br>
	 * @deprecated use the safer methods {@link #localtime([])} and {@link #localtime()} instead
	 */
// 	@Deprecated 
// 	tm localtime( time_tPtr1);
	/**
	 * Original signature : <code>tm* localtime(const time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:32</i>
	 */
// 	tm localtime( time_tPtr1[]);
	/**
	 * Original signature : <code>time_t mktime(tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:34</i>
	 */
// 	 mktime(tm tmPtr1);
	/**
	 * Original signature : <code>size_t strftime(char*, size_t, const char*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:36</i><br>
	 * @deprecated use the safer methods {@link #strftime(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, java.lang.String, org.terraswarm.gdp.tm)} and {@link #strftime(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, com.sun.jna.Pointer, org.terraswarm.gdp.tm)} instead
	 */
// 	@Deprecated 
// 	NativeSizeT strftime(Pointer charPtr1, NativeSizeT size_t1, Pointer charPtr2, tm tmPtr1);
	/**
	 * Original signature : <code>size_t strftime(char*, size_t, const char*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:36</i>
	 */
// 	NativeSizeT strftime(ByteBuffer charPtr1, NativeSizeT size_t1, String charPtr2, tm tmPtr1);
	/**
	 * Original signature : <code>char* strptime(const char*, const char*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:38</i><br>
	 * @deprecated use the safer methods {@link #strptime(java.lang.String, java.lang.String, org.terraswarm.gdp.tm)} and {@link #strptime(com.sun.jna.Pointer, com.sun.jna.Pointer, org.terraswarm.gdp.tm)} instead
	 */
// 	@Deprecated 
// 	Pointer strptime(Pointer charPtr1, Pointer charPtr2, tm tmPtr1);
	/**
	 * Original signature : <code>char* strptime(const char*, const char*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:38</i>
	 */
// 	Pointer strptime(String charPtr1, String charPtr2, tm tmPtr1);
	/**
	 * Original signature : <code>time_t time(time_t*)</code><br>
	 * <i>native declaration : /usr/include/time.h:40</i>
	 */
// 	 time( time_tPtr1);
	/**
	 * Original signature : <code>void tzset()</code><br>
	 * <i>native declaration : /usr/include/time.h:42</i>
	 */
	void tzset();
	/**
	 * [TSF] Thread safe functions<br>
	 * Original signature : <code>char* asctime_r(tm*, char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:47</i><br>
	 * @deprecated use the safer methods {@link #asctime_r(org.terraswarm.gdp.tm, java.nio.ByteBuffer)} and {@link #asctime_r(org.terraswarm.gdp.tm, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
// 	Pointer asctime_r(tm tmPtr1, Pointer charPtr1);
	/**
	 * [TSF] Thread safe functions<br>
	 * Original signature : <code>char* asctime_r(tm*, char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:47</i>
	 */
// 	Pointer asctime_r(tm tmPtr1, ByteBuffer charPtr1);
	/**
	 * Original signature : <code>char* ctime_r(const time_t*, char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:49</i><br>
	 * @deprecated use the safer methods {@link #ctime_r([], java.nio.ByteBuffer)} and {@link #ctime_r(, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
// 	Pointer ctime_r( time_tPtr1, Pointer charPtr1);
	/**
	 * Original signature : <code>char* ctime_r(const time_t*, char*)</code><br>
	 * <i>native declaration : /usr/include/time.h:49</i>
	 */
// 	Pointer ctime_r( time_tPtr1[], ByteBuffer charPtr1);
	/**
	 * Original signature : <code>tm* gmtime_r(const time_t*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:51</i><br>
	 * @deprecated use the safer methods {@link #gmtime_r([], org.terraswarm.gdp.tm)} and {@link #gmtime_r(, org.terraswarm.gdp.tm)} instead
	 */
// 	@Deprecated 
// // 	tm gmtime_r( time_tPtr1, tm tmPtr1);
	/**
	 * Original signature : <code>tm* gmtime_r(const time_t*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:51</i>
	 */
// // 	tm gmtime_r( time_tPtr1[], tm tmPtr1);
	/**
	 * Original signature : <code>tm* localtime_r(const time_t*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:53</i><br>
	 * @deprecated use the safer methods {@link #localtime_r([], org.terraswarm.gdp.tm)} and {@link #localtime_r(, org.terraswarm.gdp.tm)} instead
	 */
// 	@Deprecated 
// // 	tm localtime_r( time_tPtr1, tm tmPtr1);
	/**
	 * Original signature : <code>tm* localtime_r(const time_t*, tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:53</i>
	 */
// // 	tm localtime_r( time_tPtr1[], tm tmPtr1);
	/**
	 * Original signature : <code>time_t posix2time(time_t)</code><br>
	 * <i>native declaration : /usr/include/time.h:55</i>
	 */
// 	 posix2time( time_t1);
	/**
	 * Original signature : <code>void tzsetwall()</code><br>
	 * <i>native declaration : /usr/include/time.h:57</i>
	 */
	void tzsetwall();
	/**
	 * Original signature : <code>time_t time2posix(time_t)</code><br>
	 * <i>native declaration : /usr/include/time.h:59</i>
	 */
// 	 time2posix( time_t1);
	/**
	 * Original signature : <code>time_t timelocal(const tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:61</i>
	 */
// 	 timelocal(tm tmPtr1);
	/**
	 * Original signature : <code>time_t timegm(const tm*)</code><br>
	 * <i>native declaration : /usr/include/time.h:63</i>
	 */
// 	 timegm(tm tmPtr1);
	/**
	 * Original signature : <code>int nanosleep(timespec*, timespec*)</code><br>
	 * <i>native declaration : /usr/include/time.h:65</i>
	 */
	int nanosleep(Gdp10Library.timespec timespecPtr1, Gdp10Library.timespec timespecPtr2);
	/**
	 * return current time<br>
	 * Original signature : <code>EP_STAT ep_time_now(EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:12</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_time_now(EP_TIME_SPEC tv);
	/**
	 * return putative clock accuracy<br>
	 * Original signature : <code>float ep_time_accuracy()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:17</i>
	 */
	float ep_time_accuracy();
	/**
	 * set the clock accuracy (may not be available)<br>
	 * Original signature : <code>void ep_time_setaccuracy(float)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:22</i>
	 */
	void ep_time_setaccuracy(float acc);
	/**
	 * format a time string into a buffer<br>
	 * Original signature : <code>void ep_time_format(const EP_TIME_SPEC*, char*, size_t, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:27</i><br>
	 * @deprecated use the safer methods {@link #ep_time_format(org.terraswarm.gdp.EP_TIME_SPEC, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, byte)} and {@link #ep_time_format(org.terraswarm.gdp.EP_TIME_SPEC, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, byte)} instead
	 */
// 	@Deprecated 
	void ep_time_format(EP_TIME_SPEC tv, Pointer buf, NativeSizeT bz, byte human);
	/**
	 * format a time string into a buffer<br>
	 * Original signature : <code>void ep_time_format(const EP_TIME_SPEC*, char*, size_t, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:27</i>
	 */
	void ep_time_format(EP_TIME_SPEC tv, ByteBuffer buf, NativeSizeT bz, byte human);
	/**
	 * format a time string to a file<br>
	 * Original signature : <code>void ep_time_print(const EP_TIME_SPEC*, FILE*, bool)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:32</i>
	 */
	void ep_time_print(EP_TIME_SPEC tv, FILE fp, byte human);
	/**
	 * parse a time string<br>
	 * Original signature : <code>EP_STAT ep_time_parse(const char*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:37</i><br>
	 * @deprecated use the safer methods {@link #ep_time_parse(java.lang.String, org.terraswarm.gdp.EP_TIME_SPEC)} and {@link #ep_time_parse(com.sun.jna.Pointer, org.terraswarm.gdp.EP_TIME_SPEC)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue ep_time_parse(Pointer timestr, EP_TIME_SPEC tv);
	/**
	 * parse a time string<br>
	 * Original signature : <code>EP_STAT ep_time_parse(const char*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:37</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_time_parse(String timestr, EP_TIME_SPEC tv);
	/**
	 * sleep for the indicated number of nanoseconds<br>
	 * Original signature : <code>EP_STAT ep_time_nanosleep(int64_t)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_time.h:42</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue ep_time_nanosleep(long int64_t1);
	/**
	 * Original signature : <code>intmax_t imaxabs(intmax_t)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:2</i>
	 */
	long imaxabs(long j);
	/**
	 * Original signature : <code>imaxdiv_t imaxdiv(intmax_t, intmax_t)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:8</i>
	 */
	org.terraswarm.gdp.imaxdiv_t.ByValue imaxdiv(long numer, long denom);
	/**
	 * Original signature : <code>intmax_t strtoimax(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:10</i><br>
	 * @deprecated use the safer methods {@link #strtoimax(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoimax(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtoimax(Pointer nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>intmax_t strtoimax(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:10</i>
	 */
	long strtoimax(String nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>uintmax_t strtoumax(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:12</i><br>
	 * @deprecated use the safer methods {@link #strtoumax(java.lang.String, com.sun.jna.ptr.PointerByReference, int)} and {@link #strtoumax(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	long strtoumax(Pointer nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>uintmax_t strtoumax(const char*, char**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:12</i>
	 */
	long strtoumax(String nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>intmax_t wcstoimax(const wchar_t*, wchar_t**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:14</i><br>
// 	 * @deprecated use the safer methods {@link #wcstoimax(com.sun.jna.WString, com.sun.jna.ptr.PointerByReference, int)} and {@link #wcstoimax(com.ochafik.lang.jnaerator.runtime.CharByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
// 	long wcstoimax(CharByReference nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>intmax_t wcstoimax(const wchar_t*, wchar_t**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:14</i>
	 */
	long wcstoimax(WString nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>uintmax_t wcstoumax(const wchar_t*, wchar_t**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:16</i><br>
// 	 * @deprecated use the safer methods {@link #wcstoumax(com.sun.jna.WString, com.sun.jna.ptr.PointerByReference, int)} and {@link #wcstoumax(com.ochafik.lang.jnaerator.runtime.CharByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
// 	long wcstoumax(CharByReference nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>uintmax_t wcstoumax(const wchar_t*, wchar_t**, int)</code><br>
	 * <i>native declaration : /usr/include/inttypes.h:16</i>
	 */
	long wcstoumax(WString nptr, PointerByReference endptr, int base);
	/**
	 * Original signature : <code>void endhostent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:51</i>
	 */
	void endhostent();
	/**
	 * Original signature : <code>void endnetent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:53</i>
	 */
	void endnetent();
	/**
	 * Original signature : <code>void endprotoent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:55</i>
	 */
	void endprotoent();
	/**
	 * Original signature : <code>void endservent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:57</i>
	 */
	void endservent();
	/**
	 * Original signature : <code>void freeaddrinfo(addrinfo*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:59</i>
	 */
	void freeaddrinfo(addrinfo addrinfoPtr1);
	/**
	 * Original signature : <code>char* gai_strerror(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:61</i>
	 */
	String gai_strerror(int int1);
	/**
	 * Original signature : <code>int getaddrinfo(const char*, const char*, addrinfo*, addrinfo**)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:63</i><br>
	 * @deprecated use the safer methods {@link #getaddrinfo(java.lang.String, java.lang.String, org.terraswarm.gdp.addrinfo, org.terraswarm.gdp.addrinfo.ByReference[])} and {@link #getaddrinfo(com.sun.jna.Pointer, com.sun.jna.Pointer, org.terraswarm.gdp.addrinfo, org.terraswarm.gdp.addrinfo.ByReference[])} instead
	 */
// 	@Deprecated 
	int getaddrinfo(Pointer charPtr1, Pointer charPtr2, addrinfo addrinfoPtr1, PointerByReference addrinfoPtrPtr1);
	/**
	 * Original signature : <code>int getaddrinfo(const char*, const char*, addrinfo*, addrinfo**)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:63</i>
	 */
	int getaddrinfo(String charPtr1, String charPtr2, addrinfo addrinfoPtr1, addrinfo.ByReference addrinfoPtrPtr1[]);
	/**
	 * Original signature : <code>int getaddrinfo(const char*, const char*, addrinfo*, addrinfo**)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:63</i>
	 */
	int getaddrinfo(Pointer charPtr1, Pointer charPtr2, addrinfo addrinfoPtr1, addrinfo.ByReference addrinfoPtrPtr1[]);
	/**
	 * Original signature : <code>hostent* gethostbyaddr(const void*, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:65</i>
	 */
	hostent gethostbyaddr(Pointer voidPtr1, int int1);
	/**
	 * Original signature : <code>hostent* gethostbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:67</i><br>
	 * @deprecated use the safer methods {@link #gethostbyname(java.lang.String)} and {@link #gethostbyname(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	hostent gethostbyname(Pointer charPtr1);
	/**
	 * Original signature : <code>hostent* gethostbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:67</i>
	 */
	hostent gethostbyname(String charPtr1);
	/**
	 * Original signature : <code>hostent* gethostent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:69</i>
	 */
	hostent gethostent();
	/**
	 * Original signature : <code>int getnameinfo(sockaddr*, char*, char*, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:71</i><br>
	 * @deprecated use the safer methods {@link #getnameinfo(org.terraswarm.gdp.Gdp10Library.sockaddr, java.nio.ByteBuffer, java.nio.ByteBuffer, int)} and {@link #getnameinfo(org.terraswarm.gdp.Gdp10Library.sockaddr, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	int getnameinfo(Gdp10Library.sockaddr sockaddrPtr1, Pointer charPtr1, Pointer charPtr2, int int1);
	/**
	 * Original signature : <code>int getnameinfo(sockaddr*, char*, char*, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:71</i>
	 */
	int getnameinfo(Gdp10Library.sockaddr sockaddrPtr1, ByteBuffer charPtr1, ByteBuffer charPtr2, int int1);
	/**
	 * Original signature : <code>netent* getnetbyaddr(uint32_t, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:73</i>
	 */
	netent getnetbyaddr(int uint32_t1, int int1);
	/**
	 * Original signature : <code>netent* getnetbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:75</i><br>
	 * @deprecated use the safer methods {@link #getnetbyname(java.lang.String)} and {@link #getnetbyname(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	netent getnetbyname(Pointer charPtr1);
	/**
	 * Original signature : <code>netent* getnetbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:75</i>
	 */
	netent getnetbyname(String charPtr1);
	/**
	 * Original signature : <code>netent* getnetent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:77</i>
	 */
	netent getnetent();
	/**
	 * Original signature : <code>protoent* getprotobyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:79</i><br>
	 * @deprecated use the safer methods {@link #getprotobyname(java.lang.String)} and {@link #getprotobyname(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	protoent getprotobyname(Pointer charPtr1);
	/**
	 * Original signature : <code>protoent* getprotobyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:79</i>
	 */
	protoent getprotobyname(String charPtr1);
	/**
	 * Original signature : <code>protoent* getprotobynumber(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:81</i>
	 */
	protoent getprotobynumber(int int1);
	/**
	 * Original signature : <code>protoent* getprotoent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:83</i>
	 */
	protoent getprotoent();
	/**
	 * Original signature : <code>servent* getservbyname(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:85</i><br>
	 * @deprecated use the safer methods {@link #getservbyname(java.lang.String, java.lang.String)} and {@link #getservbyname(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	servent getservbyname(Pointer charPtr1, Pointer charPtr2);
	/**
	 * Original signature : <code>servent* getservbyname(const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:85</i>
	 */
	servent getservbyname(String charPtr1, String charPtr2);
	/**
	 * Original signature : <code>servent* getservbyport(int, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:87</i><br>
	 * @deprecated use the safer methods {@link #getservbyport(int, java.lang.String)} and {@link #getservbyport(int, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	servent getservbyport(int int1, Pointer charPtr1);
	/**
	 * Original signature : <code>servent* getservbyport(int, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:87</i>
	 */
	servent getservbyport(int int1, String charPtr1);
	/**
	 * Original signature : <code>servent* getservent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:89</i>
	 */
	servent getservent();
	/**
	 * Original signature : <code>void sethostent(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:91</i>
	 */
	void sethostent(int int1);
	/**
	 * void		sethostfile(const char *);<br>
	 * Original signature : <code>void setnetent(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:96</i>
	 */
	void setnetent(int int1);
	/**
	 * Original signature : <code>void setprotoent(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:98</i>
	 */
	void setprotoent(int int1);
	/**
	 * Original signature : <code>void setservent(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:100</i>
	 */
	void setservent(int int1);
	/**
	 * Original signature : <code>void freehostent(hostent*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:102</i>
	 */
	void freehostent(hostent hostentPtr1);
	/**
	 * Original signature : <code>hostent* gethostbyname2(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:104</i><br>
	 * @deprecated use the safer methods {@link #gethostbyname2(java.lang.String, int)} and {@link #gethostbyname2(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	hostent gethostbyname2(Pointer charPtr1, int int1);
	/**
	 * Original signature : <code>hostent* gethostbyname2(const char*, int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:104</i>
	 */
	hostent gethostbyname2(String charPtr1, int int1);
	/**
	 * Original signature : <code>hostent* getipnodebyaddr(const void*, size_t, int, int*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:106</i><br>
	 * @deprecated use the safer methods {@link #getipnodebyaddr(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, int, java.nio.IntBuffer)} and {@link #getipnodebyaddr(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT, int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	hostent getipnodebyaddr(Pointer voidPtr1, NativeSizeT size_t1, int int1, IntByReference intPtr1);
	/**
	 * Original signature : <code>hostent* getipnodebyaddr(const void*, size_t, int, int*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:106</i>
	 */
	hostent getipnodebyaddr(Pointer voidPtr1, NativeSizeT size_t1, int int1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>hostent* getipnodebyname(const char*, int, int, int*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:108</i><br>
	 * @deprecated use the safer methods {@link #getipnodebyname(java.lang.String, int, int, java.nio.IntBuffer)} and {@link #getipnodebyname(com.sun.jna.Pointer, int, int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	hostent getipnodebyname(Pointer charPtr1, int int1, int int2, IntByReference intPtr1);
	/**
	 * Original signature : <code>hostent* getipnodebyname(const char*, int, int, int*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:108</i>
	 */
	hostent getipnodebyname(String charPtr1, int int1, int int2, IntBuffer intPtr1);
	/**
	 * Original signature : <code>rpcent* getrpcbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:110</i><br>
	 * @deprecated use the safer methods {@link #getrpcbyname(java.lang.String)} and {@link #getrpcbyname(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	rpcent getrpcbyname(Pointer name);
	/**
	 * Original signature : <code>rpcent* getrpcbyname(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:110</i>
	 */
	rpcent getrpcbyname(String name);
	/**
	 * Original signature : <code>rpcent* getrpcbynumber(long)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:112</i>
	 */
	rpcent getrpcbynumber(NativeLong number);
	/**
	 * Original signature : <code>rpcent* getrpcent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:114</i>
	 */
	rpcent getrpcent();
	/**
	 * Original signature : <code>void setrpcent(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:116</i>
	 */
	void setrpcent(int stayopen);
	/**
	 * Original signature : <code>void endrpcent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:118</i>
	 */
	void endrpcent();
	/**
	 * Original signature : <code>void herror(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:120</i><br>
	 * @deprecated use the safer methods {@link #herror(java.lang.String)} and {@link #herror(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void herror(Pointer charPtr1);
	/**
	 * Original signature : <code>void herror(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:120</i>
	 */
	void herror(String charPtr1);
	/**
	 * Original signature : <code>char* hstrerror(int)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:122</i>
	 */
	String hstrerror(int int1);
	/**
	 * Original signature : <code>int innetgr(const char*, const char*, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:124</i><br>
	 * @deprecated use the safer methods {@link #innetgr(java.lang.String, java.lang.String, java.lang.String, java.lang.String)} and {@link #innetgr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int innetgr(Pointer charPtr1, Pointer charPtr2, Pointer charPtr3, Pointer charPtr4);
	/**
	 * Original signature : <code>int innetgr(const char*, const char*, const char*, const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:124</i>
	 */
	int innetgr(String charPtr1, String charPtr2, String charPtr3, String charPtr4);
	/**
	 * Original signature : <code>int getnetgrent(char**, char**, char**)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:126</i>
	 */
	int getnetgrent(PointerByReference charPtrPtr1, PointerByReference charPtrPtr2, PointerByReference charPtrPtr3);
	/**
	 * Original signature : <code>void endnetgrent()</code><br>
	 * <i>native declaration : /usr/include/netdb.h:128</i>
	 */
	void endnetgrent();
	/**
	 * Original signature : <code>void setnetgrent(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:130</i><br>
	 * @deprecated use the safer methods {@link #setnetgrent(java.lang.String)} and {@link #setnetgrent(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void setnetgrent(Pointer charPtr1);
	/**
	 * Original signature : <code>void setnetgrent(const char*)</code><br>
	 * <i>native declaration : /usr/include/netdb.h:130</i>
	 */
	void setnetgrent(String charPtr1);
	/**
	 * Original signature : <code>int sched_yield()</code><br>
	 * <i>native declaration : /usr/include/sched.h:7</i>
	 */
	int sched_yield();
	/**
	 * Original signature : <code>int sched_get_priority_min(int)</code><br>
	 * <i>native declaration : /usr/include/sched.h:9</i>
	 */
	int sched_get_priority_min(int int1);
	/**
	 * Original signature : <code>int sched_get_priority_max(int)</code><br>
	 * <i>native declaration : /usr/include/sched.h:11</i>
	 */
	int sched_get_priority_max(int int1);
	/**
	 * Prototypes for all PTHREAD interfaces<br>
	 * Original signature : <code>int pthread_atfork(pthread_atfork_arg1_callback*, pthread_atfork_arg2_callback*, pthread_atfork_arg3_callback*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:5</i>
	 */
	int pthread_atfork(Gdp10Library.pthread_atfork_arg1_callback arg1, Gdp10Library.pthread_atfork_arg2_callback arg2, Gdp10Library.pthread_atfork_arg3_callback arg3);
	/**
	 * Original signature : <code>int pthread_attr_destroy(pthread_attr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:7</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_destroy(Pointer pthread_attr_tPtr1);
	/**
	 * Original signature : <code>int pthread_attr_destroy(pthread_attr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:7</i>
	 */
	int pthread_attr_destroy(PointerByReference pthread_attr_tPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getdetachstate(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:9</i><br>
	 * @deprecated use the safer methods {@link #pthread_attr_getdetachstate(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_attr_getdetachstate(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getdetachstate(Pointer pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getdetachstate(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:9</i>
	 */
	int pthread_attr_getdetachstate(PointerByReference pthread_attr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getdetachstate(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:9</i>
	 */
	int pthread_attr_getdetachstate(PointerByReference pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getguardsize(const pthread_attr_t*, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:11</i><br>
// 	 * @deprecated use the safer method {@link #pthread_attr_getguardsize(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference)} instead // Commented out by makefile because NativeSizeTByReference is not in jna.
	 */
// 	@Deprecated 
// 	int pthread_attr_getguardsize(Pointer pthread_attr_tPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_getguardsize(const pthread_attr_t*, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:11</i>
	 */
// 	int pthread_attr_getguardsize(PointerByReference pthread_attr_tPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_getinheritsched(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:13</i><br>
	 * @deprecated use the safer methods {@link #pthread_attr_getinheritsched(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_attr_getinheritsched(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getinheritsched(Pointer pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getinheritsched(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:13</i>
	 */
	int pthread_attr_getinheritsched(PointerByReference pthread_attr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getinheritsched(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:13</i>
	 */
	int pthread_attr_getinheritsched(PointerByReference pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getschedparam(const pthread_attr_t*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:15</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_getschedparam(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.sched_param)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getschedparam(Pointer pthread_attr_tPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getschedparam(const pthread_attr_t*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:15</i>
	 */
	int pthread_attr_getschedparam(PointerByReference pthread_attr_tPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getschedpolicy(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:17</i><br>
	 * @deprecated use the safer methods {@link #pthread_attr_getschedpolicy(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_attr_getschedpolicy(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getschedpolicy(Pointer pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getschedpolicy(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:17</i>
	 */
	int pthread_attr_getschedpolicy(PointerByReference pthread_attr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getschedpolicy(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:17</i>
	 */
	int pthread_attr_getschedpolicy(PointerByReference pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getscope(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:19</i><br>
	 * @deprecated use the safer methods {@link #pthread_attr_getscope(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_attr_getscope(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getscope(Pointer pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getscope(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:19</i>
	 */
	int pthread_attr_getscope(PointerByReference pthread_attr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getscope(const pthread_attr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:19</i>
	 */
	int pthread_attr_getscope(PointerByReference pthread_attr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getstack(const pthread_attr_t*, void**, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:21</i><br>
// 	 * @deprecated use the safer method {@link #pthread_attr_getstack(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference)} instead // Commented out by makefile because NativeSizeTByReference is not in jna.
	 */
// 	@Deprecated 
// 	int pthread_attr_getstack(Pointer pthread_attr_tPtr1, PointerByReference voidPtrPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_getstack(const pthread_attr_t*, void**, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:21</i>
	 */
// 	int pthread_attr_getstack(PointerByReference pthread_attr_tPtr1, PointerByReference voidPtrPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_getstackaddr(const pthread_attr_t*, void**)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:23</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_getstackaddr(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_getstackaddr(Pointer pthread_attr_tPtr1, PointerByReference voidPtrPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getstackaddr(const pthread_attr_t*, void**)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:23</i>
	 */
	int pthread_attr_getstackaddr(PointerByReference pthread_attr_tPtr1, PointerByReference voidPtrPtr1);
	/**
	 * Original signature : <code>int pthread_attr_getstacksize(const pthread_attr_t*, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:25</i><br>
// 	 * @deprecated use the safer method {@link #pthread_attr_getstacksize(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeTByReference)} instead // Commented out by makefile because NativeSizeTByReference is not in jna.
	 */
// 	@Deprecated 
// 	int pthread_attr_getstacksize(Pointer pthread_attr_tPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_getstacksize(const pthread_attr_t*, size_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:25</i>
	 */
// 	int pthread_attr_getstacksize(PointerByReference pthread_attr_tPtr1, NativeSizeTByReference size_tPtr1); // Commented out by makefile because NativeSizeTByReference is not in jna.
	/**
	 * Original signature : <code>int pthread_attr_init(pthread_attr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:27</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_attr_init(Pointer pthread_attr_tPtr1);
	/**
	 * Original signature : <code>int pthread_attr_init(pthread_attr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:27</i>
	 */
	int pthread_attr_init(PointerByReference pthread_attr_tPtr1);
	/**
	 * Original signature : <code>int pthread_attr_setdetachstate(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:29</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setdetachstate(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setdetachstate(Pointer pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setdetachstate(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:29</i>
	 */
	int pthread_attr_setdetachstate(PointerByReference pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setguardsize(pthread_attr_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:31</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setguardsize(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setguardsize(Pointer pthread_attr_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_attr_setguardsize(pthread_attr_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:31</i>
	 */
	int pthread_attr_setguardsize(PointerByReference pthread_attr_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_attr_setinheritsched(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:33</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setinheritsched(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setinheritsched(Pointer pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setinheritsched(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:33</i>
	 */
	int pthread_attr_setinheritsched(PointerByReference pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setschedparam(pthread_attr_t*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:35</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setschedparam(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.sched_param)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setschedparam(Pointer pthread_attr_tPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_attr_setschedparam(pthread_attr_t*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:35</i>
	 */
	int pthread_attr_setschedparam(PointerByReference pthread_attr_tPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_attr_setschedpolicy(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:37</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setschedpolicy(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setschedpolicy(Pointer pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setschedpolicy(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:37</i>
	 */
	int pthread_attr_setschedpolicy(PointerByReference pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setscope(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:39</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setscope(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setscope(Pointer pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setscope(pthread_attr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:39</i>
	 */
	int pthread_attr_setscope(PointerByReference pthread_attr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_attr_setstack(pthread_attr_t*, void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:41</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setstack(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setstack(Pointer pthread_attr_tPtr1, Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_attr_setstack(pthread_attr_t*, void*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:41</i>
	 */
	int pthread_attr_setstack(PointerByReference pthread_attr_tPtr1, Pointer voidPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_attr_setstackaddr(pthread_attr_t*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:43</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setstackaddr(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setstackaddr(Pointer pthread_attr_tPtr1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_attr_setstackaddr(pthread_attr_t*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:43</i>
	 */
	int pthread_attr_setstackaddr(PointerByReference pthread_attr_tPtr1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_attr_setstacksize(pthread_attr_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:45</i><br>
	 * @deprecated use the safer method {@link #pthread_attr_setstacksize(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int pthread_attr_setstacksize(Pointer pthread_attr_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_attr_setstacksize(pthread_attr_t*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:45</i>
	 */
	int pthread_attr_setstacksize(PointerByReference pthread_attr_tPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_cancel()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:47</i>
	 */
	int pthread_cancel();
	/**
	 * Original signature : <code>int pthread_cond_broadcast(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:49</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_broadcast(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_broadcast(Pointer pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_broadcast(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:49</i>
	 */
	int pthread_cond_broadcast(PointerByReference pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_destroy(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:51</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_destroy(Pointer pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_destroy(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:51</i>
	 */
	int pthread_cond_destroy(PointerByReference pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_init(pthread_cond_t*, const pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:53</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_init(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_init(Pointer pthread_cond_tPtr1, Pointer pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_init(pthread_cond_t*, const pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:53</i>
	 */
	int pthread_cond_init(PointerByReference pthread_cond_tPtr1, PointerByReference pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_signal(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:55</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_signal(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_signal(Pointer pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_signal(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:55</i>
	 */
	int pthread_cond_signal(PointerByReference pthread_cond_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_timedwait(pthread_cond_t*, pthread_mutex_t*, timespec*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:57</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_timedwait(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp10Library.timespec)} instead
	 */
// 	@Deprecated 
	int pthread_cond_timedwait(Pointer pthread_cond_tPtr1, Pointer pthread_mutex_tPtr1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Original signature : <code>int pthread_cond_timedwait(pthread_cond_t*, pthread_mutex_t*, timespec*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:57</i>
	 */
	int pthread_cond_timedwait(PointerByReference pthread_cond_tPtr1, PointerByReference pthread_mutex_tPtr1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Original signature : <code>int pthread_cond_wait(pthread_cond_t*, pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:59</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_wait(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_wait(Pointer pthread_cond_tPtr1, Pointer pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_cond_wait(pthread_cond_t*, pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:59</i>
	 */
	int pthread_cond_wait(PointerByReference pthread_cond_tPtr1, PointerByReference pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_destroy(pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:61</i><br>
	 * @deprecated use the safer method {@link #pthread_condattr_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_condattr_destroy(Pointer pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_destroy(pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:61</i>
	 */
	int pthread_condattr_destroy(PointerByReference pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_init(pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:63</i><br>
	 * @deprecated use the safer method {@link #pthread_condattr_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_condattr_init(Pointer pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_init(pthread_condattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:63</i>
	 */
	int pthread_condattr_init(PointerByReference pthread_condattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_getpshared(const pthread_condattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:65</i><br>
	 * @deprecated use the safer methods {@link #pthread_condattr_getpshared(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_condattr_getpshared(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_condattr_getpshared(Pointer pthread_condattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_getpshared(const pthread_condattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:65</i>
	 */
	int pthread_condattr_getpshared(PointerByReference pthread_condattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_getpshared(const pthread_condattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:65</i>
	 */
	int pthread_condattr_getpshared(PointerByReference pthread_condattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_condattr_setpshared(pthread_condattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:67</i><br>
	 * @deprecated use the safer method {@link #pthread_condattr_setpshared(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_condattr_setpshared(Pointer pthread_condattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_condattr_setpshared(pthread_condattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:67</i>
	 */
	int pthread_condattr_setpshared(PointerByReference pthread_condattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_create(pthread_t*, const pthread_attr_t*, pthread_create_arg1_callback*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:69</i><br>
	 * @deprecated use the safer method {@link #pthread_create(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp10Library.pthread_create_arg1_callback, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int pthread_create(Pointer pthread_tPtr1, Pointer pthread_attr_tPtr1, Gdp10Library.pthread_create_arg1_callback arg1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_create(pthread_t*, const pthread_attr_t*, pthread_create_arg1_callback*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:69</i>
	 */
	int pthread_create(PointerByReference pthread_tPtr1, PointerByReference pthread_attr_tPtr1, Gdp10Library.pthread_create_arg1_callback arg1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_detach()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:71</i>
	 */
	int pthread_detach();
	/**
	 * Original signature : <code>int pthread_equal()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:73</i>
	 */
	int pthread_equal();
	/**
	 * Original signature : <code>void pthread_exit(void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:75</i>
	 */
	void pthread_exit(Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_getconcurrency()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:77</i>
	 */
	int pthread_getconcurrency();
	/**
	 * Original signature : <code>int pthread_getschedparam(int*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:79</i><br>
	 * @deprecated use the safer methods {@link #pthread_getschedparam(java.nio.IntBuffer, org.terraswarm.gdp.sched_param)} and {@link #pthread_getschedparam(com.sun.jna.ptr.IntByReference, org.terraswarm.gdp.sched_param)} instead
	 */
// 	@Deprecated 
	int pthread_getschedparam(IntByReference intPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_getschedparam(int*, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:79</i>
	 */
	int pthread_getschedparam(IntBuffer intPtr1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>void* pthread_getspecific()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:81</i>
	 */
	Pointer pthread_getspecific();
	/**
	 * Original signature : <code>int pthread_join(void**)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:83</i>
	 */
	int pthread_join(PointerByReference voidPtrPtr1);
	/**
	 * Original signature : <code>int pthread_key_create(pthread_key_t*, pthread_key_create_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:85</i>
	 */
	int pthread_key_create(NativeLongByReference pthread_key_tPtr1, Gdp10Library.pthread_key_create_arg1_callback arg1);
	/**
	 * Original signature : <code>int pthread_key_delete()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:87</i>
	 */
	int pthread_key_delete();
	/**
	 * Original signature : <code>int pthread_mutex_destroy(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:89</i><br>
	 * @deprecated use the safer method {@link #pthread_mutex_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_destroy(Pointer pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_destroy(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:89</i>
	 */
	int pthread_mutex_destroy(PointerByReference pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_getprioceiling(const pthread_mutex_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:91</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutex_getprioceiling(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_mutex_getprioceiling(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_getprioceiling(Pointer pthread_mutex_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_getprioceiling(const pthread_mutex_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:91</i>
	 */
	int pthread_mutex_getprioceiling(PointerByReference pthread_mutex_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_getprioceiling(const pthread_mutex_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:91</i>
	 */
	int pthread_mutex_getprioceiling(PointerByReference pthread_mutex_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_init(pthread_mutex_t*, const pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:93</i><br>
	 * @deprecated use the safer method {@link #pthread_mutex_init(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_init(Pointer pthread_mutex_tPtr1, Pointer pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_init(pthread_mutex_t*, const pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:93</i>
	 */
	int pthread_mutex_init(PointerByReference pthread_mutex_tPtr1, PointerByReference pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_lock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:95</i><br>
	 * @deprecated use the safer method {@link #pthread_mutex_lock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_lock(Pointer pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_lock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:95</i>
	 */
	int pthread_mutex_lock(PointerByReference pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_setprioceiling(pthread_mutex_t*, int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:97</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutex_setprioceiling(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer)} and {@link #pthread_mutex_setprioceiling(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_setprioceiling(Pointer pthread_mutex_tPtr1, int int1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_setprioceiling(pthread_mutex_t*, int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:97</i>
	 */
	int pthread_mutex_setprioceiling(PointerByReference pthread_mutex_tPtr1, int int1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_setprioceiling(pthread_mutex_t*, int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:97</i>
	 */
	int pthread_mutex_setprioceiling(PointerByReference pthread_mutex_tPtr1, int int1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_trylock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:99</i><br>
	 * @deprecated use the safer method {@link #pthread_mutex_trylock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_trylock(Pointer pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_trylock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:99</i>
	 */
	int pthread_mutex_trylock(PointerByReference pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_unlock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:101</i><br>
	 * @deprecated use the safer method {@link #pthread_mutex_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutex_unlock(Pointer pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutex_unlock(pthread_mutex_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:101</i>
	 */
	int pthread_mutex_unlock(PointerByReference pthread_mutex_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_destroy(pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:103</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_destroy(Pointer pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_destroy(pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:103</i>
	 */
	int pthread_mutexattr_destroy(PointerByReference pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:105</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutexattr_getprioceiling(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_mutexattr_getprioceiling(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_getprioceiling(Pointer pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:105</i>
	 */
	int pthread_mutexattr_getprioceiling(PointerByReference pthread_mutexattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:105</i>
	 */
	int pthread_mutexattr_getprioceiling(PointerByReference pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprotocol(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:107</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutexattr_getprotocol(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_mutexattr_getprotocol(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_getprotocol(Pointer pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprotocol(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:107</i>
	 */
	int pthread_mutexattr_getprotocol(PointerByReference pthread_mutexattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getprotocol(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:107</i>
	 */
	int pthread_mutexattr_getprotocol(PointerByReference pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getpshared(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:109</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutexattr_getpshared(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_mutexattr_getpshared(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_getpshared(Pointer pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getpshared(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:109</i>
	 */
	int pthread_mutexattr_getpshared(PointerByReference pthread_mutexattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_getpshared(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:109</i>
	 */
	int pthread_mutexattr_getpshared(PointerByReference pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_gettype(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:111</i><br>
	 * @deprecated use the safer methods {@link #pthread_mutexattr_gettype(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_mutexattr_gettype(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_gettype(Pointer pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_gettype(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:111</i>
	 */
	int pthread_mutexattr_gettype(PointerByReference pthread_mutexattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_gettype(const pthread_mutexattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:111</i>
	 */
	int pthread_mutexattr_gettype(PointerByReference pthread_mutexattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_init(pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:113</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_init(Pointer pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_init(pthread_mutexattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:113</i>
	 */
	int pthread_mutexattr_init(PointerByReference pthread_mutexattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setprioceiling(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:115</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_setprioceiling(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_setprioceiling(Pointer pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setprioceiling(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:115</i>
	 */
	int pthread_mutexattr_setprioceiling(PointerByReference pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setprotocol(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:117</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_setprotocol(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_setprotocol(Pointer pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setprotocol(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:117</i>
	 */
	int pthread_mutexattr_setprotocol(PointerByReference pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setpshared(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:119</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_setpshared(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_setpshared(Pointer pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_setpshared(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:119</i>
	 */
	int pthread_mutexattr_setpshared(PointerByReference pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_settype(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:121</i><br>
	 * @deprecated use the safer method {@link #pthread_mutexattr_settype(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_mutexattr_settype(Pointer pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_mutexattr_settype(pthread_mutexattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:121</i>
	 */
	int pthread_mutexattr_settype(PointerByReference pthread_mutexattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_once(pthread_once_t*, pthread_once_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:123</i><br>
	 * @deprecated use the safer method {@link #pthread_once(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp10Library.pthread_once_arg1_callback)} instead
	 */
// 	@Deprecated 
	int pthread_once(Pointer pthread_once_tPtr1, Gdp10Library.pthread_once_arg1_callback arg1);
	/**
	 * Original signature : <code>int pthread_once(pthread_once_t*, pthread_once_arg1_callback*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:123</i>
	 */
	int pthread_once(PointerByReference pthread_once_tPtr1, Gdp10Library.pthread_once_arg1_callback arg1);
	/**
	 * Original signature : <code>int pthread_rwlock_destroy(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:125</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_destroy(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_destroy(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:125</i>
	 */
	int pthread_rwlock_destroy(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_init(pthread_rwlock_t*, const pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:127</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_init(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_init(Pointer pthread_rwlock_tPtr1, Pointer pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_init(pthread_rwlock_t*, const pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:127</i>
	 */
	int pthread_rwlock_init(PointerByReference pthread_rwlock_tPtr1, PointerByReference pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_rdlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:129</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_rdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_rdlock(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_rdlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:129</i>
	 */
	int pthread_rwlock_rdlock(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_tryrdlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:131</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_tryrdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_tryrdlock(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_tryrdlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:131</i>
	 */
	int pthread_rwlock_tryrdlock(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_trywrlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:133</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_trywrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_trywrlock(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_trywrlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:133</i>
	 */
	int pthread_rwlock_trywrlock(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_wrlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:135</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_wrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_wrlock(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_wrlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:135</i>
	 */
	int pthread_rwlock_wrlock(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_unlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:137</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_unlock(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_unlock(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:137</i>
	 */
	int pthread_rwlock_unlock(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_destroy(pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:139</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlockattr_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlockattr_destroy(Pointer pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_destroy(pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:139</i>
	 */
	int pthread_rwlockattr_destroy(PointerByReference pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:141</i><br>
	 * @deprecated use the safer methods {@link #pthread_rwlockattr_getpshared(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pthread_rwlockattr_getpshared(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlockattr_getpshared(Pointer pthread_rwlockattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:141</i>
	 */
	int pthread_rwlockattr_getpshared(PointerByReference pthread_rwlockattr_tPtr1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t*, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:141</i>
	 */
	int pthread_rwlockattr_getpshared(PointerByReference pthread_rwlockattr_tPtr1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_init(pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:143</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlockattr_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlockattr_init(Pointer pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_init(pthread_rwlockattr_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:143</i>
	 */
	int pthread_rwlockattr_init(PointerByReference pthread_rwlockattr_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_setpshared(pthread_rwlockattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:145</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlockattr_setpshared(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int pthread_rwlockattr_setpshared(Pointer pthread_rwlockattr_tPtr1, int int1);
	/**
	 * Original signature : <code>int pthread_rwlockattr_setpshared(pthread_rwlockattr_t*, int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:145</i>
	 */
	int pthread_rwlockattr_setpshared(PointerByReference pthread_rwlockattr_tPtr1, int int1);
	/**
	 * Original signature : <code>pthread_t pthread_self()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:147</i>
	 */
	Gdp10Library.pthread_t pthread_self();
	/**
	 * Original signature : <code>int pthread_setcancelstate(int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:149</i><br>
	 * @deprecated use the safer methods {@link #pthread_setcancelstate(int, java.nio.IntBuffer)} and {@link #pthread_setcancelstate(int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_setcancelstate(int int1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_setcancelstate(int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:149</i>
	 */
	int pthread_setcancelstate(int int1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_setcanceltype(int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:151</i><br>
	 * @deprecated use the safer methods {@link #pthread_setcanceltype(int, java.nio.IntBuffer)} and {@link #pthread_setcanceltype(int, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_setcanceltype(int int1, IntByReference intPtr1);
	/**
	 * Original signature : <code>int pthread_setcanceltype(int, int*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:151</i>
	 */
	int pthread_setcanceltype(int int1, IntBuffer intPtr1);
	/**
	 * Original signature : <code>int pthread_setconcurrency(int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:153</i>
	 */
	int pthread_setconcurrency(int int1);
	/**
	 * Original signature : <code>int pthread_setschedparam(int, sched_param*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:155</i>
	 */
	int pthread_setschedparam(int int1, sched_param sched_paramPtr1);
	/**
	 * Original signature : <code>int pthread_setspecific(const void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:157</i>
	 */
	int pthread_setspecific(Pointer voidPtr1);
	/**
	 * Original signature : <code>void pthread_testcancel()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:159</i>
	 */
	void pthread_testcancel();
	/**
	 * returns non-zero if pthread_create or cthread_fork have been called<br>
	 * Original signature : <code>int pthread_is_threaded_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:164</i>
	 */
	int pthread_is_threaded_np();
	/**
	 * Original signature : <code>int pthread_threadid_np(__uint64_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:166</i><br>
	 * @deprecated use the safer methods {@link #pthread_threadid_np(java.nio.LongBuffer)} and {@link #pthread_threadid_np(com.sun.jna.ptr.LongByReference)} instead
	 */
// 	@Deprecated 
	int pthread_threadid_np(LongByReference __uint64_tPtr1);
	/**
	 * Original signature : <code>int pthread_threadid_np(__uint64_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:166</i>
	 */
	int pthread_threadid_np(LongBuffer __uint64_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_longrdlock_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:168</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_longrdlock_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_longrdlock_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_longrdlock_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:168</i>
	 */
	int pthread_rwlock_longrdlock_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_yieldwrlock_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:170</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_yieldwrlock_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_yieldwrlock_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_yieldwrlock_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:170</i>
	 */
	int pthread_rwlock_yieldwrlock_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_downgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:172</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_downgrade_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_downgrade_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_downgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:172</i>
	 */
	int pthread_rwlock_downgrade_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_upgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:174</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_upgrade_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_upgrade_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_upgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:174</i>
	 */
	int pthread_rwlock_upgrade_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_tryupgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:176</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_tryupgrade_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_tryupgrade_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_tryupgrade_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:176</i>
	 */
	int pthread_rwlock_tryupgrade_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_held_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:178</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_held_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_held_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_held_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:178</i>
	 */
	int pthread_rwlock_held_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_rdheld_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:180</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_rdheld_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_rdheld_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_rdheld_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:180</i>
	 */
	int pthread_rwlock_rdheld_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_wrheld_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:182</i><br>
	 * @deprecated use the safer method {@link #pthread_rwlock_wrheld_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_rwlock_wrheld_np(Pointer pthread_rwlock_tPtr1);
	/**
	 * Original signature : <code>int pthread_rwlock_wrheld_np(pthread_rwlock_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:182</i>
	 */
	int pthread_rwlock_wrheld_np(PointerByReference pthread_rwlock_tPtr1);
	/**
	 * SPI to set and get pthread name<br>
	 * Original signature : <code>int pthread_getname_np(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:187</i><br>
	 * @deprecated use the safer methods {@link #pthread_getname_np(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} and {@link #pthread_getname_np(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int pthread_getname_np(Pointer charPtr1, NativeSizeT size_t1);
	/**
	 * SPI to set and get pthread name<br>
	 * Original signature : <code>int pthread_getname_np(char*, size_t)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:187</i>
	 */
	int pthread_getname_np(ByteBuffer charPtr1, NativeSizeT size_t1);
	/**
	 * Original signature : <code>int pthread_setname_np(const char*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:189</i><br>
	 * @deprecated use the safer methods {@link #pthread_setname_np(java.lang.String)} and {@link #pthread_setname_np(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int pthread_setname_np(Pointer charPtr1);
	/**
	 * Original signature : <code>int pthread_setname_np(const char*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:189</i>
	 */
	int pthread_setname_np(String charPtr1);
	/**
	 * returns non-zero if the current thread is the main thread<br>
	 * Original signature : <code>int pthread_main_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:194</i>
	 */
	int pthread_main_np();
	/**
	 * return the mach thread bound to the pthread<br>
	 * Original signature : <code>mach_port_t pthread_mach_thread_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:199</i>
	 */
	int pthread_mach_thread_np();
	/**
	 * Original signature : <code>size_t pthread_get_stacksize_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:201</i>
	 */
	NativeSizeT pthread_get_stacksize_np();
	/**
	 * Original signature : <code>void* pthread_get_stackaddr_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:203</i>
	 */
	Pointer pthread_get_stackaddr_np();
	/**
	 * Like pthread_cond_signal(), but only wake up the specified pthread<br>
	 * Original signature : <code>int pthread_cond_signal_thread_np(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:208</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_signal_thread_np(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int pthread_cond_signal_thread_np(Pointer pthread_cond_tPtr1);
	/**
	 * Like pthread_cond_signal(), but only wake up the specified pthread<br>
	 * Original signature : <code>int pthread_cond_signal_thread_np(pthread_cond_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:208</i>
	 */
	int pthread_cond_signal_thread_np(PointerByReference pthread_cond_tPtr1);
	/**
	 * Like pthread_cond_timedwait, but use a relative timeout<br>
	 * Original signature : <code>int pthread_cond_timedwait_relative_np(pthread_cond_t*, pthread_mutex_t*, timespec*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:213</i><br>
	 * @deprecated use the safer method {@link #pthread_cond_timedwait_relative_np(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp10Library.timespec)} instead
	 */
// 	@Deprecated 
	int pthread_cond_timedwait_relative_np(Pointer pthread_cond_tPtr1, Pointer pthread_mutex_tPtr1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Like pthread_cond_timedwait, but use a relative timeout<br>
	 * Original signature : <code>int pthread_cond_timedwait_relative_np(pthread_cond_t*, pthread_mutex_t*, timespec*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:213</i>
	 */
	int pthread_cond_timedwait_relative_np(PointerByReference pthread_cond_tPtr1, PointerByReference pthread_mutex_tPtr1, Gdp10Library.timespec timespecPtr1);
	/**
	 * Like pthread_create(), but leaves the thread suspended<br>
	 * Original signature : <code>int pthread_create_suspended_np(pthread_t*, const pthread_attr_t*, pthread_create_suspended_np_arg1_callback*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:218</i><br>
	 * @deprecated use the safer method {@link #pthread_create_suspended_np(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.Gdp10Library.pthread_create_suspended_np_arg1_callback, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	int pthread_create_suspended_np(Pointer pthread_tPtr1, Pointer pthread_attr_tPtr1, Gdp10Library.pthread_create_suspended_np_arg1_callback arg1, Pointer voidPtr1);
	/**
	 * Like pthread_create(), but leaves the thread suspended<br>
	 * Original signature : <code>int pthread_create_suspended_np(pthread_t*, const pthread_attr_t*, pthread_create_suspended_np_arg1_callback*, void*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:218</i>
	 */
	int pthread_create_suspended_np(PointerByReference pthread_tPtr1, PointerByReference pthread_attr_tPtr1, Gdp10Library.pthread_create_suspended_np_arg1_callback arg1, Pointer voidPtr1);
	/**
	 * Original signature : <code>int pthread_kill(int)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:220</i>
	 */
	int pthread_kill(int int1);
	/**
	 * Original signature : <code>pthread_t pthread_from_mach_thread_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:222</i>
	 */
	Gdp10Library.pthread_t pthread_from_mach_thread_np();
	/**
	 * Original signature : <code>int pthread_sigmask(int, const sigset_t*, sigset_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:224</i><br>
	 * @deprecated use the safer methods {@link #pthread_sigmask(int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #pthread_sigmask(int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
// 	@Deprecated 
	int pthread_sigmask(int int1, IntByReference sigset_tPtr1, IntByReference sigset_tPtr2);
	/**
	 * Original signature : <code>int pthread_sigmask(int, const sigset_t*, sigset_t*)</code><br>
	 * <i>native declaration : /usr/include/pthread.h:224</i>
	 */
	int pthread_sigmask(int int1, IntBuffer sigset_tPtr1, IntBuffer sigset_tPtr2);
	/**
	 * Original signature : <code>void pthread_yield_np()</code><br>
	 * <i>native declaration : /usr/include/pthread.h:226</i>
	 */
	void pthread_yield_np();
	/**
	 * Original signature : <code>int ep_thr_mutex_init(EP_THR_MUTEX*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:41</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_init(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
// 	@Deprecated 
	int ep_thr_mutex_init(Pointer mtx, int type);
	/**
	 * Original signature : <code>int ep_thr_mutex_init(EP_THR_MUTEX*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:41</i>
	 */
	int ep_thr_mutex_init(PointerByReference mtx, int type);
	/**
	 * Original signature : <code>int ep_thr_mutex_destroy(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:43</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_mutex_destroy(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_destroy(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:43</i>
	 */
	int ep_thr_mutex_destroy(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_lock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:45</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_lock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_mutex_lock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_lock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:45</i>
	 */
	int ep_thr_mutex_lock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_trylock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:47</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_trylock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_mutex_trylock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_trylock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:47</i>
	 */
	int ep_thr_mutex_trylock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_unlock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:49</i><br>
	 * @deprecated use the safer method {@link #ep_thr_mutex_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_mutex_unlock(Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_mutex_unlock(EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:49</i>
	 */
	int ep_thr_mutex_unlock(PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_cond_init(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:52</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_cond_init(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_init(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:52</i>
	 */
	int ep_thr_cond_init(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_destroy(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:54</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_cond_destroy(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_destroy(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:54</i>
	 */
	int ep_thr_cond_destroy(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_signal(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:56</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_signal(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_cond_signal(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_signal(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:56</i>
	 */
	int ep_thr_cond_signal(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_cond_wait(EP_THR_COND*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:58</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_wait(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_cond_wait(Pointer cv, Pointer mtx);
	/**
	 * Original signature : <code>int ep_thr_cond_wait(EP_THR_COND*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:58</i>
	 */
	int ep_thr_cond_wait(PointerByReference cv, PointerByReference mtx);
	/**
	 * Original signature : <code>int ep_thr_cond_broadcast(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:60</i><br>
	 * @deprecated use the safer method {@link #ep_thr_cond_broadcast(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_cond_broadcast(Pointer cv);
	/**
	 * Original signature : <code>int ep_thr_cond_broadcast(EP_THR_COND*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:60</i>
	 */
	int ep_thr_cond_broadcast(PointerByReference cv);
	/**
	 * Original signature : <code>int ep_thr_rwlock_init(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:63</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_init(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_init(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_init(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:63</i>
	 */
	int ep_thr_rwlock_init(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_destroy(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:65</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_destroy(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_destroy(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_destroy(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:65</i>
	 */
	int ep_thr_rwlock_destroy(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_rdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:67</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_rdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_rdlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_rdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:67</i>
	 */
	int ep_thr_rwlock_rdlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_tryrdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:69</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_tryrdlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_tryrdlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_tryrdlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:69</i>
	 */
	int ep_thr_rwlock_tryrdlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_wrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:71</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_wrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_wrlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_wrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:71</i>
	 */
	int ep_thr_rwlock_wrlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_trywrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:73</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_trywrlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_trywrlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_trywrlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:73</i>
	 */
	int ep_thr_rwlock_trywrlock(PointerByReference rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_unlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:75</i><br>
	 * @deprecated use the safer method {@link #ep_thr_rwlock_unlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int ep_thr_rwlock_unlock(Pointer rwl);
	/**
	 * Original signature : <code>int ep_thr_rwlock_unlock(EP_THR_RWLOCK*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_thr.h:75</i>
	 */
	int ep_thr_rwlock_unlock(PointerByReference rwl);
	/**
	 * Original signature : <code>gdp_buf_t* gdp_buf_new()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:2</i>
	 */
	PointerByReference gdp_buf_new();
	/**
	 * Original signature : <code>int gdp_buf_reset(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:4</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_reset(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int gdp_buf_reset(Pointer b);
	/**
	 * Original signature : <code>int gdp_buf_reset(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:4</i>
	 */
	int gdp_buf_reset(PointerByReference b);
	/**
	 * Original signature : <code>void gdp_buf_free(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:6</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	void gdp_buf_free(Pointer b);
	/**
	 * Original signature : <code>void gdp_buf_free(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:6</i>
	 */
	void gdp_buf_free(PointerByReference b);
	/**
	 * Original signature : <code>void gdp_buf_setlock(gdp_buf_t*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:8</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_setlock(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	void gdp_buf_setlock(Pointer buf, Pointer m);
	/**
	 * Original signature : <code>void gdp_buf_setlock(gdp_buf_t*, EP_THR_MUTEX*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:8</i>
	 */
	void gdp_buf_setlock(PointerByReference buf, PointerByReference m);
	/**
	 * Original signature : <code>size_t gdp_buf_getlength(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:10</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_getlength(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	NativeSizeT gdp_buf_getlength(Pointer buf);
	/**
	 * Original signature : <code>size_t gdp_buf_getlength(gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:10</i>
	 */
	NativeSizeT gdp_buf_getlength(PointerByReference buf);
	/**
	 * Original signature : <code>size_t gdp_buf_read(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:12</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_read(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	NativeSizeT gdp_buf_read(Pointer buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_read(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:12</i>
	 */
	NativeSizeT gdp_buf_read(PointerByReference buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_peek(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:14</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_peek(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	NativeSizeT gdp_buf_peek(Pointer buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>size_t gdp_buf_peek(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:14</i>
	 */
	NativeSizeT gdp_buf_peek(PointerByReference buf, Pointer out, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_drain(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:16</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_drain(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int gdp_buf_drain(Pointer buf, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_drain(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:16</i>
	 */
	int gdp_buf_drain(PointerByReference buf, NativeSizeT sz);
	/**
	 * Original signature : <code>char* gdp_buf_getptr(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:18</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_getptr(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	Pointer gdp_buf_getptr(Pointer buf, NativeSizeT sz);
	/**
	 * Original signature : <code>char* gdp_buf_getptr(gdp_buf_t*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:18</i>
	 */
	Pointer gdp_buf_getptr(PointerByReference buf, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_write(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:20</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_write(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSizeT)} instead
	 */
// 	@Deprecated 
	int gdp_buf_write(Pointer buf, Pointer in, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_write(gdp_buf_t*, void*, size_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:20</i>
	 */
	int gdp_buf_write(PointerByReference buf, Pointer in, NativeSizeT sz);
	/**
	 * Original signature : <code>int gdp_buf_copy(gdp_buf_t*, gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:22</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_copy(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int gdp_buf_copy(Pointer ibuf, Pointer obuf);
	/**
	 * Original signature : <code>int gdp_buf_copy(gdp_buf_t*, gdp_buf_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:22</i>
	 */
	int gdp_buf_copy(PointerByReference ibuf, PointerByReference obuf);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i><br>
	 * @deprecated use the safer methods {@link #gdp_buf_printf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #gdp_buf_printf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	int gdp_buf_printf(Pointer buf, Pointer fmt, Object... varArgs1);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i>
	 */
	int gdp_buf_printf(PointerByReference buf, String fmt, Object... varArgs1);
	/**
	 * Original signature : <code>int gdp_buf_printf(gdp_buf_t*, const char*, null)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:24</i>
	 */
	int gdp_buf_printf(PointerByReference buf, Pointer fmt, Object... varArgs1);
	/**
	 * Original signature : <code>void gdp_buf_dump(gdp_buf_t*, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:26</i><br>
	 * @deprecated use the safer method {@link #gdp_buf_dump(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.FILE)} instead
	 */
// 	@Deprecated 
	void gdp_buf_dump(Pointer buf, FILE fp);
	/**
	 * Original signature : <code>void gdp_buf_dump(gdp_buf_t*, FILE*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_buf.h:26</i>
	 */
	void gdp_buf_dump(PointerByReference buf, FILE fp);
	/**
	 * Original signature : <code>void _gdp_stat_init()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp_stat.h:1</i>
	 */
	void _gdp_stat_init();
	/**
	 * get next event (fills in gev structure)<br>
	 * Original signature : <code>gdp_event_t* gdp_event_next(bool)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:63</i>
	 */
	PointerByReference gdp_event_next(byte wait$);
	/**
	 * free an event (required after gdp_event_next)<br>
	 * Original signature : <code>EP_STAT gdp_event_free(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:68</i><br>
	 * @deprecated use the safer method {@link #gdp_event_free(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_event_free(Pointer gev);
	/**
	 * free an event (required after gdp_event_next)<br>
	 * Original signature : <code>EP_STAT gdp_event_free(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:68</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_event_free(PointerByReference gev);
	/**
	 * get the type of an event<br>
	 * Original signature : <code>int gdp_event_gettype(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:73</i><br>
	 * @deprecated use the safer method {@link #gdp_event_gettype(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	int gdp_event_gettype(Pointer gev);
	/**
	 * get the type of an event<br>
	 * Original signature : <code>int gdp_event_gettype(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:73</i>
	 */
	int gdp_event_gettype(PointerByReference gev);
	/**
	 * get the GCL handle<br>
	 * Original signature : <code>gdp_gcl_t* gdp_event_getgcl(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:78</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getgcl(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	PointerByReference gdp_event_getgcl(Pointer gev);
	/**
	 * get the GCL handle<br>
	 * Original signature : <code>gdp_gcl_t* gdp_event_getgcl(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:78</i>
	 */
	PointerByReference gdp_event_getgcl(PointerByReference gev);
	/**
	 * get the datum<br>
	 * Original signature : <code>gdp_datum_t* gdp_event_getdatum(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:83</i><br>
	 * @deprecated use the safer method {@link #gdp_event_getdatum(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	gdp_datum gdp_event_getdatum(Pointer gev);
	/**
	 * get the datum<br>
	 * Original signature : <code>gdp_datum_t* gdp_event_getdatum(gdp_event_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:83</i>
	 */
	gdp_datum gdp_event_getdatum(PointerByReference gev);
	/**
	 * initialize the library<br>
	 * Original signature : <code>EP_STAT gdp_init()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:91</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_init();
	/**
	 * run event loop (normally run from gdp_init; never returns)<br>
	 * Original signature : <code>void* gdp_run_accept_event_loop(void*)</code><br>
	 * @param voidPtr1 unused<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:97</i>
	 */
	Pointer gdp_run_accept_event_loop(Pointer voidPtr1);
	/**
	 * create a new GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_create(gcl_name_t, gdp_gcl_t**)</code><br>
	 * @param gdp_gcl_tPtrPtr1 pointer to result GCL handle<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:103</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_create(java.nio.ByteBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #gdp_gcl_create(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_create(Pointer gcl_name_t1, PointerByReference gdp_gcl_tPtrPtr1);
	/**
	 * create a new GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_create(gcl_name_t, gdp_gcl_t**)</code><br>
	 * @param gdp_gcl_tPtrPtr1 pointer to result GCL handle<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:103</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_create(ByteBuffer gcl_name_t1, PointerByReference gdp_gcl_tPtrPtr1);
	/**
	 * open an existing GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_open(gcl_name_t, gdp_iomode_t, gdp_gcl_t**)</code><br>
	 * @param name GCL name to open<br>
	 * @param rw read/write (append)<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:110</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_open(java.nio.ByteBuffer, int, com.sun.jna.ptr.PointerByReference)} and {@link #gdp_gcl_open(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_open(Pointer name, int rw, PointerByReference gclh);
	/**
	 * open an existing GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_open(gcl_name_t, gdp_iomode_t, gdp_gcl_t**)</code><br>
	 * @param name GCL name to open<br>
	 * @param rw read/write (append)<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:110</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_open(ByteBuffer name, int rw, PointerByReference gclh);
	/**
	 * close an open GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_close(gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:115</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_close(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_close(Pointer gclh);
	/**
	 * close an open GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_close(gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:115</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_close(PointerByReference gclh);
	/**
	 * append to a writable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_publish(gdp_gcl_t*, gdp_datum_t*)</code><br>
	 * @param gclh writable GCL handle<br>
	 * @param gdp_datum_tPtr1 message to write<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:122</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_publish(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.gdp_datum)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_publish(Pointer gclh, gdp_datum gdp_datum_tPtr1);
	/**
	 * append to a writable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_publish(gdp_gcl_t*, gdp_datum_t*)</code><br>
	 * @param gclh writable GCL handle<br>
	 * @param gdp_datum_tPtr1 message to write<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:122</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_publish(PointerByReference gclh, gdp_datum gdp_datum_tPtr1);
	/**
	 * read from a readable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_read(gdp_gcl_t*, gdp_recno_t, gdp_datum_t*)</code><br>
	 * @param gclh readable GCL handle<br>
	 * @param recno GCL record number<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:129</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_read(com.sun.jna.ptr.PointerByReference, long, org.terraswarm.gdp.gdp_datum)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_read(Pointer gclh, long recno, gdp_datum datum);
	/**
	 * read from a readable GCL<br>
	 * Original signature : <code>EP_STAT gdp_gcl_read(gdp_gcl_t*, gdp_recno_t, gdp_datum_t*)</code><br>
	 * @param gclh readable GCL handle<br>
	 * @param recno GCL record number<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:129</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_read(PointerByReference gclh, long recno, gdp_datum datum);
	/**
	 * Original signature : <code>EP_STAT gdp_gcl_subscribe(gdp_gcl_t*, gdp_recno_t, gdp_recno_t, gdp_gcl_sub_cbfunc_t, void*)</code><br>
	 * @param gclh readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param stop last record to retrieve<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:138</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_subscribe(com.sun.jna.ptr.PointerByReference, long, long, org.terraswarm.gdp.Gdp10Library.gdp_gcl_sub_cbfunc_t, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_subscribe(Pointer gclh, long start, long stop, Gdp10Library.gdp_gcl_sub_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * Original signature : <code>EP_STAT gdp_gcl_subscribe(gdp_gcl_t*, gdp_recno_t, gdp_recno_t, gdp_gcl_sub_cbfunc_t, void*)</code><br>
	 * @param gclh readable GCL handle<br>
	 * @param start first record to retrieve<br>
	 * @param stop last record to retrieve<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:138</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_subscribe(PointerByReference gclh, long start, long stop, Gdp10Library.gdp_gcl_sub_cbfunc_t cbfunc, Pointer cbarg);
	/**
	 * XXX: should this be in a more generic "getstat" function?<br>
	 * Original signature : <code>gcl_name_t* gdp_gcl_getname(const gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:143</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_getname(com.sun.jna.ptr.PointerByReference)} instead
	 */
// 	@Deprecated 
	Pointer gdp_gcl_getname(Pointer gclh);
	/**
	 * XXX: should this be in a more generic "getstat" function?<br>
	 * Original signature : <code>gcl_name_t* gdp_gcl_getname(const gdp_gcl_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:143</i>
	 */
	Pointer gdp_gcl_getname(PointerByReference gclh);
	/**
	 * check to see if a GCL name is valid<br>
	 * Original signature : <code>bool gdp_gcl_name_is_zero(const gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:148</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_name_is_zero(java.nio.ByteBuffer)} and {@link #gdp_gcl_name_is_zero(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	byte gdp_gcl_name_is_zero(Pointer gcl_name_t1);
	/**
	 * check to see if a GCL name is valid<br>
	 * Original signature : <code>bool gdp_gcl_name_is_zero(const gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:148</i>
	 */
	byte gdp_gcl_name_is_zero(ByteBuffer gcl_name_t1);
	/**
	 * print a GCL (for debugging)<br>
	 * Original signature : <code>void gdp_gcl_print(const gdp_gcl_t*, FILE*, int, int)</code><br>
	 * @param gclh GCL handle to print<br>
	 * @param fp file to print it to<br>
	 * @param detail not used at this time<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:156</i><br>
	 * @deprecated use the safer method {@link #gdp_gcl_print(com.sun.jna.ptr.PointerByReference, org.terraswarm.gdp.FILE, int, int)} instead
	 */
// 	@Deprecated 
	void gdp_gcl_print(Pointer gclh, FILE fp, int detail, int indent);
	/**
	 * print a GCL (for debugging)<br>
	 * Original signature : <code>void gdp_gcl_print(const gdp_gcl_t*, FILE*, int, int)</code><br>
	 * @param gclh GCL handle to print<br>
	 * @param fp file to print it to<br>
	 * @param detail not used at this time<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:156</i>
	 */
	void gdp_gcl_print(PointerByReference gclh, FILE fp, int detail, int indent);
	/**
	 * make a printable GCL name from a binary version<br>
	 * Original signature : <code>char* gdp_gcl_printable_name(const gcl_name_t, gcl_pname_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:161</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_printable_name(java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gdp_gcl_printable_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	Pointer gdp_gcl_printable_name(Pointer internal, Pointer external);
	/**
	 * make a printable GCL name from a binary version<br>
	 * Original signature : <code>char* gdp_gcl_printable_name(const gcl_name_t, gcl_pname_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:161</i>
	 */
	Pointer gdp_gcl_printable_name(ByteBuffer internal, ByteBuffer external);
	/**
	 * make a binary GCL name from a printable version<br>
	 * Original signature : <code>EP_STAT gdp_gcl_internal_name(const gcl_pname_t, gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:166</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_internal_name(java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #gdp_gcl_internal_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_internal_name(Pointer external, Pointer internal);
	/**
	 * make a binary GCL name from a printable version<br>
	 * Original signature : <code>EP_STAT gdp_gcl_internal_name(const gcl_pname_t, gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:166</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_internal_name(ByteBuffer external, ByteBuffer internal);
	/**
	 * parse a (possibly human-friendly) GCL name<br>
	 * Original signature : <code>EP_STAT gdp_gcl_parse_name(const char*, gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:171</i><br>
	 * @deprecated use the safer methods {@link #gdp_gcl_parse_name(java.lang.String, java.nio.ByteBuffer)} and {@link #gdp_gcl_parse_name(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_parse_name(Pointer ext, Pointer internal);
	/**
	 * parse a (possibly human-friendly) GCL name<br>
	 * Original signature : <code>EP_STAT gdp_gcl_parse_name(const char*, gcl_name_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:171</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue gdp_gcl_parse_name(String ext, ByteBuffer internal);
	/**
	 * allocate a new message<br>
	 * Original signature : <code>gdp_datum_t* gdp_datum_new()</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:176</i>
	 */
	gdp_datum gdp_datum_new();
	/**
	 * free a message<br>
	 * Original signature : <code>void gdp_datum_free(gdp_datum_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:181</i>
	 */
	void gdp_datum_free(gdp_datum gdp_datum_tPtr1);
	/**
	 * print a message (for debugging)<br>
	 * Original signature : <code>void gdp_datum_print(const gdp_datum_t*, FILE*)</code><br>
	 * @param datum message to print<br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:187</i>
	 */
	void gdp_datum_print(gdp_datum datum, FILE fp);
	/**
	 * get the record number from a datum<br>
	 * Original signature : <code>gdp_recno_t gdp_datum_getrecno(const gdp_datum_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:192</i>
	 */
	long gdp_datum_getrecno(gdp_datum datum);
	/**
	 * set a record number in a datum<br>
	 * Original signature : <code>void gdp_datum_setrecno(gdp_datum_t*, gdp_recno_t)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:197</i>
	 */
	void gdp_datum_setrecno(gdp_datum datum, long recno);
	/**
	 * get the timestamp from a datum<br>
	 * Original signature : <code>void gdp_datum_getts(const gdp_datum_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:202</i>
	 */
	void gdp_datum_getts(gdp_datum datum, EP_TIME_SPEC ts);
	/**
	 * set the timestamp in a datum<br>
	 * Original signature : <code>void gdp_datum_setts(gdp_datum_t*, EP_TIME_SPEC*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:207</i>
	 */
	void gdp_datum_setts(gdp_datum datum, EP_TIME_SPEC ts);
	/**
	 * get the data length from a datum<br>
	 * Original signature : <code>size_t gdp_datum_getdlen(const gdp_datum_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:212</i>
	 */
	NativeSizeT gdp_datum_getdlen(gdp_datum datum);
	/**
	 * get the data buffer from a datum<br>
	 * Original signature : <code>gdp_buf_t* gdp_datum_getdbuf(const gdp_datum_t*)</code><br>
	 * <i>native declaration : src/gdp/gdp/gdp.h:217</i>
	 */
	PointerByReference gdp_datum_getdbuf(gdp_datum datum);
	/**
	 * support functions<br>
	 * Original signature : <code>int ep_dbg_flaglevel(EP_DBG*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:20</i>
	 */
	int ep_dbg_flaglevel(EP_DBG f);
	/**
	 * initialization<br>
	 * Original signature : <code>void ep_dbg_init()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:25</i>
	 */
	void ep_dbg_init();
	/**
	 * setting/fetching debug output file<br>
	 * Original signature : <code>void ep_dbg_setfile(FILE*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:30</i>
	 */
	void ep_dbg_setfile(FILE fp);
	/**
	 * Original signature : <code>FILE* ep_dbg_getfile()</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:32</i>
	 */
	FILE ep_dbg_getfile();
	/**
	 * setting debug flags<br>
	 * Original signature : <code>void ep_dbg_set(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:37</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_set(java.lang.String)} and {@link #ep_dbg_set(com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	void ep_dbg_set(Pointer s);
	/**
	 * setting debug flags<br>
	 * Original signature : <code>void ep_dbg_set(const char*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:37</i>
	 */
	void ep_dbg_set(String s);
	/**
	 * Original signature : <code>void ep_dbg_setto(const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:39</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_setto(java.lang.String, int)} and {@link #ep_dbg_setto(com.sun.jna.Pointer, int)} instead
	 */
// 	@Deprecated 
	void ep_dbg_setto(Pointer pat, int lev);
	/**
	 * Original signature : <code>void ep_dbg_setto(const char*, int)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:39</i>
	 */
	void ep_dbg_setto(String pat, int lev);
	/**
	 * printing debug output (uses stddbg)<br>
	 * Original signature : <code>void ep_dbg_printf(const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:44</i><br>
	 * @deprecated use the safer methods {@link #ep_dbg_printf(java.lang.String, java.lang.Object)} and {@link #ep_dbg_printf(com.sun.jna.Pointer, java.lang.Object)} instead
	 */
// 	@Deprecated 
	void ep_dbg_printf(Pointer fmt, Object... varArgs1);
	/**
	 * printing debug output (uses stddbg)<br>
	 * Original signature : <code>void ep_dbg_printf(const char*, null)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:44</i>
	 */
	void ep_dbg_printf(String fmt, Object... varArgs1);
	/**
	 * crackarg parsing<br>
	 * Original signature : <code>EP_STAT epCavDebug(const char*, void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:49</i><br>
	 * @deprecated use the safer methods {@link #epCavDebug(java.lang.String, com.sun.jna.Pointer)} and {@link #epCavDebug(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
// 	@Deprecated 
	org.terraswarm.gdp.EP_STAT.ByValue epCavDebug(Pointer vp, Pointer rp);
	/**
	 * crackarg parsing<br>
	 * Original signature : <code>EP_STAT epCavDebug(const char*, void*)</code><br>
	 * <i>native declaration : src/gdp/ep/ep_dbg.h:49</i>
	 */
	org.terraswarm.gdp.EP_STAT.ByValue epCavDebug(String vp, Pointer rp);
	/** getopt(3) external variables */
	// public static final GlobalPointerType<ByteByReference > optarg = new GlobalPointerType<ByteByReference >(Gdp10Library.JNA_NATIVE_LIB, ByteByReference.class, "optarg");
	// public static final GlobalInt optind = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "optind");
	// public static final GlobalInt opterr = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "opterr");
	// public static final GlobalInt optopt = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "optopt");
	/** getsubopt(3) external variable */
	// public static final GlobalPointerType<ByteByReference > suboptarg = new GlobalPointerType<ByteByReference >(Gdp10Library.JNA_NATIVE_LIB, ByteByReference.class, "suboptarg");
	// public static final GlobalInt optreset = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "optreset");
	// public static final GlobalInt __mb_cur_max = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "__mb_cur_max");
	// public static final GlobalStruct<FILE > __stdinp = new GlobalStruct<FILE >(Gdp10Library.JNA_NATIVE_LIB, FILE.class, "__stdinp");
	// public static final GlobalStruct<FILE > __stdoutp = new GlobalStruct<FILE >(Gdp10Library.JNA_NATIVE_LIB, FILE.class, "__stdoutp");
	// public static final GlobalStruct<FILE > __stderrp = new GlobalStruct<FILE >(Gdp10Library.JNA_NATIVE_LIB, FILE.class, "__stderrp");
	/** perror(3) external variables */
	// public static final GlobalInt sys_nerr = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "sys_nerr");
	// public static final GlobalInt getdate_err = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "getdate_err");
	// public static final GlobalInt daylight = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "daylight");
	// public static final GlobalInt h_errno = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "h_errno");
	/** current generation */
	// public static final GlobalInt __EpDbgCurGen = new GlobalInt(Gdp10Library.JNA_NATIVE_LIB, "__EpDbgCurGen");
	public static class pthread_rwlock_t extends PointerType {
		public pthread_rwlock_t(Pointer address) {
			super(address);
		}
		public pthread_rwlock_t() {
			super();
		}
	};
	public static class pthread_condattr_t extends PointerType {
		public pthread_condattr_t(Pointer address) {
			super(address);
		}
		public pthread_condattr_t() {
			super();
		}
	};
	public static class gdp_event_t extends PointerType {
		public gdp_event_t(Pointer address) {
			super(address);
		}
		public gdp_event_t() {
			super();
		}
	};
	public static class EP_THR_COND extends PointerType {
		public EP_THR_COND(Pointer address) {
			super(address);
		}
		public EP_THR_COND() {
			super();
		}
	};
	public static class pthread_mutexattr_t extends PointerType {
		public pthread_mutexattr_t(Pointer address) {
			super(address);
		}
		public pthread_mutexattr_t() {
			super();
		}
	};
	public static class gdp_buf_t extends PointerType {
		public gdp_buf_t(Pointer address) {
			super(address);
		}
		public gdp_buf_t() {
			super();
		}
	};
	public static class pthread_attr_t extends PointerType {
		public pthread_attr_t(Pointer address) {
			super(address);
		}
		public pthread_attr_t() {
			super();
		}
	};
	public static class EP_THR_RWLOCK extends PointerType {
		public EP_THR_RWLOCK(Pointer address) {
			super(address);
		}
		public EP_THR_RWLOCK() {
			super();
		}
	};
	public static class EP_STAT_HANDLE extends PointerType {
		public EP_STAT_HANDLE(Pointer address) {
			super(address);
		}
		public EP_STAT_HANDLE() {
			super();
		}
	};
	public static class pthread_once_t extends PointerType {
		public pthread_once_t(Pointer address) {
			super(address);
		}
		public pthread_once_t() {
			super();
		}
	};
	public static class fssearchblock extends PointerType {
		public fssearchblock(Pointer address) {
			super(address);
		}
		public fssearchblock() {
			super();
		}
	};
	public static class accessx_descriptor extends PointerType {
		public accessx_descriptor(Pointer address) {
			super(address);
		}
		public accessx_descriptor() {
			super();
		}
	};
	public static class EP_STAT_HANDLER_FUNCP extends PointerType {
		public EP_STAT_HANDLER_FUNCP(Pointer address) {
			super(address);
		}
		public EP_STAT_HANDLER_FUNCP() {
			super();
		}
	};
	public static class pthread_mutex_t extends PointerType {
		public pthread_mutex_t(Pointer address) {
			super(address);
		}
		public pthread_mutex_t() {
			super();
		}
	};
	public static class gdp_gcl_t extends PointerType {
		public gdp_gcl_t(Pointer address) {
			super(address);
		}
		public gdp_gcl_t() {
			super();
		}
	};
	public static class __sFILEX extends PointerType {
		public __sFILEX(Pointer address) {
			super(address);
		}
		public __sFILEX() {
			super();
		}
	};
	public static class pthread_rwlockattr_t extends PointerType {
		public pthread_rwlockattr_t(Pointer address) {
			super(address);
		}
		public pthread_rwlockattr_t() {
			super();
		}
	};
	public static class EP_THR_MUTEX extends PointerType {
		public EP_THR_MUTEX(Pointer address) {
			super(address);
		}
		public EP_THR_MUTEX() {
			super();
		}
	};
	public static class sockaddr extends PointerType {
		public sockaddr(Pointer address) {
			super(address);
		}
		public sockaddr() {
			super();
		}
	};
	public static class searchstate extends PointerType {
		public searchstate(Pointer address) {
			super(address);
		}
		public searchstate() {
			super();
		}
	};
	public static class pthread_t extends PointerType {
		public pthread_t(Pointer address) {
			super(address);
		}
		public pthread_t() {
			super();
		}
	};
	public static class timespec extends PointerType {
		public timespec(Pointer address) {
			super(address);
		}
		public timespec() {
			super();
		}
	};
	public static class pthread_cond_t extends PointerType {
		public pthread_cond_t(Pointer address) {
			super(address);
		}
		public pthread_cond_t() {
			super();
		}
	};
}
