package org.terraswarm.gdp;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import org.terraswarm.gdp.Gdp10Library.in_addr;
/**
 * Like `struct ip_mreq' but including interface specification by index.<br>
 * <i>native declaration : /usr/include/bits/in.h:14</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ip_mreqn extends Structure {
	/**
	 * IP multicast address of group<br>
	 * C type : in_addr
	 */
	public in_addr imr_multiaddr;
	/**
	 * local IP address of interface<br>
	 * C type : in_addr
	 */
	public in_addr imr_address;
	/** Interface index */
	public int imr_ifindex;
	public ip_mreqn() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("imr_multiaddr", "imr_address", "imr_ifindex");
	}
	/**
	 * @param imr_multiaddr IP multicast address of group<br>
	 * C type : in_addr<br>
	 * @param imr_address local IP address of interface<br>
	 * C type : in_addr<br>
	 * @param imr_ifindex Interface index
	 */
	public ip_mreqn(in_addr imr_multiaddr, in_addr imr_address, int imr_ifindex) {
		super();
		this.imr_multiaddr = imr_multiaddr;
		this.imr_address = imr_address;
		this.imr_ifindex = imr_ifindex;
	}
	public ip_mreqn(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ip_mreqn implements Structure.ByReference {
		
	};
	public static class ByValue extends ip_mreqn implements Structure.ByValue {
		
	};
}
