package org.terraswarm.gdp;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * Structure to hold the cleanup handler information.<br>
 * <i>native declaration : /usr/include/pthread.h:279</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class __pthread_cleanup_frame extends Structure {
	/** C type : __cancel_routine_callback* */
	public __pthread_cleanup_frame.__cancel_routine_callback __cancel_routine;
	/** C type : void* */
	public Pointer __cancel_arg;
	public int __do_it;
	public int __cancel_type;
	/** <i>native declaration : /usr/include/pthread.h:278</i> */
	public interface __cancel_routine_callback extends Callback {
		void apply(Pointer voidPtr1);
	};
	public __pthread_cleanup_frame() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("__cancel_routine", "__cancel_arg", "__do_it", "__cancel_type");
	}
	/**
	 * @param __cancel_routine C type : __cancel_routine_callback*<br>
	 * @param __cancel_arg C type : void*
	 */
	public __pthread_cleanup_frame(__pthread_cleanup_frame.__cancel_routine_callback __cancel_routine, Pointer __cancel_arg, int __do_it, int __cancel_type) {
		super();
		this.__cancel_routine = __cancel_routine;
		this.__cancel_arg = __cancel_arg;
		this.__do_it = __do_it;
		this.__cancel_type = __cancel_type;
	}
	public __pthread_cleanup_frame(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends __pthread_cleanup_frame implements Structure.ByReference {
		
	};
	public static class ByValue extends __pthread_cleanup_frame implements Structure.ByValue {
		
	};
}
