<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="Foscam" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={121, 126, 934, 634}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[700, 524]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{340.0, 252.0}">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{55.0, 15.0}">
        </property>
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Take a snapshot from a Foscam webcam.&#10;This model assumes that the camera IP address&#10;is 10.0.0.46, and that it is listening to port 80.&#10;To change those assumptions, change the parameters.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{130.0, -15.0}">
        </property>
    </property>
    <entity name="SingleEvent" class="ptolemy.actor.lib.SingleEvent">
        <property name="value" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{35.0, 130.0}">
        </property>
    </entity>
    <entity name="Status" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={606, 109, 778, 380}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[778, 336]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{415.0, 200.0}">
        </property>
    </entity>
    <entity name="Headers" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={606, 109, 778, 380}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[778, 336]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{280.0, 255.0}">
        </property>
    </entity>
    <entity name="Errors" class="ptolemy.actor.lib.gui.Display">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={626, 425, 778, 380}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute" value="[778, 336]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{280.0, 310.0}">
        </property>
    </entity>
    <entity name="ImageDisplay" class="ptolemy.actor.lib.image.ImageDisplay">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={780, 367, 640, 524}, maximized=false}">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="_pictureSize" class="ptolemy.actor.gui.SizeAttribute" value="[640, 480]">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{425.0, 110.0}">
        </property>
    </entity>
    <entity name="Expression" class="ptolemy.actor.lib.Expression">
        <property name="expression" class="ptolemy.kernel.util.StringAttribute" value="cast(object, in)">
        </property>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="expression">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
            <property name="displayHeight" class="ptolemy.data.expr.Parameter" value="10">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{305.0, 110.0}">
        </property>
        <port name="output" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="object">
            </property>
        </port>
        <port name="in" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_type" class="ptolemy.actor.TypeAttribute" value="general">
            </property>
        </port>
    </entity>
    <entity name="Foscam" class="org.terraswarm.accessor.JSAccessor">
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015 The Regents of the University of California.&#10;// All rights reserved.&#10;&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;&#10;/** An accessor for a Foscam camera. The commands that this accessor supports are:&#10; *  #  *snapshot*: Take a picture and produce it on the '''response''' output.&#10; *  #  *videostream*: Output a video stream.&#10; *  #  *center*: Center the camera. This will pan to find the center.&#10; *  #  *down*: Move the camera down.&#10; *  #  *left*: Move the camera left.&#10; *  #  *right*: Move the camera left.&#10; *  #  *up*: Move the camera left.&#10; *  For the last four motion command commands, you can specify an argument&#10; *  'degree' in the arguments object to move a specified number of degrees.&#10; *  If no degree argument is given, the camera will move as far as it can in&#10; *  the specified direction, or until you give it a stop command:&#10; *  #  *stop down*&#10; *  #  *stop left*&#10; *  #  *stop right*&#10; *  #  *stop up*&#10; *  The following commands start and stop continual panning of the camera:&#10; *  #  *horizontal patrol*&#10; *  #  *vertical patrol*&#10; *  #  *stop horizontal patrol*&#10; *  #  *stop vertical patrol*&#10; *&#10; *  If you select *videostream* then you can specify 'resolution' and 'rate'&#10; *  options.  FIXME: Make more user friendly versions of these.&#10; *  resolution = 8 specifies 320*240. rate=15 specifies 1fps.&#10; *  NOTE: The videostream selection appears to not actually work.&#10; *  It has been known to produce a frame or two, but it needs further work.&#10; *&#10; *  The &lt;i&gt;options&lt;/i&gt; input can be a string URL&#10; *  or an object with the following fields:&#10; *  # headers: An object containing request headers. By default this&#10; *    is an empty object. Items may have a value that is an array of values,&#10; *    for headers with more than one value.&#10; *  # keepAlive: A boolean that specified whether to keep sockets around&#10; *    in a pool to be used by other requests in the future. This defaults to false.&#10; *  # method: A string specifying the HTTP request method.&#10; *    This defaults to 'GET', but can also be 'PUT', 'POST', 'DELETE', etc.&#10; *  # url: A string that can be parsed as a URL, or an object containing&#10; *    the following fields:&#10; *    ## host: A string giving the domain name or IP address of&#10; *       the server to issue the request to. This defaults to 'localhost'.&#10; *    ## protocol: The protocol. This is a string that defaults to 'http'.&#10; *    ## port: Port of remote server. This defaults to 80. &#10; *&#10; *  This accessor has been tested with a Foscam NVision F18910W only.&#10; *  The (rather poor) documentation for the camera API can be found here:&#10; *  http://www.foscam.es/descarga/ipcam_cgi_sdk.pdf.&#10; *  The design of this accessor is inspired by the &quot;foscam&quot; module for&#10; *  Node.js, found at https://github.com/fvdm/nodejs-foscam.&#10; * &#10; *  @accessor Foscam&#10; *  @author Edward A. Lee (eal@eecs.berkeley.edu)&#10; *  @input {JSON} options The specification for the URL, as defined above.&#10; *  @input {string} command The command.&#10; *  @input {JSON} arguments Arguments to the command.&#10; *  @input trigger An input to trigger the command.&#10; *  @output {string} response The server's response.&#10; *  @output {int} status The status code of the response.&#10; *  @output {JSON} headers The headers sent with the response.&#10; */&#10;var querystring = require('querystring');&#10;&#10;/** Define inputs and outputs. */&#10;exports.setup = function () {&#10;    extend('net/REST');&#10;    // Change the type of the input to select.&#10;    input('command', {&#10;        'type':'select',&#10;        'value':'snapshot',&#10;        'options':[&#10;            'snapshot',&#10;            'videostream',&#10;            'center',&#10;            'down',&#10;            'left',&#10;            'right',&#10;            'up',&#10;		    'stop down',&#10;		    'stop left',&#10;		    'stop right',&#10;            'stop up',&#10;            'horizontal patrol',&#10;		    'vertical patrol',&#10;		    'stop vertical patrol',&#10;		    'stop horizontal patrol'&#10;        ]});&#10;    // Provide parameters for username and password.&#10;    parameter('username', {'value':'admin', 'type':'string'});&#10;    parameter('password', {'value':'', 'type':'string'})&#10;};&#10;&#10;// Alternate command to use, for example to stop the camera.&#10;var alternateCommand;&#10;&#10;/** Override the base class to construct the path for the URL from.&#10; *  more user-friendly descriptions of the command.&#10; */&#10;exports.encodePath = function() {&#10;    if (!alternateCommand) {&#10;        command = get('command');&#10;    }&#10;    var code = -1;&#10;    switch(command) {&#10;		case 'up':                      code = 0; break&#10;		case 'stop up':                 code = 1; break&#10;		case 'down':                    code = 2; break&#10;		case 'stop down':               code = 3; break&#10;		case 'left':                    code = 4; break&#10;		case 'stop left':               code = 5; break&#10;		case 'right':                   code = 6; break&#10;		case 'stop right':              code = 7; break&#10;		case 'center':                  code = 25; break&#10;		case 'vertical patrol':         code = 26; break&#10;		case 'stop vertical patrol':    code = 27; break&#10;		case 'horizontal patrol':       code = 28; break&#10;		case 'stop horizontal patrol':  code = 29; break&#10;		// FIXME: No idea what the following mean, so not offerred above.&#10;		case 'io output high':          code = 94; break&#10;		case 'io output low':           code = 95; break&#10;	}&#10;	var encodedArgs = 'user=' + get('username') + '&amp;pwd=' + get('password');&#10;	if (code &gt;= 0) {&#10;	    command = 'decoder_control';&#10;	    encodedArgs += '&amp;command=' + code;&#10;	}&#10;    var additionalArgs = querystring.stringify(get('arguments')).trim();&#10;    if (additionalArgs !== &quot;&quot;) {&#10;        encodedArgs += '&amp;' + additionalArgs;&#10;    }&#10;    var result = command + '.cgi?' + encodedArgs;&#10;    console.log(result);&#10;    return result;&#10;}&#10;&#10;/** Upon wrapup, attempt to stop the camera videostream.  */&#10;exports.wrapup = function () {&#10;    this.ssuper.wrapup();&#10;    // Assume any command will work to stop the stream.&#10;    alternateCommand = 'stop up';&#10;    // No need to specify a callback.&#10;    this.issueCommand();&#10;};&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="http://www.terraswarm.org/accessors/cameras/Foscam.js">
        </property>
        <property name="command" class="ptolemy.actor.parameters.PortParameter" value="snapshot">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="arguments" class="ptolemy.actor.parameters.PortParameter" value="">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="username" class="ptolemy.data.expr.StringParameter" value="admin">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="password" class="ptolemy.data.expr.StringParameter" value="">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{150.0, 120.0}">
        </property>
        <property name="options" class="ptolemy.actor.parameters.PortParameter" value="{&quot;url&quot;:{&quot;host&quot;:&quot;10.0.0.46&quot;, &quot;port&quot;:80}}">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="outputCompleteResponseOnly" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <port name="command" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="arguments" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="options" class="ptolemy.actor.parameters.ParameterPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="response" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="status" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="headers" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
        <port name="body" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
            <property name="_showName" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
            <property name="defaultValue" class="ptolemy.data.expr.Parameter">
            </property>
        </port>
    </entity>
    <entity name="Stop" class="ptolemy.actor.lib.Stop">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{625.0, 250.0}">
        </property>
    </entity>
    <entity name="MicrostepDelay" class="ptolemy.actor.lib.MicrostepDelay">
        <property name="_location" class="ptolemy.kernel.util.Location" value="{505.0, 250.0}">
        </property>
    </entity>
    <entity name="Const" class="ptolemy.actor.lib.Const">
        <property name="value" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <doc>Create a constant sequence.</doc>
        <property name="_icon" class="ptolemy.vergil.icon.BoxedValueIcon">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="value">
            </property>
            <property name="displayWidth" class="ptolemy.data.expr.Parameter" value="60">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{440.0, 250.0}">
        </property>
    </entity>
    <relation name="relation" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;ImageDisplay.input&quot;,x=425.0,y=110.0}, tail={id=&quot;Expression.output&quot;,x=305.0,y=110.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;SingleEvent.output&quot;,x=35.0,y=130.0}, tail={id=&quot;Foscam.trigger&quot;,x=150.0,y=120.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation4" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Errors.input&quot;,x=280.0,y=310.0}, tail={id=&quot;Foscam.error&quot;,x=150.0,y=120.0}, points={150.0,310.0} } }">
        </property>
    </relation>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Headers.input&quot;,x=280.0,y=255.0}, tail={id=&quot;Foscam.headers&quot;,x=150.0,y=120.0}, points={225.0,255.0,225.0,130.0} } }">
        </property>
    </relation>
    <relation name="relation2" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Stop.input&quot;,x=625.0,y=250.0}, tail={id=&quot;MicrostepDelay.output&quot;,x=505.0,y=250.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation8" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;MicrostepDelay.input&quot;,x=505.0,y=250.0}, tail={id=&quot;Const.output&quot;,x=440.0,y=250.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation3" class="ptolemy.actor.TypedIORelation">
        <property name="width" class="ptolemy.data.expr.Parameter" value="-1">
        </property>
        <vertex name="vertex1" value="{375.0, 200.0}">
        </vertex>
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Foscam.status&quot;,x=150.0,y=120.0}, tail={id=&quot;relation3.vertex1&quot;,x=375.0,y=200.0}, points={240.0,120.0,240.0,200.0} },{ head={id=&quot;Const.trigger&quot;,x=440.0,y=250.0}, tail={id=&quot;relation3.vertex1&quot;,x=375.0,y=200.0}, points={375.0,250.0} },{ head={id=&quot;Status.input&quot;,x=415.0,y=200.0}, tail={id=&quot;relation3.vertex1&quot;,x=375.0,y=200.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation5" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;Foscam.response&quot;,x=150.0,y=120.0}, tail={id=&quot;Expression.in&quot;,x=305.0,y=110.0}, points={} } }">
        </property>
    </relation>
    <link port="SingleEvent.output" relation="relation7"/>
    <link port="Status.input" relation="relation3"/>
    <link port="Headers.input" relation="relation6"/>
    <link port="Errors.input" relation="relation4"/>
    <link port="ImageDisplay.input" relation="relation"/>
    <link port="Expression.output" relation="relation"/>
    <link port="Expression.in" relation="relation5"/>
    <link port="Foscam.error" relation="relation4"/>
    <link port="Foscam.trigger" relation="relation7"/>
    <link port="Foscam.response" relation="relation5"/>
    <link port="Foscam.status" relation="relation3"/>
    <link port="Foscam.headers" relation="relation6"/>
    <link port="Stop.input" relation="relation2"/>
    <link port="MicrostepDelay.input" relation="relation8"/>
    <link port="MicrostepDelay.output" relation="relation2"/>
    <link port="Const.output" relation="relation8"/>
    <link port="Const.trigger" relation="relation3"/>
</entity>
